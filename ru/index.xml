<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Roman Kurnovskii</title><link>https://romankurnovskii.com/ru/</link><description>Recent content on Roman Kurnovskii</description><generator>Hugo -- gohugo.io</generator><language>ru</language><copyright>&amp;copy; 2022 &lt;a href="https://romankurnovskii.com">Roman Kurnovskii&lt;/a> personal page</copyright><lastBuildDate>Thu, 26 Jan 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://romankurnovskii.com/ru/index.xml" rel="self" type="application/rss+xml"/><item><title>Введение</title><link>https://romankurnovskii.com/ru/docs/python101/01-intro/</link><pubDate>Tue, 28 Jun 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/python101/01-intro/</guid><description>Добро пожаловать в Python 101! Я написал эту книгу, чтобы помочь вам изучить Python 3. Она не претендует на роль исчерпывающего справочника. Напротив, ее цель - познакомить вас со строительными блоками Python, чтобы вы могли сами написать что-нибудь полезное. Многие учебники по программированию учат только языку, но не идут дальше этого. Я постараюсь не только ознакомить вас с основами, но и показать, как создавать полезные программы. Теперь вы можете задаться вопросом, почему простого изучения основ недостаточно.</description></item><item><title>Часть I - Основы</title><link>https://romankurnovskii.com/ru/docs/python101/01-part_i/</link><pubDate>Tue, 28 Jun 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/python101/01-part_i/</guid><description>В первой части мы изучим основы языка программирования Python. Этот раздел книги должен подготовить вас к использованию всех строительных блоков Python, чтобы вы были готовы уверенно взяться за следующие разделы.
Давайте рассмотрим, что мы будем изучать:
IDLE Строки Списки, словари и кортежи Условные операторы Циклы Генераторы Обработка исключений Файловый ввод-вывод Импорт модулей и пакетов Функции Классы В первой главе этого раздела вы познакомитесь со встроенной средой разработки Python, которая называется IDLE. В следующих двух главах мы рассмотрим некоторые типы Python, такие как строки, списки и словари.</description></item><item><title>1. Программирование IDLE</title><link>https://romankurnovskii.com/ru/docs/python101/chapter1_idle/</link><pubDate>Wed, 22 Jun 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/python101/chapter1_idle/</guid><description>Глава 1 - Программирование IDLE Использование IDLE Python поставляется с собственным редактором кода: IDLE (Integrated Development and Learning Environment). Существует предание, что название IDLE происходит от имени Эрика Айдла, актера из &amp;ldquo;Монти Пайтона&amp;rdquo;. IDE - это редактор для программистов, который обеспечивает цветную подсветку ключевых слов языка, автозаполнение, &amp;ldquo;экспериментальный&amp;rdquo; отладчик и множество других интересных вещей. Вы можете найти IDE к большинству популярных языков, а некоторые IDE работают с несколькими языками.
IDLE - это своего рода легкая IDE, но в ней есть все перечисленные элементы.</description></item><item><title>1. DevOps - общее представление</title><link>https://romankurnovskii.com/ru/docs/90daysofdevops/day01/</link><pubDate>Thu, 21 Apr 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/90daysofdevops/day01/</guid><description>Введение - День 1 Первый день из 90, чтобы получить хорошее базовое понимание DevOps и инструментов.
Этот путь обучения начался для меня несколько лет назад, но тогда я сосредоточился на платформах виртуализации и облачных технологиях. В основном я изучал инфраструктуру как код и управление конфигурацией приложений с помощью Terraform и Chef.
Перенесемся в март 2021 года. Мне представилась прекрасная возможность сосредоточить свои усилия на стратегии Cloud Native в Kasten by Veeam. Это должно было стать огромным фокусом на Kubernetes и DevOps, а также на сообществе, окружающем эти технологии.</description></item><item><title>Мультимедиа-устройства</title><link>https://romankurnovskii.com/ru/docs/webrtc/media-devices/</link><pubDate>Sat, 02 Jul 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/webrtc/media-devices/</guid><description>Мультимедиа-устройства Начало работы с мультимедийными устройствами При web-разработке WebRTC-стандарт предоставляет API для доступа к камерам и микрофонам, подключенным к компьютеру или смартфону. Эти устройства обычно называются мультимедийными устройствами, и к ним можно получить доступ с помощью Java-скрипта через объект navigator.mediaDevices, который реализует интерфейс MediaDevices. С помощью этого объекта мы можем просмотреть все подключенные устройства, отслеживать изменения статуса устройства (когда устройство подключается или отключается) и открывать устройство для извлечения мультимедийного потока (см. ниже). Чаще всего для этого используют функцию getUserMedia(), которая возвращает промис, который будет преобразован в MediaStream для соответствующих мультимедийных устройств.</description></item><item><title>2. Все о строках</title><link>https://romankurnovskii.com/ru/docs/python101/chapter2_strings/</link><pubDate>Tue, 28 Jun 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/python101/chapter2_strings/</guid><description>В Python существует несколько типов данных. Основные типы данных, с которыми вы, вероятно, будете чаще всего встречаться, - это строка, целое число, плавающая цифра, список, словарь и кортеж. В этой главе мы рассмотрим строковый тип данных. Вы удивитесь, как много вещей можно делать со строками в Python прямо из коробки. Существует также модуль string, который можно импортировать для получения доступа к еще большей функциональности, но мы не будем рассматривать его в этой главе. Вместо этого мы рассмотрим следующие темы:</description></item><item><title>2. Задачи DevOps-инженера</title><link>https://romankurnovskii.com/ru/docs/90daysofdevops/day02/</link><pubDate>Fri, 22 Apr 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/90daysofdevops/day02/</guid><description>Обязанности DevOps специалиста Надеюсь, вы приступили к этому после просмотра ресурсов и публикации в День 1 из #90DaysOfDevOps
В первом посте был краткий обзор, но теперь мы должны углубиться в концепцию DevOps и понять, что при создании приложения есть две основные части. У нас есть часть Разработка, где разработчики программного обеспечения программируют приложение и тестируют его. Затем у нас есть часть Операции, где приложение развертывается и поддерживается на сервере.
DevOps — это связующее звено между двумя Чтобы разобраться с DevOps или задачами, которые будет выполнять инженер DevOps, нам нужно понять инструменты или процесс, а также разобраться как они вместе они вместе взаимодейтвуют.</description></item><item><title>Захват мультимедиа и ограничения</title><link>https://romankurnovskii.com/ru/docs/webrtc/media-capture-and-constraints/</link><pubDate>Sat, 02 Jul 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/webrtc/media-capture-and-constraints/</guid><description>Захват мультимедиа и ограничения Мультимедиа-часть WebRTC показывает, как получить доступ к оборудованию, способному записывать видео и аудио (например, камеры и микрофоны), а также как работают медиа-потоки. И помимо этого – средства отображения, которые позволяют делать захват экрана.
Мультимедиа-устройства Все камеры и микрофоны, поддерживаемые браузером, доступны и управляются через объект navigator.mediaDevices. Приложения могут получать текущий список подсоединенных устройств и отслеживать изменения, т.к. многие камеры и микрофоны подсоединены через USB, и могут подключаться/отключаться в течение работы приложения. Поскольку статус мультимедиа-устройства может меняться в любой момент времени, рекомендуем, чтоб приложения регистрировали все изменения в статусе устройства для правильной обработки статусов изменений.</description></item><item><title>3. Списки, кортежи и словари</title><link>https://romankurnovskii.com/ru/docs/python101/chapter3_lists_dicts/</link><pubDate>Tue, 28 Jun 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/python101/chapter3_lists_dicts/</guid><description>В Python есть еще несколько важных типов данных, которые вы, вероятно, будете использовать каждый день. Они называются списками, кортежами и словарями. Цель этой главы - познакомить вас с каждым из этих типов данных. Они не являются особенно сложными, так что думаю, что вам будет очень легко научиться их использовать. Когда вы освоите эти три типа данных, а также строковый тип данных из предыдущей главы, вы пройдете довольно большой путь в изучении Python. Вы будете использовать эти четыре строительных блока в 99% всех приложений, которые вы будете писать.</description></item><item><title>3. Ориентированность на приложения</title><link>https://romankurnovskii.com/ru/docs/90daysofdevops/day03/</link><pubDate>Sat, 23 Apr 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/90daysofdevops/day03/</guid><description>Жизненный цикл DevOps — ориентированность на приложения По мере того, как мы будем продолжать в течение следующих нескольких недель, мы будем сталкиваться с этими названиями (Continuous Development, Testing, Deployment, Monitor) (непрерывная разработка, тестирование, развертывание, мониторинг) снова и снова. Если вы стремитесь статья инженером DevOps, то повторяемость будет тем, к чему вы привыкнете, но постоянное улучшение каждый раз — это еще одна вещь, которая делает вещи интересными.
В этом часе мы рассмотрим общий вид приложения от начала до конца, а затем вернемся назад, как в постоянном цикле.</description></item><item><title>Одноранговые соединения</title><link>https://romankurnovskii.com/ru/docs/webrtc/peer-connections/</link><pubDate>Sat, 02 Jul 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/webrtc/peer-connections/</guid><description>Начало работы с одноранговыми соединениями Одноранговые соединения – часть спецификации WebRTC, которая занимается связью двух приложений на различных компьютерах для коммуникации через P2P-протокол. Коммуникация между узлами может быть видео-, аудио- или произвольными двоичными данными (для клиентов, поддерживающих RTCDataChannel API). Чтобы выяснить, как два узла могут быть соединены, оба клиента должны предоставить конфигурацию ICE-Server. Это или STUN, или TURN-сервер, и их роль – обеспечить ICE-кандидатов для каждого клиента, который затем передается на удаленный узел. Эта «передача» ICE-кандидатов обычно называется «сигналинг».</description></item><item><title>4. Условия</title><link>https://romankurnovskii.com/ru/docs/python101/chapter4_conditionals/</link><pubDate>Tue, 28 Jun 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/python101/chapter4_conditionals/</guid><description>В каждом компьютерном языке есть хотя бы один условный оператор. Чаще всего этот оператор представляет собой структуру if/elif/else.
В Python 3.10 добавилась структура match/case
Условный оператор проверяет, является ли утверждение истинным или ложным. Это, собственно, все, что он делает. Также рассмотрим следующие булевы операции: and, or и not. Эти операции могут изменять поведение условного оператора простыми и сложными способами, в зависимости от проекта.
Оператор if Оператор if в Python довольно прост в использовании. Давайте потратим несколько минут на рассмотрение нескольких примеров, чтобы лучше познакомиться с этой конструкцией.</description></item><item><title>4. DevOps и Agile</title><link>https://romankurnovskii.com/ru/docs/90daysofdevops/day04/</link><pubDate>Sun, 24 Apr 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/90daysofdevops/day04/</guid><description>DevOps и Agile Вы знаете разницу между DevOps и Agile? Они формировались как самостоятельные понятия. Но теперь эти два термина сливаются.
В этом посте мы рассмотрим важные различия между Agile и DevOps и выясним, почему они так тесно связаны.
Я думаю, что хорошее место для начала — это немного больше узнать об общем подходе, который я увидел в изучении этой области, а именно о DevOps и Agile, даже несмотря на то, что у них схожие цели и процессы.</description></item><item><title>Удаленные потоки</title><link>https://romankurnovskii.com/ru/docs/webrtc/remote-streams/</link><pubDate>Sat, 02 Jul 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/webrtc/remote-streams/</guid><description>Начало работы с удаленными потоками Как только RTCPeerConnection подключился к удаленному узлу, между ними можно передавать аудио- и видео-потоки. Это точка, в которой мы подключаем поток, полученный от getUserMedia(), к RTCPeerConnection. Медиаопоток состоит как минимум из одной дорожки мультимедиа, и они по отдельности добавляются в RTCPeerConnection, когда мы хотим передать данные удаленному узлу.
1const localStream = await getUserMedia({vide: true, audio: true}); 2const peerConnection = new RTCPeerConnection(iceConfig); 3localStream.getTracks().forEach(track =&amp;gt; { 4 peerConnection.addTrack(track, localStream); 5}); Дорожки можно добавлять в RTCPeerConnection до подключения к удаленному узлу, поэтому имеет смысл выполнить эту настройку как можно раньше, а не ждать завершения соединения.</description></item><item><title>5. Циклы</title><link>https://romankurnovskii.com/ru/docs/python101/chapter5_loops/</link><pubDate>Tue, 28 Jun 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/python101/chapter5_loops/</guid><description>В каждом языке программирования, который я пробовал, есть какая-то конструкция циклов. В большинстве из них их больше одного. В мире Python есть два типа циклов:
цикл for и цикл while Вы увидите, что цикл for является самым популярным. Циклы используются, когда вы хотите сделать что-то много раз. Обычно вам нужно выполнить какую-то операцию или набор операций над фрагментом данных снова и снова. Вот здесь-то и приходят на помощь циклы. С их помощью очень легко применять подобную логику к вашим данным.</description></item><item><title>5. Plan > Code > Build > Testing > Release > Deploy > Operate > Monitor</title><link>https://romankurnovskii.com/ru/docs/90daysofdevops/day05/</link><pubDate>Mon, 25 Apr 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/90daysofdevops/day05/</guid><description>Сегодня мы сосредоточимся на отдельных шагах от начала до конца и на непрерывном цикле приложения в мире DevOps.
План Все начинается с процесса планирования, когда команда разработчиков собирается вместе и выясняет, какие типы функций и исправлений ошибок они собираются внедрить в следующем спринте. Это возможность для вас как инженера DevOps принять участие в этом и узнать, какие вещи будут происходить на вашем пути, с которыми вам нужно участвовать, а также повлиять на их решения или их путь и как бы помочь им работать с инфраструктура, которую вы построили, или направьте их к чему-то, что будет работать лучше для них, если они не на этом пути, и поэтому одна ключевая вещь, на которую здесь следует указать, это то, что разработчики или команда разработчиков программного обеспечения являются вашим клиентом как DevOps инженер, так что это ваша возможность поработать с вашим клиентом до того, как он пойдет по плохому пути.</description></item><item><title>Каналы данных</title><link>https://romankurnovskii.com/ru/docs/webrtc/data-channels/</link><pubDate>Sat, 02 Jul 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/webrtc/data-channels/</guid><description>Стандарт WebRTC также охватывает API для отправки произвольных данных через RTCPeerConnection. Это происходит через запрос createDataChannel() для объекта RTCPeerConnection, который возвращает объект RTCDataChannel.
const peerConnection = new RTCPeerConnection(configuration); const dataChannel = peerConnection.createDataChannel();
Удаленный узел может получать каналы данных через отслеживание события datachannel в объекте RTCPeerConnection. Полученное событие имеет тип RTCDataChannelEvent и содержит свойство channel, которое представляет RTCDataChannel между двумя узлами.
1const peerConnection = new RTCPeerConnection(configuration); 2peerConnection.addEventListener(&amp;#39;datachannel&amp;#39;, event =&amp;gt; { 3 const dataChannel = event.channel; 4}); События Open и Close Прежде чем канал данных можно будет использовать для отправки данных, клиент должен дождаться его открытия.</description></item><item><title>6. Генераторы в Python</title><link>https://romankurnovskii.com/ru/docs/python101/chapter6_comprehensions/</link><pubDate>Tue, 28 Jun 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/python101/chapter6_comprehensions/</guid><description>В языке Python есть несколько методов создания списков и словарей, которые известны как генераторы. Существует также третий тип генератора для создания набора в Python. В этой главе мы узнаем, как использовать каждый тип генераторов. Вы увидите, что конструкция генератора основываются на знаниях, полученных из предыдущих глав, поскольку они содержат циклы и условия.
Генераторы списков Генераторы списков в Python очень удобны. Но их также бывает трудно понять, когда и зачем их использовать. Генераторы списков, как правило, сложнее для чтения, чем простое использование цикла for.</description></item><item><title>6. DevOps - Истории</title><link>https://romankurnovskii.com/ru/docs/90daysofdevops/day06/</link><pubDate>Tue, 26 Apr 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/90daysofdevops/day06/</guid><description>DevOps - Истории компаний DevOps с самого начала считался недосягаемым для многих из нас, поскольку у нас не было среды или требований, подобных Netflix или Fortune 500, но подумайте, что теперь это начинает становиться нормой, когда мы внедряем практику DevOps внутри. любой вид бизнеса.
По второй ссылке ниже в справочных материалах вы увидите множество различных отраслей и вертикалей, использующих DevOps и оказывающих огромное положительное влияние на свои бизнес-цели.
Очевидно, что основным преимуществом здесь является DevOps, если он выполнен правильно, он должен помочь вашему бизнесу повысить скорость и качество разработки программного обеспечения.</description></item><item><title>TURN сервер</title><link>https://romankurnovskii.com/ru/docs/webrtc/turn-server/</link><pubDate>Sat, 02 Jul 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/webrtc/turn-server/</guid><description>Для работы большинства приложений WebRTC необходим сервер для ретрансляции трафика между узлами, поскольку прямой сокет часто невозможен между клиентами (если только они не находятся в одной локальной сети). Обычный способ решить эту проблему — использовать TURN-сервер (Traversal Using Relay NAT), который представляет собой протокол ретрансляции сетевого трафика.
В настоящее время существует несколько вариантов TURN-серверов, доступных в Интернете, как в виде самостоятельных приложений (например, проект COTURN с открытым исходным кодом), так и в виде облачных сервисов.</description></item><item><title>7. Обработка исключений</title><link>https://romankurnovskii.com/ru/docs/python101/chapter7_exception_handling/</link><pubDate>Tue, 28 Jun 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/python101/chapter7_exception_handling/</guid><description>Что вы делаете, когда в вашей программе происходит что-то плохое? Допустим, вы пытаетесь открыть файл, но вводите неправильный путь или запрашиваете у пользователя информацию, а он вводит какой-то мусор. Вы не хотите, чтобы ваша программа аварийно завершилась, поэтому вы реализуете обработку исключений. В Python эта конструкция обычно обернута в так называемый try/except. В этой главе мы рассмотрим следующие темы:
Общие типы исключений Обработка исключений с помощью try/except Изучим, как работает try/except/finally Исследуем, как оператор else работает в сочетании с try/except.</description></item><item><title>7. DevOps - изучение языка программирования</title><link>https://romankurnovskii.com/ru/docs/90daysofdevops/day07/</link><pubDate>Wed, 27 Apr 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/90daysofdevops/day07/</guid><description>Общая картина: DevOps и изучение языка программирования Я думаю, будет справедливо сказать, что для достижения успеха в качестве инженера DevOps в долгосрочной перспективе необходимо знать хотя бы один язык программирования на базовом уровне. Я хочу провести это первое занятие в этой статье, чтобы выяснить, почему это такой важный навык, и, надеюсь, к концу этой недели или раздела вы будете лучше понимать, почему, как и что делать. делайте, чтобы продвигаться в своем учебном путешествии.
Я думаю, что если бы я спросил в социальных сетях, нужны ли вам навыки программирования для ролей, связанных с DevOps, ответ, скорее всего, будет утвердительным?</description></item><item><title>Тестирование приложений WebRTC</title><link>https://romankurnovskii.com/ru/docs/webrtc/testing/</link><pubDate>Sat, 02 Jul 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/webrtc/testing/</guid><description>При написании автоматических тестов для приложений WebRTC, существуют полезные конфигурации, которые можно включить для браузеров, и которые упростят разработку и тестирование.
Chrome При запуске автоматических тестов в Chrome полезны следующие функции:
&amp;ndash;allow-file-access-from-files — дает API-доступ для file://URLs &amp;ndash;disable-translate — отключает всплывающие окна &amp;ndash;use-fake-ui-for-media-stream — Представляет поддельные медиапотоки. Полезно при работе на CI-серверах. &amp;ndash;use-file-for-fake-audio-capture= — дает возможность использовать файл при захвате звука. &amp;ndash;use-file-for-fake-video-capture= — дает возможность использовать файл при захвате видео. &amp;ndash;headless - Запустить в автономном режиме.</description></item><item><title>8. Работа с файлами</title><link>https://romankurnovskii.com/ru/docs/python101/chapter8_file_io/</link><pubDate>Tue, 28 Jun 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/python101/chapter8_file_io/</guid><description>Эта глава знакомит с темой чтения и записи данных в файлы на жестком диске. Вы увидите, что читать и записывать файлы в Python очень просто. Давайте приступим!
Как читать файл В Python есть встроенная функция open, которую мы можем использовать для открытия файла для чтения. Создайте текстовый файл с именем &amp;ldquo;test.txt&amp;rdquo; со следующим содержимым:
1This is a test file 2line 2 3line 3 4this line intentionally left blank Вот несколько примеров, которые показывают, как использовать open для чтения:</description></item><item><title>8. Настройка DevOps окружения для запуска Hello World на Go</title><link>https://romankurnovskii.com/ru/docs/90daysofdevops/day08/</link><pubDate>Thu, 28 Apr 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/90daysofdevops/day08/</guid><description>Настройка DevOps окружения для запуска Hello World на Go Прежде чем мы приступим к некоторым основам Go, мы должны установить Go на нашу рабочую станцию и сделать то, чему нас учит каждый модуль «Изучение программирования 101», а именно создать приложение Hello World. Так как здесь будут описаны шаги по установке Go на ваш ПК, мы попытаемся задокументировать процесс в картинках, чтобы людям было легко следовать за ним.
Возможные варианты установки Golang
Исполняемый файл Пакет из исходного кода Mac Os Homebrew 1#Homebrew install command 2brew install go Быстрый тьюториал для ознакомления с языком Go</description></item><item><title>Формат SDP унифицированного плана – план перехода</title><link>https://romankurnovskii.com/ru/docs/webrtc/unified-plan-transition-guide/</link><pubDate>Sat, 02 Jul 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/webrtc/unified-plan-transition-guide/</guid><description>Google планирует перевести реализацию WebRTC в Chrome с текущего SDP-формата (называемого «Plan B») на формат соответствующих стандартов («Unified Plan», draft-ietf-rtcweb-jsep) в течение следующих нескольких кварталов. План включает 5 этапов и одну временную функцию API.
Кто будет затронут? Людям, которые используют несколько аудиодорожек или несколько видеодорожек в одном PeerConnection, придется протестировать свой продукт в рамках Унифицированного Плана и, соответственно, адаптироваться. В случае, когда вызов инициируется с конечной точки не из Chrome, и на него отвечают в Chrome, форма запросов может измениться.</description></item><item><title>9. Импортирование</title><link>https://romankurnovskii.com/ru/docs/python101/chapter9_imports/</link><pubDate>Tue, 28 Jun 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/python101/chapter9_imports/</guid><description>Python поставляется с большим количеством готового кода. Эти части кода известны как модули и пакеты. Модуль - это один импортируемый файл Python, а пакет состоит из двух или более модулей. Пакет может быть импортирован так же, как и модуль. Каждый раз, когда вы сохраняете собственный сценарий Python, вы создаете модуль. Это, конечно, может быть далеко не самым полезным модулем, но тем не менее. В этой главе мы узнаем, как импортировать модули, используя несколько различных методов. Давайте начнем!</description></item><item><title>9. Как работает hello-world на Golang</title><link>https://romankurnovskii.com/ru/docs/90daysofdevops/day09/</link><pubDate>Fri, 29 Apr 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/90daysofdevops/day09/</guid><description>Разберемся как работает hello-world Как работает Go Вчера мы прошли процедуру установки Go на ПК, а затем создали наше первое приложение Go.
В этом разделе мы собираемся глубже изучить код и понять еще несколько вещей о языке Go.
Что такое компиляция? Прежде чем мы перейдем к 6 строкам кода Hello World, которые написали вчера, нам нужно немного разобраться в компиляции.
Языки программирования, которые мы обычно используем, такие как Python, Java, Go и C++, являются языками высокого уровня.</description></item><item><title>10. Функции</title><link>https://romankurnovskii.com/ru/docs/python101/chapter10_functions/</link><pubDate>Tue, 28 Jun 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/python101/chapter10_functions/</guid><description>Функция - это структура, которую вы определяете. Вы можете решать, есть ли у них аргументы или нет. Вы можете добавить аргументы в виде ключевых слов и аргументы по умолчанию. Функция - это блок кода, который начинается с ключевого слова def, имени функции и двоеточия. Вот простой пример:
1 def a_function(): 2 print(&amp;#34;You just created a function!&amp;#34;) Эта функция ничего не делает, кроме вывода какого-то текста. Чтобы вызвать функцию, нужно напечатать ее имя, за которым следуют открытые и закрытые круглые скобки:</description></item><item><title>10. Окружение Go</title><link>https://romankurnovskii.com/ru/docs/90daysofdevops/day10/</link><pubDate>Sat, 30 Apr 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/90daysofdevops/day10/</guid><description>Окружение Go В 8-м дне мы кратко рассмотрели рабочее пространство Go, чтобы запустить его и перейти к демонстрации «Hello #90DaysOfDevOps». Но мы должны немного рассказать о рабочем пространстве Go.
Помните, что мы выбрали значения по умолчанию, а затем прошли и создали нашу папку Go в GOPATH, который уже был определен, но на самом деле этот GOPATH можно изменить, чтобы он находился там, где вы хотите.
Если вы запустите
1echo $GOPATH Вывод должен быть похож на мой (может быть с другим именем пользователя), а именно:</description></item><item><title>Загрузка кода</title><link>https://romankurnovskii.com/ru/docs/webrtc/practice/practice-get-code/</link><pubDate>Sat, 02 Jul 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/webrtc/practice/practice-get-code/</guid><description>Загрузка кода Если вы знакомы с сайтом git, вы можете скачать код для данной codelab с GitHub, клонировав его: git clone https://github.com/googlecodelabs/webrtc-web
Можно также нажать на ссылку ниже для загрузки zip-файла кода: https://github.com/googlecodelabs/webrtc-web/archive/master.zip
Откройте загруженный zip-файл. Разархивируйте папку проекта (adaptive-web-media), в которой по одной папке на каждый шаг этой codelab, и есть все необходимые вам ресурсы. Вы будете выполнять все действия в папке work.
Папки step-nn содержат финальную версию для каждого шага этой codelab. Они там для справки.</description></item><item><title>Обзор</title><link>https://romankurnovskii.com/ru/docs/webrtc/practice/practice-overview/</link><pubDate>Sat, 02 Jul 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/webrtc/practice/practice-overview/</guid><description>Создайте приложение для получения видео и снимков с веб-камеры, с возможностью делиться ими в P2P через WebRTC. В ходе codelab вы узнаете, как использовать основные API WebRTC и настроить сервер обмена сообщениями через Node.js.
Чему вы научитесь
получать видео с вашей веб-камеры потоковое видео через RTCPeerConnection потоковая передача данных через RTCDataChannel настраивать сигналинг для обмена сообщениями комбинировать одноранговое соединение и сигналинг делать фото и передавать его через канал данных Что понадобится
Chrome версии 47 и выше веб-сервер для Chrome https://chrome.</description></item><item><title>11. Классы</title><link>https://romankurnovskii.com/ru/docs/python101/chapter11_classes/</link><pubDate>Tue, 28 Jun 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/python101/chapter11_classes/</guid><description>Все в Python является объектом. Это означает, что каждая сущность в Python имеет методы и значения. Причина в том, что в основе всего лежит класс.
1&amp;gt;&amp;gt;&amp;gt; x = &amp;#34;Some String&amp;#34; 2&amp;gt;&amp;gt;&amp;gt; dir(x) 3[&amp;#39;__add__&amp;#39;, &amp;#39;__class__&amp;#39;, &amp;#39;__contains__&amp;#39;, &amp;#39;__delattr__&amp;#39;, &amp;#39;__doc__&amp;#39;, &amp;#39;__eq__&amp;#39;, 4&amp;#39;__format__&amp;#39;, &amp;#39;__ge__&amp;#39;, &amp;#39;__getattribute__&amp;#39;, &amp;#39;__getitem__&amp;#39;, &amp;#39;__getnewargs__&amp;#39;, 5&amp;#39;__getslice__&amp;#39;, &amp;#39;__gt__&amp;#39;, &amp;#39;__hash__&amp;#39;, &amp;#39;__init__&amp;#39;, &amp;#39;__le__&amp;#39;, &amp;#39;__len__&amp;#39;, &amp;#39;__lt__&amp;#39;, 6&amp;#39;__mod__&amp;#39;, &amp;#39;__mul__&amp;#39;, &amp;#39;__ne__&amp;#39;, &amp;#39;__new__&amp;#39;, &amp;#39;__reduce__&amp;#39;, &amp;#39;__reduce_ex__&amp;#39;, &amp;#39;__repr__&amp;#39;, 7&amp;#39;__rmod__&amp;#39;, &amp;#39;__rmul__&amp;#39;, &amp;#39;__setattr__&amp;#39;, &amp;#39;__sizeof__&amp;#39;, &amp;#39;__str__&amp;#39;, &amp;#39;__subclasshook__&amp;#39;, 8&amp;#39;_formatter_field_name_split&amp;#39;, &amp;#39;_formatter_parser&amp;#39;, &amp;#39;capitalize&amp;#39;, &amp;#39;center&amp;#39;, &amp;#39;count&amp;#39;, 9&amp;#39;decode&amp;#39;, &amp;#39;encode&amp;#39;, &amp;#39;endswith&amp;#39;, &amp;#39;expandtabs&amp;#39;, &amp;#39;find&amp;#39;, &amp;#39;format&amp;#39;, &amp;#39;index&amp;#39;, &amp;#39;isalnum&amp;#39;, 10&amp;#39;isalpha&amp;#39;, &amp;#39;isdigit&amp;#39;, &amp;#39;islower&amp;#39;, &amp;#39;isspace&amp;#39;, &amp;#39;istitle&amp;#39;, &amp;#39;isupper&amp;#39;, &amp;#39;join&amp;#39;, &amp;#39;ljust&amp;#39;, 11&amp;#39;lower&amp;#39;, &amp;#39;lstrip&amp;#39;, &amp;#39;partition&amp;#39;, &amp;#39;replace&amp;#39;, &amp;#39;rfind&amp;#39;, &amp;#39;rindex&amp;#39;, &amp;#39;rjust&amp;#39;, &amp;#39;rpartition&amp;#39;, 12&amp;#39;rsplit&amp;#39;, &amp;#39;rstrip&amp;#39;, &amp;#39;split&amp;#39;, &amp;#39;splitlines&amp;#39;, &amp;#39;startswith&amp;#39;, &amp;#39;strip&amp;#39;, &amp;#39;swapcase&amp;#39;, &amp;#39;title&amp;#39;, 13&amp;#39;translate&amp;#39;, &amp;#39;upper&amp;#39;, &amp;#39;zfill&amp;#39;] Здесь у нас есть строка, присвоенная переменной x.</description></item><item><title>11. Переменные и константы в Go</title><link>https://romankurnovskii.com/ru/docs/90daysofdevops/day11/</link><pubDate>Sun, 01 May 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/90daysofdevops/day11/</guid><description>Прежде чем мы перейдем к темам сегодняшнего дня, я хочу выразить огромную благодарность Techworld with Nana и этому фантастическому краткому путешествию по основам Go.
В 8-м дне мы настроили нашу среду, в 9-м дне мы разобрали код Hello #90DaysOfDevOps, а в 10-м дне) мы поработали с нашей рабочей средой Go и немного углубились в компиляцию и запуск кода.
Сегодня мы рассмотрим переменные, константы и типы данных при написании новой программы.
Переменные и константы в Go Давайте начнем с планирования нашего приложения, я думаю, было бы неплохо поработать над программой, которая сообщает нам, сколько дней осталось в нашем испытании #90DaysOfDevOps.</description></item><item><title>Потоковое видео с веб-камеры</title><link>https://romankurnovskii.com/ru/docs/webrtc/practice/practice-stream-to-cam/</link><pubDate>Sat, 02 Jul 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/webrtc/practice/practice-stream-to-cam/</guid><description>Чему вы научитесь:
На этом шаге вы узнаете, как
получить видеопоток с вашей веб-камеры управлять воспроизведением потока использовать CSS и SVG для обработки видео Полная версия этого шага находится в папке step-01. Немного HTML
Добавьте элемент video и элемент script в index.html в папку work.
1&amp;lt;!DOCTYPE html&amp;gt; 2&amp;lt;html&amp;gt; 3&amp;lt;head&amp;gt; 4 &amp;lt;title&amp;gt;Realtime communication with WebRTC&amp;lt;/title&amp;gt; 5 &amp;lt;link rel=&amp;#34;stylesheet&amp;#34; href=&amp;#34;css/main.css&amp;#34; /&amp;gt; 6&amp;lt;/head&amp;gt; 7&amp;lt;body&amp;gt; 8 &amp;lt;h1&amp;gt;Realtime communication with WebRTC&amp;lt;/h1&amp;gt; 9 &amp;lt;video autoplay playsinline&amp;gt;&amp;lt;/video&amp;gt; 10 &amp;lt;script src=&amp;#34;js/main.js&amp;#34;&amp;gt;&amp;lt;/script&amp;gt; 11&amp;lt;/body&amp;gt; 12&amp;lt;/html&amp;gt; И немного JavaScript</description></item><item><title>12. Интроспекция</title><link>https://romankurnovskii.com/ru/docs/python101/chapter12_introspection/</link><pubDate>Tue, 28 Jun 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/python101/chapter12_introspection/</guid><description>Независимо от того, новичок ли вы в Python, используете ли вы его уже несколько лет или являетесь экспертом, умение использовать возможности интроспекции Python может помочь вам понять ваш код и тот новый пакет с ужасной документацией, который вы только что скачали. Интроспекция - это модное слово, которое означает наблюдение за собой и размышление о своих мыслях, чувствах и желаниях. В мире Python интроспекция - это нечто похожее. В данном случае интроспекция - это использование Python для изучения Python.</description></item><item><title>Часть II - Стандартные модули</title><link>https://romankurnovskii.com/ru/docs/python101/02-part_ii/</link><pubDate>Tue, 28 Jun 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/python101/02-part_ii/</guid><description>Во второй части вы получите сокращенное описание некоторых разделов стандартной библиотеки Python. Причина такого сокращения в том, что стандартная библиотека Python огромна! Поэтому этот раздел предназначен для того, чтобы вы познакомились с использованием модулей, поставляемых вместе с Python. Я расскажу о модулях, которые я чаще всего использую в своей повседневной работе, а также о тех, которые используют мои коллеги. Я думаю, что этот мини-тур подготовит вас к самостоятельной работе.
Что мы будем изучать:
csv ConfigParser logging os smtplib / email subprocess sys thread / queues time / datetime Далее мы научимся использовать ConfigParser, небольшой модуль, позволяющий читать и записывать файлы конфигурации.</description></item><item><title>12. Golang - чтение данных и указатели</title><link>https://romankurnovskii.com/ru/docs/90daysofdevops/day12/</link><pubDate>Mon, 02 May 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/90daysofdevops/day12/</guid><description>Получение данных с клавиуатуры Вчера (Днем 11-м) мы создали нашу первую программу Go, и данные, которые мы хотели получить от пользователя, были созданы как переменные в нашем коде. Теперь мы хотим спросить пользователя данные для ввода, чтобы дать переменной значение для конечного сообщения.
Получение пользовательских данных Прежде чем мы это сделаем, давайте еще раз взглянем на наше приложение и пройдемся по переменным, которые нам нужны в качестве теста, прежде чем получить этот пользовательский ввод.
Давайте теперь добавим новую переменную с именем TwitterName, вы можете найти этот новый код ниже, и если мы запустим этот код, это будет наш вывод.</description></item><item><title>Потоковое видео с помощью RTCPeerConnection</title><link>https://romankurnovskii.com/ru/docs/webrtc/practice/practice-stream-with-rtcpeerconnection/</link><pubDate>Sat, 02 Jul 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/webrtc/practice/practice-stream-with-rtcpeerconnection/</guid><description>Чему вы научитесь
На этом шаге вы узнаете, как:
Абстрагироваться от различий браузера с помощью оболочки WebRTC, adapter.js. Использовать RTCPeerConnection API для потоковой передачи видео. Управлять захватом и потоковой передачей мультимедиа. Полная версия этого шага находится в папке step-2.
Что такое RTCPeerConnection?
RTCPeerConnection - это API для выполнения WebRTC-запросов для потоковой передачи видео и аудио и обмена данными.
В этом примере устанавливается соединение между двумя объектами RTCPeerConnection (известными как узлы) на одной и той же странице.</description></item><item><title>13. Модуль csv</title><link>https://romankurnovskii.com/ru/docs/python101/chapter13_csv/</link><pubDate>Tue, 28 Jun 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/python101/chapter13_csv/</guid><description>Модуль csv дает программисту Python возможность анализировать файлы CSV (Comma Separated Values – переменные, разделенные запятыми). CSV-файл - это текстовый файл, в котором каждая строка содержит несколько полей, разделенных запятыми или каким-либо другим разделителем. Каждую строку можно представить как ряд, а каждое поле - как столбец. Формат CSV не имеет стандарта, но они достаточно похожи, чтобы модуль csv мог читать подавляющее большинство CSV-файлов. Вы также можете записывать CSV-файлы с помощью модуля csv.
Чтение файла CSV Существует два способа чтения CSV-файла.</description></item><item><title>13. Go - подключение Twitter API</title><link>https://romankurnovskii.com/ru/docs/90daysofdevops/day13/</link><pubDate>Tue, 03 May 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/90daysofdevops/day13/</guid><description>Твитните о своем прогрессе с нашим новым приложением В последний день изучения этого языка программирования мы только коснулись его основ, но я думаю, что это начало.
За последние несколько дней мы взяли небольшую идею для приложения и добавили функциональность, в этой статье я хочу воспользоваться преимуществами тех пакетов, которые мы упомянули, и создать функциональность для нашего приложения, чтобы не только дать вам обновление вашего прогресса на экране, но также отправьте твит с подробностями задачи и вашим статусом.</description></item><item><title>Использование RTCDataChannel для обмена данными</title><link>https://romankurnovskii.com/ru/docs/webrtc/practice/practice-rtcdatachannel-exchange-data/</link><pubDate>Sat, 02 Jul 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/webrtc/practice/practice-rtcdatachannel-exchange-data/</guid><description>Чему вы научитесь
как обмениваться данными между узлами WebRTC Полная версия этого шага находится в папке step-03.
Обновите свой HTML
На этом шаге вы будете использовать WebRTC каналы данных для отправки текста между двумя textarea элементами на одной странице. Это опять не сильно применимо на практике, но зато демонстрирует, как WebRTC можно использовать для обмена данными, а также для потоковых видео.
Удалите элементы video и button из index.html и замените их следующим HTML-кодом:
1&amp;lt;textarea id=&amp;#34;dataChannelSend&amp;#34; disabled 2 placeholder=&amp;#34;Press Start, enter some text, then press Send.</description></item><item><title>14. Модуль configparser</title><link>https://romankurnovskii.com/ru/docs/python101/chapter14_config_parser/</link><pubDate>Tue, 28 Jun 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/python101/chapter14_config_parser/</guid><description>Файлы конфигурации используются как пользователями, так и программистами. Обычно они используются для хранения настроек вашего приложения или даже настроек вашей операционной системы. Основная библиотека Python включает модуль configparser, который можно использовать для создания конфигурационных файлов и взаимодействия с ними. В этой главе мы потратим несколько минут на изучение его работы.
Создание конфигурационного файла Создать конфигурационный файл с помощью configparser очень просто. Давайте создадим код для демонстрации:
1import configparser 2 3def createConfig(path): 4 &amp;#34;&amp;#34;&amp;#34; 5 Create a config file 6 &amp;#34;&amp;#34;&amp;#34; 7 config = configparser.</description></item><item><title>14. DevOps и Linux</title><link>https://romankurnovskii.com/ru/docs/90daysofdevops/day14/</link><pubDate>Wed, 04 May 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/90daysofdevops/day14/</guid><description>Общая картина: DevOps и Linux Linux и DevOps имеют очень схожие культуры и взгляды; оба ориентированы на настройку и масштабируемость. Оба эти аспекта Linux имеют особое значение для DevOps.
Многие технологии начинаются с Linux, особенно если они связаны с разработкой программного обеспечения или управлением инфраструктурой.
Кроме того, многие проекты с открытым исходным кодом, особенно инструменты DevOps, с самого начала разрабатывались для работы в Linux.
С точки зрения DevOps или фактически с точки зрения какой-либо операционной роли вы столкнетесь с Linux, я бы сказал, в основном.</description></item><item><title>Настройка службы сигналинга для обмена сообщениями</title><link>https://romankurnovskii.com/ru/docs/webrtc/practice/practice-setup-signaling-service/</link><pubDate>Sat, 02 Jul 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/webrtc/practice/practice-setup-signaling-service/</guid><description>Чему вы научитесь
На этом шаге вы узнаете, как:
Использовать npm для установки взаимосвязей, как указано в package.json Запускать сервер Node.js и использовать node-static для обслуживания статических файлов. Настраивать службу обмена сообщениями на Node.js через Socket.IO . Использовать это для создания ‘комнат&amp;quot; и обмена сообщениями. Полная версия этого шага находится в папке step-04.
Концепции
Чтобы установить и поддерживать вызов WebRTC, клиенты WebRTC (узлы) должны обмениваться метаданными:
Информация о кандидате (сети). сообщения offer и answer, содержащие информацию о медиа, например, о разрешении и кодеках.</description></item><item><title>15. Логирование</title><link>https://romankurnovskii.com/ru/docs/python101/chapter15_logging/</link><pubDate>Tue, 28 Jun 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/python101/chapter15_logging/</guid><description>Глава 15 - Логирование Python предоставляет очень мощную библиотеку протоколирования в своей стандартной библиотеке. Многие программисты используют операторы печати для отладки (в том числе и я), но вы также можете использовать для этого протоколирование. Использование лога также более чистый метод, если вы не хотите просматривать весь свой код, чтобы удалить все операторы print. В данном разделе мы рассмотрим следующее:
Создание простого логгера Как вести журнал из нескольких модулей Форматирование лога Конфигурация лога К концу этой главы вы должны быть в состоянии уверенно создавать собственные логи для своих приложений.</description></item><item><title>20. Модуль sys</title><link>https://romankurnovskii.com/ru/docs/python101/chapter20_sys/</link><pubDate>Tue, 28 Jun 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/python101/chapter20_sys/</guid><description>Модуль sys предоставляет специфические для системы параметры и функции. Мы сузим наше исследование до следующих:
sys.argv sys.executable sys.exit sys.modules sys.path sys.platform sys.stdin/stdout/stderr sys.argv Значение sys.argv - это список аргументов командной строки Python, которые были переданы сценарию Python. Первый аргумент, argv[0] - это имя самого сценария Python. В зависимости от платформы, на которой вы работаете, первый аргумент может содержать полный путь к скрипту или только имя файла. Для получения дополнительной информации следует изучить документацию.
Давайте попробуем выполнить несколько примеров, чтобы ознакомиться с этим небольшим инструментом:</description></item><item><title>15. Команды Linux в DevOps</title><link>https://romankurnovskii.com/ru/docs/90daysofdevops/day15/</link><pubDate>Thu, 05 May 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/90daysofdevops/day15/</guid><description>Команды Linux для DevOps Я упомянул вчера, что мы собираемся провести много времени в терминале с некоторыми командами, чтобы что-то сделать.
Я также упомянул, что с нашей виртуальной машиной, подготовленной с помощью vagrant, мы можем использовать vagrant ssh и получить доступ к нашей машине. Вам нужно будет находиться в том же каталоге, из которого мы его предоставили.
Для SSH нам не понадобятся имя пользователя и пароль, они понадобятся нам только в том случае, если решим войти в консоль Virtual Box.</description></item><item><title>Соединение однорангового соединения и сигналинга</title><link>https://romankurnovskii.com/ru/docs/webrtc/practice/practice-peer-signaling-combine/</link><pubDate>Sat, 02 Jul 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/webrtc/practice/practice-peer-signaling-combine/</guid><description>Чему вы научитесь
На этом шаге вы узнаете, как:
Запускать службу сигнализации WebRTC с помощью Socket.IO на Node.js Использовать эту службу для обмена метаданными WebRTC между узлами. Полная версия этого шага находится в папке step-05. Поменяйте HTML и JavaScript
Замените содержимое index.html следующим:
1&amp;lt;!DOCTYPE html&amp;gt; 2&amp;lt;html&amp;gt; 3 4&amp;lt;head&amp;gt; 5 6 &amp;lt;title&amp;gt;Realtime communication with WebRTC&amp;lt;/title&amp;gt; 7 8 &amp;lt;link rel=&amp;#34;stylesheet&amp;#34; href=&amp;#34;/css/main.css&amp;#34; /&amp;gt; 9 10&amp;lt;/head&amp;gt; 11 12&amp;lt;body&amp;gt; 13 14 &amp;lt;h1&amp;gt;Realtime communication with WebRTC&amp;lt;/h1&amp;gt; 15 16 &amp;lt;div id=&amp;#34;videos&amp;#34;&amp;gt; 17 &amp;lt;video id=&amp;#34;localVideo&amp;#34; autoplay muted&amp;gt;&amp;lt;/video&amp;gt; 18 &amp;lt;video id=&amp;#34;remoteVideo&amp;#34; autoplay&amp;gt;&amp;lt;/video&amp;gt; 19 &amp;lt;/div&amp;gt; 20 21 &amp;lt;script src=&amp;#34;/socket.</description></item><item><title>16. Модуль os</title><link>https://romankurnovskii.com/ru/docs/python101/chapter16_os/</link><pubDate>Tue, 28 Jun 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/python101/chapter16_os/</guid><description>Модуль os имеет множество применений. Мы не будем рассматривать все его возможности. Вместо этого мы получим обзор его возможностей, а также рассмотрим один из его подмодулей, известный как os.path. В частности, мы рассмотрим следующее:
os.name os.environ os.chdir() os.getcwd() os.getenv() os.putenv() os.mkdir() os.makedirs() os.remove() os.rename() os.rmdir() os.startfile() os.walk() os.path Кажется, что этого очень много, но существует примерно в десять раз больше других действий, которые может выполнять модуль os. В этой главе мы просто дадим вам небольшое представление о том, что доступно.</description></item><item><title>16. Управление системой, файловой системой и хранилищем в Linux</title><link>https://romankurnovskii.com/ru/docs/90daysofdevops/day16/</link><pubDate>Fri, 06 May 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/90daysofdevops/day16/</guid><description>Управление системой, файловой системой и хранилищем в Linux К этому времени мы кратко рассмотрели Linux и DevOps, а затем мы настроили нашу лабораторную среду с помощью vagant 14-й день), а затем коснулись небольшой части команд, которые будут в вашем ежедневном набор инструментов во время использования терминала - (День 15).
Сегодня мы рассмотрим три ключевые области обслуживания систем Linux с помощью обновлений, установки программного обеспечения. Поймем для чего используются системные папки, а также рассмотрим хранилище.
Управление Ubuntu и программным обеспечением Первое, что мы собираемся рассмотреть, это то, как мы обновляем нашу операционную систему.</description></item><item><title>Сделайте фото и отправьте его через канал данных</title><link>https://romankurnovskii.com/ru/docs/webrtc/practice/practice-take-photo/</link><pubDate>Sat, 02 Jul 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/webrtc/practice/practice-take-photo/</guid><description>Чему вы научитесь
На этом шаге вы узнаете, как:
Делать снимок и получать из него данные, используя элемент canvas. Обмениваться изображениями с удаленным пользователем. Полная версия этого шага находится в папке step-06.
Как это работает
Ранее вы узнали, как обмениваться текстовыми сообщениями с помощью RTCDataChannel.
Этот шаг позволяет обмениваться целыми файлами: в этом примере - фотографиями, снятыми с помощью getUserMedia().
Основные части этого шага заключаются в следующем:
Установите канал передачи данных. Обратите внимание, что на этом шаге вы не добавляете никаких медиапотоков к одноранговому соединению.</description></item><item><title>17. Модуль email / smtplib</title><link>https://romankurnovskii.com/ru/docs/python101/chapter17_smtplib/</link><pubDate>Tue, 28 Jun 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/python101/chapter17_smtplib/</guid><description>Python предоставляет пару действительно хороших модулей, с помощью которых мы можем создавать электронные письма. Это модули email и smtplib. Вместо того чтобы рассматривать различные методы этих двух модулей, мы потратим некоторое время на изучение того, как на самом деле использовать эти модули. В частности, мы рассмотрим следующее:
Основы работы с почтой Как выполнять рассылку несколько адресов одновременно Как отправлять письма, используя строки TO, CC и BCC Как создавать содержимое и тело письма при помощи модуля email Давайте начнем!</description></item><item><title>17. Текстовые редакторы Nano/Vim</title><link>https://romankurnovskii.com/ru/docs/90daysofdevops/day17/</link><pubDate>Sat, 07 May 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/90daysofdevops/day17/</guid><description>Текстовые редакторы nano и vim Большинство систем Linux - сервера, и у них не будет графического интерфейса. Я также упомянул в прошлой статье, что Linux в основном состоит из файлов конфигурации, и для внесения изменений вам потребуется иметь возможность редактировать эти файлы конфигурации, чтобы изменить что-либо в системе.
Существует множество вариантов, но я думаю, что мы должны рассмотреть, вероятно, два наиболее распространенных текстовых редактора терминала. Я использовал оба этих редактора, и для меня «nano» — это удобная кнопка, когда дело доходит до быстрых изменений, но у «vim» такой широкий набор возможностей.</description></item><item><title>Выводы</title><link>https://romankurnovskii.com/ru/docs/webrtc/practice/practice-results/</link><pubDate>Sat, 02 Jul 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/webrtc/practice/practice-results/</guid><description>Вы создали приложение для потоковой передачи видео в реальном времени и обмена данными!
Что вы узнали
В этой codelab вы узнали, как:
Получать видео с вашей веб-камеры. стримить видео с помощью RTCPeerConnection. Стримить данные с помощью RTCDataChannel. Настраивать сигналинг-службу для обмена сообщениями. Комбинировать одноранговое соединение и сигналинг. Сделать снимок и поделиться им через канал передачи данных. Следующие шаги
Посмотрите на код и архитектуру канонического приложения AppRTC для чата WebRTC – приложение (https://appr.tc/), код (https://github.com/webrtc/apprtc) Попробуйте реальные примеры (http://webrtc.</description></item><item><title>18. Модуль sqlite</title><link>https://romankurnovskii.com/ru/docs/python101/chapter18_sqlite/</link><pubDate>Tue, 28 Jun 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/python101/chapter18_sqlite/</guid><description>SQLite - это самодостаточный, безсерверный, безконфигурационный транзакционный движок базы данных SQL. Python получил модуль sqlite3 еще в версии 2.5, что означает, что вы можете создавать базы данных SQLite с любым текущим Python без загрузки дополнительных зависимостей. Mozilla использует базы данных SQLite в своем популярном браузере Firefox для хранения закладок и другой различной информации. В этой главе вы узнаете следующее:
- Как создать базу данных SQLite - Как вставить данные в таблицу - Как редактировать данные - Как удалить данные - Основные SQL-запросы Другими словами, вместо того, чтобы рассказывать о модуле sqlite3 по кусочкам, мы рассмотрим, как его реально использовать.</description></item><item><title>18. Web Сервер и SSH</title><link>https://romankurnovskii.com/ru/docs/90daysofdevops/day18/</link><pubDate>Sun, 08 May 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/90daysofdevops/day18/</guid><description>SSH Как мы уже упоминали, вы, скорее всего, будете управлять множеством удаленных серверов Linux, поэтому вам необходимо убедиться, что ваше подключение к этим удаленным серверам безопасно. В этом разделе мы хотим рассказать о некоторых основах SSH (Secure Shell), которые должен знать каждый, и которые помогут вам с этим безопасным туннелем к вашим удаленным системам.
Настройка соединения по SSH Передача файлов Создайте свой закрытый ключ Введение в SSH Безопасная оболочка (Secure Shell) Сетевой протокол (Networking Protocol) Обеспечивает безопасную связь Может защитить любой сетевой сервис Обычно используется для удаленного доступа из командной строки В нашей среде, если вы следили за нами, мы уже использовали SSH, но все это было настроено и автоматизировано с помощью нашей конфигурации vagrant, поэтому нам нужно было только запустить vagrant ssh, и мы получили доступ к нашей удаленной виртуальной машине.</description></item><item><title>19. Модуль subprocess</title><link>https://romankurnovskii.com/ru/docs/python101/chapter19_subprocess/</link><pubDate>Tue, 28 Jun 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/python101/chapter19_subprocess/</guid><description>Модуль subprocess дает разработчику возможность запускать процессы или программы из Python. Другими словами, вы можете запускать приложения и передавать им аргументы с помощью модуля subprocess. Модуль subprocess был добавлен в Python 2.4, чтобы заменить модули os, состоящие из os.popen, os.spawn и os.system, а также заменить popen2 и старый модуль commands. Мы рассмотрим следующие аспекты модуля subprocess:
функция вызова класс Popen как взаимодействовать с порожденным процессом. Давайте начнем!
Функция вызова call Модуль subprocess предоставляет функцию call. Эта функция позволяет вам вызвать другую программу, дождаться завершения команды и затем вернуть код возврата.</description></item><item><title>19. Автоматизация задачи с помощью bash-скриптов</title><link>https://romankurnovskii.com/ru/docs/90daysofdevops/day19/</link><pubDate>Mon, 09 May 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/90daysofdevops/day19/</guid><description>Автоматизация задачи с помощью bash-скриптов Оболочка, которую мы собираемся использовать сегодня, — это bash, но мы рассмотрим другую оболочку завтра, когда будем углубляться в ZSH.
BASH - Bourne Again Shell («возрождённый» shell)
Мы могли бы почти посвятить целую секцию из 7 дней написанию сценариев оболочки, как и языкам программирования. Bash дает нам возможность работать вместе с другими инструментами автоматизации для достижения цели.
Я до сих пор разговариваю со многими людьми, которые настроили несколько сложных сценариев оболочки, чтобы что-то произошло, и они полагаются на этот сценарий для некоторых из наиболее важных вещей в бизнесе, я не говорю, что нам нужно понимать сценарии оболочки/bash.</description></item><item><title>20. Настройка рабочей среды DevOps</title><link>https://romankurnovskii.com/ru/docs/90daysofdevops/day20/</link><pubDate>Tue, 10 May 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/90daysofdevops/day20/</guid><description>Настройка рабочей среды Не путать с тем, как мы настраиваем серверы Linux таким образом. Я хочу продемонстрировать возможности выбора и гибкость, которые у нас есть при настройке настольного компьютера Linux.
Я использую рабочий стол Linux уже почти год, и я настроил его именно так, как я хочу с точки зрения внешнего вида. Используя нашу виртуальную машину Ubuntu в Virtual Box, мы можем выполнить некоторые настройки, которые я сделал для своего ежедневного драйвера.
Я собрал видео на YouTube, показывающее остальные, так как некоторые люди могли бы лучше следовать за ним:</description></item><item><title>21. Модуль потоков Thread</title><link>https://romankurnovskii.com/ru/docs/python101/chapter21_thread/</link><pubDate>Tue, 28 Jun 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/python101/chapter21_thread/</guid><description>В Python есть несколько различных конструкций параллелизма, таких как threading, queues и мультипроцессинг. Раньше модуль threading был основным способом реализации multiprocessing. Несколько лет назад в набор стандартных библиотек Python был добавлен модуль multiprocessing. Эта глава будет посвящена использованию потоков и очередей.
Использование потоков Мы начнем с простого примера, который просто демонстрирует работу потоков. Мы создадим подкласс класса Thread и заставим его выводить свое имя в stdout. Приступим к кодированию!
1import random 2import time 3 4from threading import Thread 5 6class MyThread(Thread): 7 &amp;#34;&amp;#34;&amp;#34; 8 A threading example 9 &amp;#34;&amp;#34;&amp;#34; 10 11 def __init__(self, name): 12 &amp;#34;&amp;#34;&amp;#34;Initialize the thread&amp;#34;&amp;#34;&amp;#34; 13 Thread.</description></item><item><title>21. DevOps настройка сети</title><link>https://romankurnovskii.com/ru/docs/90daysofdevops/day21/</link><pubDate>Wed, 11 May 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/90daysofdevops/day21/</guid><description>Общая картина: DevOps и Сеть Добро пожаловать в День 21! Мы собираемся заняться сетевыми технологиями в течение следующих 7 дней. Сеть и DevOps являются всеобъемлющей темой, но нам также необходимо изучить некоторые основы сетевых технологий.
В конечном счете, как мы уже говорили ранее, DevOps — это культура и изменение процессов в ваших организациях. Как мы уже говорили, это могут быть виртуальные машины, контейнеры, Kubernetes, но это также может быть и сеть. Если мы используем эти принципы DevOps для нашей инфраструктуры, которая чтобы включить сеть более точно с точки зрения DevOps, вам также необходимо знать о сети, а также о различных топологиях, сетевых инструментах и ​​стеках, которые у нас есть.</description></item><item><title>21-1. Модуль asyncio</title><link>https://romankurnovskii.com/ru/docs/python101/chapter21-1_asyncio/</link><pubDate>Tue, 10 Jan 2023 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/python101/chapter21-1_asyncio/</guid><description>Асинхронное программирование — это концепция программирования, при применении которой запуск длительных операций происходит без ожидания их завершения и не блокирует дальнейшее выполнение программы.
Корутина: корутины — это более общая форма подпрограмм. Подпрограммы имеют одну точку входа и одну точку выхода. А корутины поддерживают множество точек входа, выхода и возобновления их выполнения.
Python-модуль asyncio позволяет заниматься асинхронным программированием с применением конкурентного выполнения кода, основанного на корутинах. Хотя этот модуль имеется в Python уже много лет, он остаётся одним из самых интересных механизмов языка.</description></item><item><title>22. Работа с датами и временем</title><link>https://romankurnovskii.com/ru/docs/python101/chapter22_time/</link><pubDate>Tue, 28 Jun 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/python101/chapter22_time/</guid><description>Python предоставляет разработчику несколько инструментов для работы с датами и временем. В этой главе мы рассмотрим модули datetime и time. Мы изучим, как они работают, и некоторые распространенные способы их использования. Начнем с модуля datetime!
Модуль datetime Мы познакомимся со следующими классами модуля datetime:
datetime.date datetime.timedelta datetime.datetime Они будут охватывать большинство случаев, когда вам понадобится использовать дату и объект datetime в Python. Существует также класс tzinfo для работы с часовыми поясами, который мы не будем рассматривать.</description></item><item><title>22. Открытая сетевая модель OSI</title><link>https://romankurnovskii.com/ru/docs/90daysofdevops/day22/</link><pubDate>Thu, 12 May 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/90daysofdevops/day22/</guid><description>Модель OSI — 7 уровней Общая цель сети как отрасли состоит в том, чтобы позволить двум хостам обмениваться данными. Если я хочу передать данные от одного хоста к другому хосту, мне нужно будет что-то подключить к этому хосту, перейти к другому хосту, подключить его к первому хосту.
Сеть позволяет нам автоматизировать это, позволяя хосту автоматически обмениваться данными по сети, и для этого эти хосты должны следовать набору правил.
Это ничем не отличается от любого другого языка.</description></item><item><title>23. Модуль xml</title><link>https://romankurnovskii.com/ru/docs/python101/chapter23_xml/</link><pubDate>Tue, 28 Jun 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/python101/chapter23_xml/</guid><description>Python имеет встроенные возможности разбора XML, доступ к которым можно получить с помощью модуля xml. В этой статье мы сосредоточимся на двух подмодулях модуля xml:
minidom ElementTree . Мы начнем с minidom просто потому, что этот метод раньше был де-факто методом разбора XML. Затем мы рассмотрим, как вместо него использовать ElementTree.
Работа с minidom Для начала необходимо разобрать XML. Взгляните на следующий короткий пример XML:
1&amp;lt;?xml version=&amp;#34;1.0&amp;#34; ?&amp;gt; 2&amp;lt;zAppointments reminder=&amp;#34;15&amp;#34;&amp;gt; 3 &amp;lt;appointment&amp;gt; 4 &amp;lt;begin&amp;gt;1181251680&amp;lt;/begin&amp;gt; 5 &amp;lt;uid&amp;gt;040000008200E000&amp;lt;/uid&amp;gt; 6 &amp;lt;alarmTime&amp;gt;1181572063&amp;lt;/alarmTime&amp;gt; 7 &amp;lt;state&amp;gt;&amp;lt;/state&amp;gt; 8 &amp;lt;location&amp;gt;&amp;lt;/location&amp;gt; 9 &amp;lt;duration&amp;gt;1800&amp;lt;/duration&amp;gt; 10 &amp;lt;subject&amp;gt;Bring pizza home&amp;lt;/subject&amp;gt; 11 &amp;lt;/appointment&amp;gt; 12&amp;lt;/zAppointments&amp;gt; Это довольно типичный XML, и на самом деле он довольно интуитивно понятен для чтения.</description></item><item><title>23. Протоколы сети</title><link>https://romankurnovskii.com/ru/docs/90daysofdevops/day23/</link><pubDate>Fri, 13 May 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/90daysofdevops/day23/</guid><description>Протоколы сети Набор правил и сообщений, образующих стандарт.
ARP - Address Resolution Protocol - протокол разрешения адресов Если вы хотите по-настоящему разобраться в ARP, вы можете прочитать Internet Standard здесь RFC 826
ARP соединяет IP-адреса с фиксированными физическими адресами машин, также известными как MAC-адреса, в сети уровня 2.
FTP - File Transfer Protocol - протокол передачи файлов Позволяет передавать файлы из источника в место назначения. Как правило, этот процесс аутентифицируется, но при настройке можно использовать анонимный доступ.</description></item><item><title>24. Отладчик Python</title><link>https://romankurnovskii.com/ru/docs/python101/chapter24_debugging/</link><pubDate>Tue, 28 Jun 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/python101/chapter24_debugging/</guid><description>Python поставляется с собственным модулем отладчика, который называется pdb. Этот модуль предоставляет интерактивный отладчик исходного кода для ваших программ на Python. Вы можете устанавливать брейкпоинты, просматривать код, изучать кадры стека и многое другое. Мы рассмотрим следующие аспекты этого модуля:
Как запустить отладчик Переход по коду Установка точек останова Давайте начнем с создания небольшого фрагмента кода, чтобы попробовать отладку. Вот глупый пример:
1# debug_test.py 2 3def doubler(a): 4 &amp;#34;&amp;#34;&amp;#34;&amp;#34;&amp;#34;&amp;#34; 5 result = a*2 6 print(result) 7 return result 8 9def main(): 10 &amp;#34;&amp;#34;&amp;#34;&amp;#34;&amp;#34;&amp;#34; 11 for i in range(1,10): 12 doubler(i) 13 14if __name__ == &amp;#34;__main__&amp;#34;: 15 main() Теперь давайте узнаем, как запустить отладчик на этом фрагменте кода.</description></item><item><title>Часть III - Промежуточные вопросы и ответы</title><link>https://romankurnovskii.com/ru/docs/python101/03-part_iii/</link><pubDate>Tue, 28 Jun 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/python101/03-part_iii/</guid><description>В третьей части вы узнаете о некоторых внутренних компонентах Python, которые многие относят к владению Python среднего уровня. Вы перешли от молока и готовы к мясу! В этой части мы рассмотрим следующие темы:
Отладка Декораторы Оператор лямбда Профилирование кода Тестирование В первой главе этого раздела вы познакомитесь с модулем отладки Python, pdb, и узнаете, как использовать его для отладки кода. Следующая глава посвящена декораторам. Вы узнаете о том, как их создавать, и о некоторых декораторах, встроенных в Python.</description></item><item><title>24. Автоматизация сети</title><link>https://romankurnovskii.com/ru/docs/90daysofdevops/day24/</link><pubDate>Sat, 14 May 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/90daysofdevops/day24/</guid><description>Автоматизация сети Основы сетевой автоматизации Основные задачи для сетевой автоматизации
Тестирование устройств и проверка конфигурации; Инициализация развернутых физических устройств и сервисов, а также развертывание и инициализация виртуальных устройств; Сбор сетевых данных, относящихся к устройствам, системам, программному обеспечению, топологии сети, трафику и сервисам в реальном времени; Анализ данных, в том числе упреждающая аналитика ИИ и машинного обучения, для обеспечения информации о текущем и будущем поведении сети; Проверка соответствия конфигурации требованиям для обеспечения правильной работы всех сетевых устройств и сервисов; Обновление программного обеспечения, включая откат программного обеспечения при необходимости; Замкнутая коррекция проблем с сетью, включая поиск и устранение неисправностей, а также исправление сложных и трудновыявляемых сбоев; Подробный анализ отчетов, панелей наблюдения, оповещений и предупреждений; Реализация требований безопасности; Мониторинг сети и ее сервисов для поддержания уровня обслуживания и удовлетворенности клиентов Процесс внедрения автоматизации специфичен для каждого бизнеса.</description></item><item><title>25. Декораторы</title><link>https://romankurnovskii.com/ru/docs/python101/chapter25_decorators/</link><pubDate>Tue, 28 Jun 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/python101/chapter25_decorators/</guid><description>Декораторы в Python - это действительно здорово, но поначалу их может быть трудно понять. Декоратор в Python - это функция, которая принимает в качестве аргумента другую функцию. Декоратор обычно изменяет или улучшает функцию, которую он принял, и возвращает измененную функцию. Это означает, что при вызове декорированной функции вы получите функцию, которая может быть немного другой, иметь дополнительные возможности по сравнению с базовым определением. Но давайте вернемся немного назад. Возможно, нам следует рассмотреть основной строительный блок декоратора, а именно функцию.</description></item><item><title>25. Автоматизация сети с помощью Python</title><link>https://romankurnovskii.com/ru/docs/90daysofdevops/day25/</link><pubDate>Sun, 15 May 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/90daysofdevops/day25/</guid><description>Python для автоматизации сети Python — это стандартный язык, используемый для автоматизированных сетевых операций.
Хотя это не только автоматизация сети, кажется, что оно везде, когда вы ищете ресурсы, и, как упоминалось ранее, если это не Python, то обычно это Ansible, который также написан на Python.
Я думаю, что уже упоминал об этом, но в разделе «Изучение языка программирования» я выбрал Golang, а не Python, по причинам, связанным с тем, что моя компания разрабатывает Go, так что это было хорошей причиной для меня, чтобы учиться, но если это не так, тогда Python взял бы это время.</description></item><item><title>26. Лямбда</title><link>https://romankurnovskii.com/ru/docs/python101/chapter26_lambda/</link><pubDate>Tue, 28 Jun 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/python101/chapter26_lambda/</guid><description>Оператор лямбда в Python - это анонимная или несвязанная функция, причем довольно ограниченная. Давайте рассмотрим несколько типичных примеров и посмотрим, сможем ли мы найти для нее применение. Примеры, которые обычно встречаются при изучении лямбды, - это что-то вроде скучной функции удвоения. Чтобы не быть голословным, наш простой пример покажет, как найти квадратный корень. Сначала мы покажем обычную функцию, а затем ее лямбда-эквивалент:
1import math 2 3def sqroot(x): 4 &amp;#34;&amp;#34;&amp;#34; 5 Finds the square root of the number passed in 6 &amp;#34;&amp;#34;&amp;#34; 7 return math.</description></item><item><title>26. Развертывание виртуальной лаборатории EVE-NG в домашних условиях</title><link>https://romankurnovskii.com/ru/docs/90daysofdevops/day26/</link><pubDate>Mon, 16 May 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/90daysofdevops/day26/</guid><description>Создание нашей лаборатории Мы собираемся продолжить настройку нашей эмулируемой сети с помощью EVE-NG, а затем, надеюсь, развернуть несколько устройств и начать думать о том, как мы можем автоматизировать настройку этих устройств. В День 25 мы рассказали об установке EVE-NG на нашу машину с помощью VMware Workstation.
Установка клиента EVE-NG Существует также клиентский пакет, который позволяет нам выбирать, какое приложение используется при подключении к устройствам по SSH. Он также настроит Wireshark для захвата пакетов между ссылками. Вы можете установить клиентский пакет для своей ОС (Windows, macOS, Linux).</description></item><item><title>27. Профилирование кода</title><link>https://romankurnovskii.com/ru/docs/python101/chapter27_profiling/</link><pubDate>Tue, 28 Jun 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/python101/chapter27_profiling/</guid><description>Профилирование кода - это попытка найти узкие места в вашем коде. Профилирование должно выявить, какие части вашего кода занимают больше всего времени на выполнение. Узнав это, вы можете посмотреть на эти части кода и попытаться найти способы их оптимизации. Python содержит три встроенных профайлера: cProfile, profile и hotshot. Согласно документации Python, hotshot &amp;ldquo;больше не поддерживается и может быть отменен в будущей версии Python&amp;rdquo;. Модуль profile - это чистый модуль Python, но он добавляет много накладных расходов в профилируемые программы.</description></item><item><title>27. Работа с сетью в Python</title><link>https://romankurnovskii.com/ru/docs/90daysofdevops/day27/</link><pubDate>Tue, 17 May 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/90daysofdevops/day27/</guid><description>Практическое знакомство с Python и сетью В этом заключительном разделе основ работы с сетью мы рассмотрим некоторые задачи и инструменты автоматизации с помощью нашей лабораторной среды, созданной День 26
Мы будем использовать туннель SSH для подключения к нашим устройствам с нашего клиента по сравнению с telnet. Туннель SSH, созданный между клиентом и устройством, зашифрован. Мы также рассмотрели SSH в разделе Linux в День 18
Доступ к нашей виртуальной эмулируемой среде Чтобы мы могли взаимодействовать с нашими коммутаторами, нам либо нужна рабочая станция внутри сети EVE-NG, и вы можете развернуть там Linux-систему с установленным Python для выполнения вашей автоматизации (Ресурс для настройки Linux внутри EVE-NG) или можно сделать как я и определить облако для доступа со своей рабочей станции.</description></item><item><title>28. Введение в тестирование</title><link>https://romankurnovskii.com/ru/docs/python101/chapter28_testing/</link><pubDate>Tue, 28 Jun 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/python101/chapter28_testing/</guid><description>Python включает пару встроенных модулей для тестирования кода. Эти два метода называются doctest и unittest. Сначала мы рассмотрим, как использовать doctest, а во втором разделе мы представим модульные тесты, используя Test Driven Development.
Тестирование с помощью doctest Модуль doctest будет искать в вашем коде фрагменты текста, напоминающие интерактивные сессии Python. Затем он выполнит эти сессии, чтобы проверить, что они работают именно так, как написано. Это означает, что если вы написали пример в docstring, который показывает вывод с пробелом или табуляцией, то фактический вывод функции также должен содержать пробел.</description></item><item><title>28. DevOps в облаке</title><link>https://romankurnovskii.com/ru/docs/90daysofdevops/day28/</link><pubDate>Wed, 18 May 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/90daysofdevops/day28/</guid><description>Общая картина: DevOps и облака Когда дело доходит до облачных вычислений и того, что они предлагают, это очень хорошо сочетается с духом и процессами DevOps. Мы можем думать об облачных вычислениях, предоставляющих технологии и услуги, в то время как DevOps, как мы уже много раз упоминали ранее, касается процессов и их улучшения.
Но начать с этого путешествия по обучению в облаке сложно, и убедиться, что вы знаете и понимаете все элементы или лучший сервис для выбора по правильной цене, сбивает с толку.</description></item><item><title>29. Установка пакетов</title><link>https://romankurnovskii.com/ru/docs/python101/chapter29_pip/</link><pubDate>Tue, 28 Jun 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/python101/chapter29_pip/</guid><description>Когда вы только начинаете программировать на Python, вы не задумываетесь о том, что вам может понадобиться установить внешний пакет или модуль. Но когда такая необходимость возникнет, вы захотите узнать, как это сделать в кратчайшие сроки! Пакеты Python можно найти по всему интернету. Большинство популярных из них можно найти в Python Package Index (PyPI). Вы также найдете множество пакетов Python на github, bitbucket и Google code. В этой статье мы рассмотрим следующие методы установки пакетов Python:</description></item><item><title>Часть IV - Советы, приемы и учебные пособия</title><link>https://romankurnovskii.com/ru/docs/python101/04-part_iv/</link><pubDate>Tue, 28 Jun 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/python101/04-part_iv/</guid><description>В части IV вы узнаете, как устанавливать пакеты сторонних разработчиков из Python Package Index (PyPI). Вы узнаете немного о easy_install, pip и setup.py* и о том, как использовать эти инструменты для установки пакетов. Однако это только первая глава. Вот список пакетов, о которых вы узнаете:
configobj - работа с файлами Config более &amp;ldquo;питоническим&amp;rdquo; способом. lxml - пакет для работы с XML pylint / pyflakes - анализаторы кода Python requests - версия urllib для работы с Python SQLAlchemy - объектно-реляционный маппер для Python virtualenv - узнайте о виртуальных средах в Python Мы будем рассматривать configobj, потому что я считаю, что он работает лучше, чем ConfigParser, модуль, поставляемый вместе с Python.</description></item><item><title>29. Знакомство с Microsoft Azure</title><link>https://romankurnovskii.com/ru/docs/90daysofdevops/day29/</link><pubDate>Thu, 19 May 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/90daysofdevops/day29/</guid><description>Знакомство с Microsoft Azure Прежде чем мы начнем, победителем опроса в Твиттере стала Microsoft Azure, отсюда и название страницы. Это было довольно интересно увидеть результаты, полученные в течение 24 часов.
Я бы сказал, что с точки зрения освещения этой темы я лучше понимаю и пользуюсь услугами, доступных в Microsoft Azure. Сегодня я склоняюсь к Amazon AWS. Однако я выделил разделы для всех трех основных облачных провайдеров.
Я ценю, что их больше, и опрос включал только эти 3, и, в частности, были некоторые комментарии об Oracle Cloud.</description></item><item><title>30. ConfigObj</title><link>https://romankurnovskii.com/ru/docs/python101/chapter30_configobj/</link><pubDate>Tue, 28 Jun 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/python101/chapter30_configobj/</guid><description>Python поставляется с удобным модулем под названием ConfigParser. Он хорошо подходит для создания и чтения конфигурационных файлов (они же INI-файлы). Однако Майкл Форд (автор IronPython in Action) и Никола Лароса решили написать свой собственный модуль конфигурации под названием ConfigObj. Во многих отношениях он является улучшением модуля стандартной библиотеки. Например, при чтении файла конфигурации он возвращает объект, похожий на словарь. ConfigObj также может понимать некоторые типы Python. Еще одна интересная особенность заключается в том, что вы можете создать спецификацию конфигурации, которую ConfigObj будет использовать для проверки файла конфигурации.</description></item><item><title>30. Модули безопасности Microsoft Azure</title><link>https://romankurnovskii.com/ru/docs/90daysofdevops/day30/</link><pubDate>Fri, 20 May 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/90daysofdevops/day30/</guid><description>Microsoft Azure Security Models Следуя обзору Microsoft Azure, мы начнем с безопасности Azure и посмотрим, как это может помочь в наши дни. По большей части я обнаружил, что встроенных ролей было достаточно, и зная это, мы можем создавать и работать со многими различными областями аутентификации и конфигураций. Я обнаружил, что Microsoft Azure довольно продвинута с ее инструментом Active Directory по сравнению с другими общедоступными облаками.
Это одна из областей, в которой Microsoft Azure, по-видимому, работает иначе, чем другие поставщики общедоступных облаков, в Azure ВСЕГДА есть Azure AD.</description></item><item><title>31. Парсинг XML с помощью lxml</title><link>https://romankurnovskii.com/ru/docs/python101/chapter31_lxml/</link><pubDate>Tue, 28 Jun 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/python101/chapter31_lxml/</guid><description>В первой части мы рассмотрели некоторые встроенные в Python парсеры XML. В этой главе мы рассмотрим интересный пакет сторонних разработчиков, lxml от codespeak. Он использует, помимо прочего, ElementTree API. Пакет lxml имеет поддержку XPath и XSLT, включает API для SAX и API уровня C для совместимости с модулями C/Pyrex. Вот что мы рассмотрим:
Как разобрать XML с помощью lxml Пример рефакторинга Как разобрать XML с помощью lxml.objectify Как создать XML с помощью lxml.objectify В этой статье, мы используем примеры, основанные на примерах парсинга minidom, и посмотрим, как выполнять парсинг при помощи lxml Python.</description></item><item><title>31. Microsoft Azure Среда выполнения приложений</title><link>https://romankurnovskii.com/ru/docs/90daysofdevops/day31/</link><pubDate>Sat, 21 May 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/90daysofdevops/day31/</guid><description>Среда выполнения приложений Вслед за вчерашним обзором основ моделей безопасности в Microsoft Azure, сегодня мы собираемся изучить различные службы вычислений, доступные нам в Azure.
Параметры службы доступности Этот раздел мне близок, учитывая мою роль в управлении данными. Как и в случае с локальной средой, очень важно обеспечить доступность ваших служб.
Высокая доступность (Защита в пределах региона) Аварийное восстановление (Защита между регионами) Резервное копирование (Восстановление с момента времени) Microsoft развертывает несколько регионов в пределах геополитических границ.</description></item><item><title>32. Анализ кода Python</title><link>https://romankurnovskii.com/ru/docs/python101/chapter32_pylint/</link><pubDate>Tue, 28 Jun 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/python101/chapter32_pylint/</guid><description>Анализ кода Python может быть тяжелой темой, но он может быть очень полезен для улучшения ваших программ. Существует несколько анализаторов кода Python, которые вы можете использовать для проверки вашего кода на соответствие стандартам. pylint, вероятно, является самым популярным. Он очень конфигурируемый, настраиваемый и подключаемый. Он также проверяет ваш код на соответствие PEP8, официальному руководству по стилю Python Core, и ищет ошибки программирования.
Обратите внимание, что pylint проверяет ваш код на соответствие большинству, но не всем стандартам PEP8.</description></item><item><title>32. Модели хранилища Microsoft Azure</title><link>https://romankurnovskii.com/ru/docs/90daysofdevops/day32/</link><pubDate>Sun, 22 May 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/90daysofdevops/day32/</guid><description>Модели хранилища Службы хранилища Службы хранилища Azure предоставляются учетными записями хранения. Доступ к учетным записям хранения в основном осуществляется через REST API. Учетная запись хранения должна иметь уникальное имя, являющееся частью DNS-имени &amp;lt;Storage Account name&amp;gt;.core.windows.net. Различные варианты репликации и шифрования. Находится в группе ресурсов Мы можем создать нашу группу хранения, просто выполнив поиск группы хранения в строке поиска в верхней части портала Azure.
Затем мы можем выполнить шаги по созданию нашей учетной записи хранения, помня, что это имя должно быть уникальным, а также оно должно быть написано строчными буквами, без пробелов, но может включать цифры.</description></item><item><title>33. Пакет requests</title><link>https://romankurnovskii.com/ru/docs/python101/chapter33_requests/</link><pubDate>Tue, 28 Jun 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/python101/chapter33_requests/</guid><description>Пакет requests - это более питоническая замена для собственного urllib в Python. API пакета requests во многом проще в работе.
Использование requests Давайте рассмотрим несколько примеров использования пакета requests. Мы будем использовать серию небольших фрагментов кода, чтобы помочь объяснить, как использовать эту библиотеку.
1&amp;gt;&amp;gt;&amp;gt; r = requests.get(&amp;#34;http://www.google.com&amp;#34;) Этот пример возвращает объект Response. Вы можете использовать методы объекта Response, чтобы узнать много нового о том, как можно использовать запросы. Давайте воспользуемся функцией dir в Python, чтобы посмотреть, какие методы нам доступны:</description></item><item><title>33. Сетевые модели Microsoft Azure + Управление Azure</title><link>https://romankurnovskii.com/ru/docs/90daysofdevops/day33/</link><pubDate>Mon, 23 May 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/90daysofdevops/day33/</guid><description>Мы рассмотрим сетевые модели в Microsoft Azure и некоторые варианты управления для Azure. До сих пор мы использовали только платформу Azure, но упомянули и другие области, которые можно использовать для управления и создания наших ресурсов на платформе.
Сетевые модели Azure Виртуальные сети Виртуальная сеть — это конструкция, созданная в Azure. Виртуальной сети назначен один или несколько диапазонов IP-адресов. Виртуальные сети живут в рамках подписки внутри региона. В виртуальной сети создаются виртуальные подсети для разбиения сетевого диапазона.</description></item><item><title>34. Пакет SQLAlchemy</title><link>https://romankurnovskii.com/ru/docs/python101/chapter34_sqlalchemy/</link><pubDate>Tue, 28 Jun 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/python101/chapter34_sqlalchemy/</guid><description>SQLAlchemy обычно называют объектно-реляционным маппером (Object Relational Mapper - ORM), хотя он гораздо более полнофункциональный, чем любой другой ORM для Python, который я использовал, например, SqlObject или тот, который встроен в Django. SQLAlchemy был создан парнем по имени Майкл Байер. Поскольку я помешан на музыке, мы создадим простую базу данных для хранения информации об альбомах. База данных не является базой данных без некоторых отношений, поэтому мы создадим две таблицы и соединим их. Вот несколько других вещей, которые мы будем изучать:</description></item><item><title>34. Практические скрипты Microsoft Azure</title><link>https://romankurnovskii.com/ru/docs/90daysofdevops/day34/</link><pubDate>Tue, 24 May 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/90daysofdevops/day34/</guid><description>Практические скрипты Microsoft Azure Последние 6 дней были сосредоточены на Microsoft Azure и общедоступном облаке в целом, большая часть этой основы должна была содержать много теории, чтобы понять строительные блоки Azure, но также это будет хорошо перенесено на других крупных облачных провайдеров. .
В самом начале я упомянул о базовых знаний об общедоступном облаке и выборе одного провайдера, по крайней мере, для начала. Если вы танцуете между разными облаками, я считаю, что вы можете довольно легко заблудиться, тогда как выбрав одно, вы поймете основы.</description></item><item><title>35. virtualenv</title><link>https://romankurnovskii.com/ru/docs/python101/chapter35_virtualenv/</link><pubDate>Tue, 28 Jun 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/python101/chapter35_virtualenv/</guid><description>Виртуальные среды могут быть очень удобны для тестирования программного обеспечения. Это верно и в кругах программистов. Ян Бикинг создал проект virtualenv, который является инструментом для создания изолированных сред Python. Вы можете использовать эти среды для тестирования новых версий вашего программного обеспечения, новых версий пакетов, от которых вы зависите, или просто в качестве &amp;ldquo;песочницы&amp;rdquo; для опробования нового пакета в целом. Вы также можете использовать virtualenv в качестве рабочей среды, когда вы не можете скопировать файлы в пакеты сайта, потому что он находится на общем хосте.</description></item><item><title>35. Git — контроль версий</title><link>https://romankurnovskii.com/ru/docs/90daysofdevops/day35/</link><pubDate>Wed, 25 May 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/90daysofdevops/day35/</guid><description>Общая картина: Git — контроль версий Прежде чем мы перейдем к git, нам нужно понять, что такое контроль версий? В этой статье мы рассмотрим, что такое контроль версий и основы git.
Что такое контроль версий? Git — не единственная система контроля версий, поэтому рассмотрим, какие варианты и какие методологии доступны для контроля версий.
Наиболее очевидным и большим преимуществом контроля версий является возможность отслеживать историю проекта. Мы можем посмотреть на этот репозиторий с помощью git log и увидеть, что у нас есть много коммитов и много комментариев, а также то, что произошло на данный момент в проекте.</description></item><item><title>36. Создание модулей и пакетов</title><link>https://romankurnovskii.com/ru/docs/python101/chapter36_creating_modules_and_packages/</link><pubDate>Tue, 28 Jun 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/python101/chapter36_creating_modules_and_packages/</guid><description>Создание модулей Python - это то, что большинство программистов Python делают каждый день, даже не задумываясь об этом. Каждый раз, когда вы сохраняете новый сценарий Python, вы создаете новый модуль. Вы можете импортировать свой модуль в другие модули. Пакет - это коллекция связанных модулей. То, что вы импортируете в свои сценарии из стандартной библиотеки, является модулями или пакетами. В этой главе мы узнаем, как создавать модули и пакеты. Мы уделим больше времени пакетам, поскольку они сложнее модулей.</description></item><item><title>Часть V - Упаковка и распространение</title><link>https://romankurnovskii.com/ru/docs/python101/05-part_v/</link><pubDate>Tue, 28 Jun 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/python101/05-part_v/</guid><description>В части V вы узнаете об упаковке Python и различных методах распространения вашего кода. Вы узнаете о следующем:
Как создать модуль и пакет Публикация пакетов в Python Packaging Index (PyPI) Python eggs Python wheels py2exe bb_freeze cx_Freeze PyInstaller GUI2Exe Как создать инсталлятор с помощью InnoSetup В первой главе этого раздела описано, как создать модуль или пакет. Затем, в следующей главе, мы рассмотрим публикацию нашего пакета в PyPI. Далее мы узнаем, как создать и установить Python egg и Python wheel.</description></item><item><title>36. Установка и настройка Git</title><link>https://romankurnovskii.com/ru/docs/90daysofdevops/day36/</link><pubDate>Thu, 26 May 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/90daysofdevops/day36/</guid><description>Установка и настройка Git Git — это кроссплатформенный инструмент с открытым исходным кодом для контроля версий. Если я нравлюсь вам, вы используете Ubuntu или большинство сред Linux, вы можете обнаружить, что у вас уже установлен git, но мы собираемся выполнить установку и настройку.
Даже если у вас уже установлен git в вашей системе, также рекомендуется убедиться, что мы в курсе последних событий.
Установка Git Мы будем работать с Windows и Linux, но вы также можете найти macOS в списке здесь</description></item><item><title>37. Как добавить пакет в PyPI</title><link>https://romankurnovskii.com/ru/docs/python101/chapter37_pypi_packaging/</link><pubDate>Tue, 28 Jun 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/python101/chapter37_pypi_packaging/</guid><description>В предыдущей главе мы создали пакет под названием mymath. В этой главе мы узнаем, как разместить его на Python Packaging Index (PyPI). Для этого нам сначала нужно узнать, как создать файл setup.py Для справки, вот наша текущая иерархия папок:
1mymath/ 2 __init__.py 3 adv/ 4 __init__.py 5 sqrt.py 6 add.py 7 subtract.py 8 multiply.py 9 divide.py Это означает, что у вас есть папка mymath со следующими файлами в ней: init.py, add.py, subtract.py, multiply.py и divide.py. Внутри папки mymath также есть папка adv.</description></item><item><title>37. Шпаргалка по Git</title><link>https://romankurnovskii.com/ru/docs/90daysofdevops/day37/</link><pubDate>Fri, 27 May 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/90daysofdevops/day37/</guid><description>Знакомство с Git В последних двух постах мы узнали о системах контроля версий и некоторых основных рабочих процессах git как системы контроля версий День 35. Затем мы установили git в нашу систему, обновили и настроили. Мы также немного углубились в теорию между системой контроля версий клиент-сервер и Git, которая является распределенной системой контроля версий День 36.
Теперь мы пройдемся по некоторым командам и вариантам использования, которые мы все обычно видим в git.
Где получить помощь по git?</description></item><item><title>38. Python egg</title><link>https://romankurnovskii.com/ru/docs/python101/chapter38_eggs/</link><pubDate>Tue, 28 Jun 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/python101/chapter38_eggs/</guid><description>Python egg - это старый формат распространения Python. Новый формат называется Python wheel, который мы рассмотрим в следующей главе. Файл egg - это, по сути, zip-файл с другим расширением. Python может импортироваться непосредственно из egg. Для работы с eggs вам понадобится пакет SetupTools. SetupTools - это оригинальный основной метод загрузки и установки пакетов Python из PyPI и других источников через командную строку, что-то вроде apt-get для Python. Существовал форк SetupTools под названием distribute, который в итоге был объединен обратно в SetupTools.</description></item><item><title>38. Staging и Изменения</title><link>https://romankurnovskii.com/ru/docs/90daysofdevops/day38/</link><pubDate>Sat, 28 May 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/90daysofdevops/day38/</guid><description>Working directory Git - это система трёх основных стадий: working directory, staging area и repository. Пройдем поэтапно каждую стадию.
Создадим пустую папку.
1mkdir my_fodler 2cd my_folder Сделаем инициализацию git проекта.
1git init После инициализации git репозитория создается скрытая папка .git Здесь хранятся сведения о репозитории git, а также информация о наших ветках и коммитах.
Staging/Stage Сейчас у нас пустая папка. Создадим пустой файл README.md и выполним команду
1git status Git знает о новом файле, но этот файл еще не зафиксирован в staging.</description></item><item><title>39. Python wheels</title><link>https://romankurnovskii.com/ru/docs/python101/chapter39_wheels/</link><pubDate>Tue, 28 Jun 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/python101/chapter39_wheels/</guid><description>Первым распространенным форматом упаковки Python был файл .egg. Теперь в городе появился новый формат под названием wheel (.whl). Согласно описанию в Python Packaging Index, wheel предназначен для содержания всех файлов для установки, совместимой с PEP 376, в формате, очень близком к формату на диске. В этой главе мы узнаем, как создать wheel и затем установить его в virtualenv.
Начало работы Рекомендуемый способ работы с wheels - использование pip. Убедитесь, что вы установили последнюю версию pip, так как более ранние версии не поддерживают формат wheel.</description></item><item><title>39. Просмотр, удаление, отмена и восстановление</title><link>https://romankurnovskii.com/ru/docs/90daysofdevops/day39/</link><pubDate>Sun, 29 May 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/90daysofdevops/day39/</guid><description>GIT - Просмотр, удаление, отмена и восстановление Просмотр файлов в Stagig area и Working area Если некоторые файлы/папки уже добавлены в staging area, то можно просмотреть их рахницу по отношению в главной ветке комадой: git diff --staged
Это покажет нам все внесенные изменения и все новые файлы, которые мы добавили или удалили.
Изменения в измененных файлах обозначаются символами --- или +++ Вы можете видеть ниже, что мы только что добавили +add some text, что означает, что это новые строки.</description></item><item><title>40. py2exe</title><link>https://romankurnovskii.com/ru/docs/python101/chapter40_py2exe/</link><pubDate>Tue, 28 Jun 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/python101/chapter40_py2exe/</guid><description>Проект py2exe раньше был основным способом создания исполняемых файлов Windows из ваших приложений Python. На PyPI лежит версия, которая будет работать и с Python 2 и 3.
У вас есть несколько вариантов для приложения. Вы можете создать программу, которая будет работать только в терминале, вы можете создать графический интерфейс пользователя (GUI) для рабочего стола или создать веб-приложение. Мы создадим очень простой настольный интерфейс, который ничего не делает, кроме отображения формы, которую пользователь может заполнить. Мы будем использовать инструментарий wxPython GUI, чтобы продемонстрировать, как py2exe может подбирать пакеты без нашего указания.</description></item><item><title>40. GitHub | GitLab | BitBucket</title><link>https://romankurnovskii.com/ru/docs/90daysofdevops/day40/</link><pubDate>Mon, 30 May 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/90daysofdevops/day40/</guid><description>Социальная сеть для кода Изучение GitHub | GitLab | BitBucket
Сегодня я хочу рассказать о некоторых сервисах на основе git, о которых мы, вероятно, все слышали и ожидаем, что будем использовать их ежедневно.
GitHub Наиболее распространенным, по крайней мере для меня, является GitHub, GitHub — это веб-хостинг для git. Чаще всего он используется разработчиками программного обеспечения для хранения своего кода. Управление исходным кодом с функциями контроля версий git, а также множеством дополнительных функций. Это позволяет командам или открытым участникам легко общаться и обеспечивает социальный аспект кодирования.</description></item><item><title>41. bbfreeze</title><link>https://romankurnovskii.com/ru/docs/python101/chapter41_bb_freeze/</link><pubDate>Tue, 28 Jun 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/python101/chapter41_bb_freeze/</guid><description>Пакет bbfreeze также позволяет нам создавать двоичные файлы, но только в Linux и Windows. Когда вы создаете двоичный файл в Linux, результат будет работать только на машинах, имеющих ту же аппаратную архитектуру и версию libc, что ограничивает его полезность в Linux. Также следует отметить, что bbfreeze работает только с Python версий 2.4 - 2.7. Вы можете использовать easy_install или pip для установки пакета bbfreeze в вашу систему. Пакет bbfreeze включает поддержку egg, поэтому он может включать зависимости eggs в ваши двоичные файлы, в отличие от py2exe.</description></item><item><title>41. Рабочий процесс с открытым исходным кодом</title><link>https://romankurnovskii.com/ru/docs/90daysofdevops/day41/</link><pubDate>Tue, 31 May 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/90daysofdevops/day41/</guid><description>Рабочий процесс с открытым исходным кодом Когда мы изучали основы GitHub, мы проходили процесс форка произвольного проекта и внесения изменений в наш локальный репозиторий. Здесь мы хотим сделать еще один шаг вперед и внести свой вклад в проект с открытым исходным кодом. Помните, что вклад не обязательно должен заключаться в исправлении ошибок, кодировании функций, это может быть и документация. Каждая мелочь помогает, и это также позволит вам поработать с некоторыми функциями git, которые мы рассмотрели.</description></item><item><title>42. cx_Freeze</title><link>https://romankurnovskii.com/ru/docs/python101/chapter42_cx_freeze/</link><pubDate>Tue, 28 Jun 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/python101/chapter42_cx_freeze/</guid><description>В этой главе мы познакомимся с cx_Freeze, кроссплатформенным набором скриптов, предназначенных для freeze скриптов Python в исполняемые файлы, подобно py2exe, PyInstaller и т.д. Мы заморозим один консольный скрипт и один оконный (т.е. GUI) скрипт, используя примеры из предыдущей главы. Инструмент cx_Freeze - единственный инструмент создания двоичных файлов, который на данный момент может работать как с Python 2.x, так и с 3.x на различных операционных системах. В этой главе мы будем использовать его с Python 2.7 только потому, что хотим сравнить его с другими инструментами создания двоичных файлов.</description></item><item><title>42. Контейнеры</title><link>https://romankurnovskii.com/ru/docs/90daysofdevops/day42/</link><pubDate>Wed, 01 Jun 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/90daysofdevops/day42/</guid><description>Контейнеры Этот раздел будет посвящен контейнерам. Будем рассматривать Docker, вникая в некоторые ключевые области, чтобы понять больше о контейнерах.
Я также попытаюсь провести практические занятия по созданию контейнера, который мы сможем использовать не только в этом разделе, но и в последующих.
Почему другой способ запуска приложений? Первое, на что мы должны обратить внимание, - зачем нам нужен другой способ запуска программ или приложений? Просто выбор велик, мы можем запускать наши приложения в разных формах, мы можем видеть приложения, развернутые на физическом оборудовании с операционной системой и одним приложением, мы можем видеть виртуальную машину или облачные IaaS экземпляры, запускающие наше приложение, которое затем интегрируется в базу данных снова в виртуальной машине или как PaaS предложение в публичном облаке.</description></item><item><title>43. PyInstaller</title><link>https://romankurnovskii.com/ru/docs/python101/chapter43_pyinstaller/</link><pubDate>Tue, 28 Jun 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/python101/chapter43_pyinstaller/</guid><description>PyInstaller - это последний инструмент, который мы рассмотрим для создания двоичных файлов. Он поддерживает Python 2.4 - 2.7. Мы продолжим использовать наши простые консольные и wxPython GUI скрипты для тестирования. PyInstaller должен работать на Windows, Linux, Mac, Solaris и AIX. Поддержка Solaris и AIX является экспериментальной. PyInstaller поддерживает подпись кода (Windows), eggs, скрытый импорт, один исполняемый файл, один каталог и многое другое!
Начало работы с PyInstaller Чтобы установить PyInstaller, вы можете скачать исходный код в tarball или zip архиве, распаковать его и запустить его файл setup.</description></item><item><title>43. Установка Docker</title><link>https://romankurnovskii.com/ru/docs/90daysofdevops/day43/</link><pubDate>Thu, 02 Jun 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/90daysofdevops/day43/</guid><description>Что такое Docker и его установка В предыдущей статье я хотя бы раз упомянул Docker, и это потому, что Docker действительно является новатором в создании популярности контейнеров, несмотря на то, что они существуют уже очень давно.
Здесь мы будем использовать и объяснять docker, но мы также должны упомянуть [Open Container Initiative (OCI)] (https://www.opencontainers.org/), которая является организацией по отраслевым стандартам, поощряющей инновации и избегающей опасности блокировки поставщиков. Благодаря OCI у нас есть выбор при выборе инструментария для контейнеров, включая Docker, CRI-O, Podman, LXC и другие.</description></item><item><title>44. Создание программы установки</title><link>https://romankurnovskii.com/ru/docs/python101/chapter44_creating_an_installer/</link><pubDate>Tue, 28 Jun 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/python101/chapter44_creating_an_installer/</guid><description>В этой главе мы проведем вас через процесс создания исполняемого файла и его последующей упаковки в программу установки. Для создания исполняемого файла мы будем использовать очень аккуратный пользовательский интерфейс GUI2Exe, написанный Андреа Гаваной. Он основан на wxPython, поэтому для его использования вам потребуется его установить. GUI2Exe поддерживает py2exe, bbfreeze, cx_Freeze, PyInstaller и py2app. После создания папки dist мы используем Inno Setup для создания нашего инсталлятора.
Мы снова будем использовать следующий код:
1# sampleApp.py 2 3import wx 4 5class DemoPanel(wx.</description></item><item><title>44. Установка образов Docker в Docker Desktop</title><link>https://romankurnovskii.com/ru/docs/90daysofdevops/day44/</link><pubDate>Fri, 03 Jun 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/90daysofdevops/day44/</guid><description>Образы Docker и практическая работа с Docker Desktop Теперь у нас в системе установлен Docker Desktop. (Если вы используете Linux, у вас все еще есть опции, но нет графического интерфейса, но docker, очевидно, работает на Linux)Install Docker Engine on Ubuntu (Другие дистрибутивы также доступны).
В этом посте мы собираемся начать с развертывания некоторых образов в нашей среде. Напомним, что такое образ Docker - образ Docker - это файл, используемый для выполнения кода в контейнере Docker. Образы Docker действуют как набор инструкций для создания контейнера Docker, как шаблон.</description></item><item><title>45. Хостинг Python приложения</title><link>https://romankurnovskii.com/ru/docs/python101/chapter45_hosting/</link><pubDate>Sun, 08 Jan 2023 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/python101/chapter45_hosting/</guid><description> Как хостить телеграм-бота (и другие скрипты на Python) на Repl.it бесплатно 24/7</description></item><item><title>45. Что из себя представляет оьбраз Docker</title><link>https://romankurnovskii.com/ru/docs/90daysofdevops/day45/</link><pubDate>Sat, 04 Jun 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/90daysofdevops/day45/</guid><description>Анатомия образа Docker На прошлом занятии мы рассмотрели некоторые основы использования Docker Desktop в сочетании с DockerHub для развертывания и запуска некоторых проверенных образов. Вкратце о том, что такое образ, вы не забудете, если я продолжу упоминать.
Образ Docker - это шаблон, доступный только для чтения, содержащий набор инструкций для создания контейнера, который может работать на платформе Docker. Это удобный способ упаковки приложений и предварительно сконфигурированных серверных сред, которые вы можете использовать для личного пользования или публично делиться ими с другими пользователями Docker.</description></item><item><title>46. Docker Compose</title><link>https://romankurnovskii.com/ru/docs/90daysofdevops/day46/</link><pubDate>Sun, 05 Jun 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/90daysofdevops/day46/</guid><description>Docker Compose Возможность запуска одного контейнера может быть отличной, если у вас есть самодостаточный образ, в котором есть все, что вам нужно для одного случая использования, но все становится интересным, когда вы ищете возможность создания нескольких приложений между различными образами контейнеров. Например, если у меня есть фронт-энд сайта, но есть потребность в базе данных бэкенда, я могу поместить все в один контейнер, но лучше и эффективнее было бы иметь собственный контейнер для базы данных.
Именно здесь на помощь приходит Docker compose - инструмент, позволяющий запускать более сложные приложения в нескольких контейнерах.</description></item><item><title>47. Сетевое взаимодействие Docker и безопасность</title><link>https://romankurnovskii.com/ru/docs/90daysofdevops/day47/</link><pubDate>Mon, 06 Jun 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/90daysofdevops/day47/</guid><description>Docker Networking &amp;amp; Security Во время этой сессии по контейнерам мы уже кое-что сделали, но не рассмотрели, как все работает за кулисами с точки зрения сетевых технологий, а также не затронули безопасность, поэтому мы планируем эту сессию.
Основы сетевого взаимодействия Docker Откройте терминал и введите команду docker network - это основная команда для настройки и управления сетями контейнеров.
Ниже показано, как мы можем использовать эту команду и все доступные подкоманды. Мы можем создавать новые сети, составлять список существующих, проверять и удалять сети.</description></item><item><title>48. Альтернативы Docker</title><link>https://romankurnovskii.com/ru/docs/90daysofdevops/day48/</link><pubDate>Tue, 07 Jun 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/90daysofdevops/day48/</guid><description>Альтернативы Docker В самом начале этого раздела я говорил, что мы будем использовать Docker, просто потому, что ресурсов очень много, а сообщество очень большое, но также именно с него начался толчок к популярности контейнеров. Я бы посоветовал вам пойти и посмотреть немного истории о Docker и о том, как он появился, я нашел это очень полезным.
Но, как я уже упоминал, существуют и другие альтернативы Docker. Если мы подумаем о том, что такое Docker и что мы уже рассмотрели.</description></item><item><title>49. Основы Kubernetes</title><link>https://romankurnovskii.com/ru/docs/90daysofdevops/day49/</link><pubDate>Wed, 08 Jun 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/90daysofdevops/day49/</guid><description>Общая картина: Kubernetes В предыдущем разделе мы рассмотрели контейнеры. Контейнеры не справляются с задачей масштабирования и оркестровки. Лучшее, что мы можем сделать, это использовать docker-compose для объединения нескольких контейнеров. Когда речь заходит о Kubernetes, который является оркестратором контейнеров, это дает нам возможность масштабирования в автоматическом режиме или в зависимости от нагрузки ваших приложений и сервисов.
Как платформа Kubernetes предлагает возможность оркестровки контейнеров в соответствии с вашими требованиями и желаемым состоянием. Мы рассмотрим Kubernetes в этом разделе, поскольку она быстро развивается как следующая волна инфраструктуры.</description></item><item><title>50. Выбор платформы Kubernetes для проекта</title><link>https://romankurnovskii.com/ru/docs/90daysofdevops/day50/</link><pubDate>Thu, 09 Jun 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/90daysofdevops/day50/</guid><description>Выбор платформы Kubernetes Я хотел бы использовать эту сессию для разбора некоторых платформ или, может быть, дистрибутивов - более подходящий термин для этого, одна вещь, которая была проблемой в мире Kubernetes - это устранение сложности.
Kubernetes the hard way рассказывает о том, как построить из ничего полноценный функциональный кластер Kubernetes, очевидно, что это крайность, но все больше и больше людей, по крайней мере, тех, с кем я общаюсь, хотят устранить эту сложность и запустить управляемый кластер Kubernetes.</description></item><item><title>51. Установка minikube</title><link>https://romankurnovskii.com/ru/docs/90daysofdevops/day51/</link><pubDate>Fri, 10 Jun 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/90daysofdevops/day51/</guid><description>Развертывание первого кластера Kubernetes В этом посте мы собираемся запустить кластер Kubernetes на нашей локальной машине с помощью minikube, это даст нам базовый кластер Kubernetes для остальной части раздела Kubernetes, хотя позже мы рассмотрим развертывание кластера Kubernetes и в VirtualBox. Причина, по которой мы выбрали этот метод, а не развертывание управляемого кластера Kubernetes в публичном облаке, заключается в том, что это будет стоить денег даже при бесплатном уровне, однако я поделился некоторыми блогами, если вы захотите развернуть такую среду в предыдущем разделе День 50.</description></item><item><title>52. Настройка многоузлового кластера Kubernetes</title><link>https://romankurnovskii.com/ru/docs/90daysofdevops/day52/</link><pubDate>Sat, 11 Jun 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/90daysofdevops/day52/</guid><description>Настройка многоузлового кластера Kubernetes Я хотел назвать эту статью &amp;ldquo;Настройка многоузлового кластера Kubernetes с помощью Vagrant&amp;rdquo;, но подумал, что это будет слишком длинно!
На вчерашней сессии мы использовали классный проект для развертывания нашего первого кластера Kubernetes и немного поработали с самым важным инструментом CLI, с которым вы столкнетесь при использовании Kubernetes (kubectl).
Здесь мы будем использовать VirtualBox в качестве основы, но, как мы уже говорили о Vagrant в разделе Linux, мы можем использовать любой гипервизор или инструмент виртуализации.</description></item><item><title>53. Обзор Rancher</title><link>https://romankurnovskii.com/ru/docs/90daysofdevops/day53/</link><pubDate>Sun, 12 Jun 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/90daysofdevops/day53/</guid><description>Обзор Rancher - практическое применение В этом разделе мы рассмотрим Rancher, до сих пор все, что мы делали, было в cli и с использованием kubectl, но у нас есть несколько действительно хороших пользовательских интерфейсов и инструментов управления несколькими кластерами, чтобы дать нашим операционным командам хорошую видимость управления кластером.
Rancher, согласно их сайту
Rancher - это полный программный стек для команд, внедряющих контейнеры. Он решает операционные проблемы и проблемы безопасности при управлении несколькими кластерами Kubernetes в любой инфраструктуре, обеспечивая команды DevOps интегрированными инструментами для запуска контейнерных рабочих нагрузок.</description></item><item><title>54. Развертывание приложений Kubernetes</title><link>https://romankurnovskii.com/ru/docs/90daysofdevops/day54/</link><pubDate>Mon, 13 Jun 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/90daysofdevops/day54/</guid><description>Развертывание приложений Kubernetes Теперь мы, наконец, переходим к реальному развертыванию некоторых приложений в наших кластерах, некоторые говорят, что именно для этого существует Kubernetes - для доставки приложений.
Идея заключается в том, что мы можем взять наши образы контейнеров и развернуть их в виде стручков в нашем кластере Kubernetes, чтобы воспользоваться преимуществами Kubernetes как контейнерного оркестратора.
Развертывание приложений в Kubernetes Существует несколько способов развертывания наших приложений в кластере Kubernetes, мы рассмотрим два наиболее распространенных подхода - YAML-файлы и диаграммы Helm.</description></item><item><title>55. State и Ingress в Kubernetes</title><link>https://romankurnovskii.com/ru/docs/90daysofdevops/day55/</link><pubDate>Tue, 14 Jun 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/90daysofdevops/day55/</guid><description>State и Ingress в Kubernetes В этом заключительном разделе, посвященном Kubernetes, мы рассмотрим State и ingress.
Все, о чем мы говорили до сих пор, касается stateless, stateless - это когда нашим приложениям не важно, какую сеть они используют, и им не нужно постоянное хранение данных. В то время как приложения с состоянием, например, базы данных, чтобы такое приложение функционировало правильно, вам нужно убедиться, что стручки могут обращаться друг к другу через уникальную идентификацию, которая не меняется (имена хостов, IP&amp;hellip; и т.</description></item><item><title>56. Обзор IaC</title><link>https://romankurnovskii.com/ru/docs/90daysofdevops/day56/</link><pubDate>Wed, 15 Jun 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/90daysofdevops/day56/</guid><description>Обзор IaC Люди совершают ошибки! Автоматизация - это путь к успеху!
Как вы строите свои системы сегодня?
Каков был бы ваш план, если бы вы потеряли все, физические машины, виртуальные машины, облачные виртуальные машины, облачные PaaS и т.д. и т.п.?
Сколько времени у вас уйдет на замену всего?
Инфраструктура как код предоставляет решение, позволяющее сделать это и одновременно протестировать, не путайте это с резервным копированием и восстановлением, но что касается вашей инфраструктуры и сред, ваших платформ, мы должны быть в состоянии раскрутить их и обращаться с ними как со скотом и домашними животными.</description></item><item><title>57. Введение в Terraform</title><link>https://romankurnovskii.com/ru/docs/90daysofdevops/day57/</link><pubDate>Thu, 16 Jun 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/90daysofdevops/day57/</guid><description>&amp;ldquo;Terraform - это инструмент для безопасного и эффективного создания, изменения и управления версиями инфраструктуры&amp;rdquo;. «Приведенная выше цитата взята из HashiCorp, HashiCorp - это компания, стоящая за Terraform.
&amp;ldquo;Terraform - это программный инструмент &amp;ldquo;инфраструктура как код&amp;rdquo; с открытым исходным кодом, который обеспечивает последовательный рабочий процесс CLI для управления сотнями облачных сервисов. Terraform кодирует облачные API в декларативные конфигурационные файлы&amp;rdquo;.
У HashiCorp есть отличный ресурс HashiCorp Learn, который охватывает все их продукты и дает несколько отличных демонстрационных примеров, когда вы пытаетесь достичь чего-то с помощью инфраструктуры как кода.</description></item><item><title>58. Язык конфигурации HashiCorp (HCL)</title><link>https://romankurnovskii.com/ru/docs/90daysofdevops/day58/</link><pubDate>Fri, 17 Jun 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/90daysofdevops/day58/</guid><description>Язык конфигурации HashiCorp (HCL) Прежде чем мы начнем создавать вещи с помощью Terraform, мы должны немного погрузиться в язык HashiCorp Configuration Language (HCL). До сих пор в ходе нашей задачи мы рассмотрели несколько различных языков скриптов и программирования, и вот еще один. Мы затронули язык программирования Go, затем скрипты bash, мы даже немного затронули python, когда дело дошло до автоматизации сети.
Теперь мы должны рассмотреть язык конфигурации HashiCorp (HCL), если вы впервые видите этот язык, он может показаться немного пугающим, но он довольно прост и очень мощный.</description></item><item><title>59. Создание виртуальной машины с помощью Terraform</title><link>https://romankurnovskii.com/ru/docs/90daysofdevops/day59/</link><pubDate>Sat, 18 Jun 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/90daysofdevops/day59/</guid><description>Создание виртуальной машины с помощью Terraform и переменных В этой сессии мы будем создавать виртуальную машину или две виртуальные машины с помощью Terraform внутри VirtualBox. Это не совсем обычно, VirtualBox - это вариант виртуализации рабочих станций, и на самом деле это не было бы вариантом использования Terraform, но я сейчас нахожусь на высоте 36 000 футов в воздухе, и как бы я ни развертывал ресурсы публичного облака так высоко в облаках, гораздо быстрее сделать это локально на моем ноутбуке.</description></item><item><title>60. Контейнеры, провайдеры и модули Docker</title><link>https://romankurnovskii.com/ru/docs/90daysofdevops/day60/</link><pubDate>Sun, 19 Jun 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/90daysofdevops/day60/</guid><description>Контейнеры и модули Docker Вчера мы развернули виртуальную машину с помощью Terraform в нашей локальной среде FREE virtualbox. В этом разделе мы собираемся развернуть контейнер Docker с некоторой конфигурацией в нашей локальной среде Docker.
Docker Demo Для начала мы используем приведенный ниже блок кода, суть которого заключается в том, что мы хотим развернуть простое веб-приложение в docker и опубликовать его, чтобы оно было доступно в нашей сети. Мы будем использовать nginx и сделаем его доступным извне на нашем ноутбуке через localhost и порт 8000.</description></item><item><title>61. Kubernetes и множественные среды</title><link>https://romankurnovskii.com/ru/docs/90daysofdevops/day61/</link><pubDate>Mon, 20 Jun 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/90daysofdevops/day61/</guid><description>Kubernetes и множественные среды До сих пор в этом разделе, посвященном инфраструктуре как коду, мы рассматривали развертывание виртуальных машин, хотя и с помощью virtualbox, но суть одна и та же: мы определяем в коде, как должна выглядеть наша виртуальная машина, а затем развертываем ее. То же самое касается контейнеров Docker, и на этом занятии мы рассмотрим, как Terraform можно использовать для взаимодействия с ресурсами, поддерживаемыми Kubernetes.
Я использовал Terraform для развертывания своих кластеров Kubernetes в демонстрационных целях на трех основных облачных провайдерах, и вы можете найти репозиторий tf_k8deploy.</description></item><item><title>62. Terraform - Тестирование, инструменты и альтернативы</title><link>https://romankurnovskii.com/ru/docs/90daysofdevops/day62/</link><pubDate>Tue, 21 Jun 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/90daysofdevops/day62/</guid><description>Тестирование, инструменты и альтернативы Завершая этот раздел об инфраструктуре как коде, мы должны упомянуть о тестировании нашего кода, различных доступных инструментах, а также о некоторых альтернативах Terraform для достижения этой цели. Как я уже говорил в начале раздела, я остановился на Terraform, поскольку он, во-первых, бесплатный и с открытым исходным кодом, во-вторых, он кроссплатформенный и не зависит от окружения. Но есть и альтернативы, которые следует рассмотреть, но общая цель состоит в том, чтобы донести до людей, что это способ развертывания инфраструктуры.</description></item><item><title>63. Инструменты управления конфигурацией - Ansible/Terraform</title><link>https://romankurnovskii.com/ru/docs/90daysofdevops/day63/</link><pubDate>Wed, 22 Jun 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/90daysofdevops/day63/</guid><description>Введение: Управление конфигурацией Сразу после раздела, посвященного инфраструктуре как коду, мы, вероятно, будем говорить об управлении конфигурацией или управлении конфигурацией приложений.
Управление конфигурацией - это процесс поддержания приложений, систем и серверов в требуемом состоянии. Пересечение с Infrastructure as code заключается в том, что IaC гарантирует, что ваша инфраструктура находится в желаемом состоянии, но после этого, особенно terraform, не будет заботиться о желаемом состоянии настроек вашей ОС или приложений, и именно здесь на помощь приходят инструменты управления конфигурацией.</description></item><item><title>64. Ansible Введение</title><link>https://romankurnovskii.com/ru/docs/90daysofdevops/day64/</link><pubDate>Thu, 23 Jun 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/90daysofdevops/day64/</guid><description>&lt;p>Основы Ansible&lt;/p></description></item><item><title>65. Ansible Playbooks - Часть 1</title><link>https://romankurnovskii.com/ru/docs/90daysofdevops/day65/</link><pubDate>Fri, 24 Jun 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/90daysofdevops/day65/</guid><description>Ansible Playbooks В этом разделе мы рассмотрим основную причину, которую я вижу, по крайней мере, для Ansible. Я имею в виду, что это здорово - взять одну команду и обратиться ко многим различным серверам для выполнения простых команд, таких как перезагрузка длинного списка серверов и избавление от необходимости подключаться к каждому из них по отдельности.
Но как насчет того, чтобы взять голую операционную систему, объявить программное обеспечение и службы, которые мы хотим запустить на этой системе, и убедиться, что все они работают в нужном состоянии.</description></item><item><title>66. Ansible Playbooks - Часть 2</title><link>https://romankurnovskii.com/ru/docs/90daysofdevops/day66/</link><pubDate>Sat, 25 Jun 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/90daysofdevops/day66/</guid><description>Ansible Playbooks Продолжение&amp;hellip; В нашем последнем разделе мы начали с создания небольшой лаборатории, используя файл Vagrant для развертывания 4 машин, и мы использовали нашу Linux-машину, которую мы создали в этом разделе, в качестве нашей системы управления Ansible.
Мы также проверили несколько скриптов плейбуков, и в конце у нас был плейбук, который сделал наши web01 и web02 отдельными веб-серверами.
Наведение порядка Прежде чем перейти к дальнейшей автоматизации и развертыванию, мы должны рассказать о том, как сохранить наш плейбук аккуратным и опрятным и как мы можем разделить наши такты и обработчики по подпапкам.</description></item><item><title>67. Роли и развертывание балансировщика нагрузки</title><link>https://romankurnovskii.com/ru/docs/90daysofdevops/day67/</link><pubDate>Sun, 26 Jun 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/90daysofdevops/day67/</guid><description>На последнем занятии мы рассмотрели роли и использовали команду ansible-galaxy, чтобы помочь создать структуру папок для некоторых ролей, которые мы будем использовать. В итоге мы получили гораздо более аккуратное рабочее хранилище для нашего кода конфигурации, поскольку все спрятано в папках ролей.
Однако мы использовали только роль apache2 и получили рабочий playbook3.yaml для работы с нашими веб-серверами.
На данном этапе, если вы использовали только vagrant up web01 web02, пришло время запустить vagrant up loadbalancer, который откроет другую систему Ubuntu, которую мы будем использовать в качестве балансировщика нагрузки/прокси.</description></item><item><title>68. Теги, переменные, инвентаризация и конфигурация сервера базы данных</title><link>https://romankurnovskii.com/ru/docs/90daysofdevops/day68/</link><pubDate>Mon, 27 Jun 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/90daysofdevops/day68/</guid><description>Теги Поскольку мы оставили наш плейбук во время вчерашней сессии, нам нужно будет запустить все задачи и пьесы в рамках этого плейбука. Это означает, что нам придется запустить веб-серверы и балансировщик нагрузки до конца.
Однако теги могут позволить нам отделить их друг от друга, если мы захотим. Это может быть эффективным шагом, если в нашей среде есть очень большие и длинные плейбуки.
В нашем файле плейбука, в данном случае мы используем ansible-scenario5
1- hosts: webservers 2 become: yes 3 vars: 4 http_port: 8000 5 https_port: 4443 6 html_welcome_msg: &amp;#34;Hello 90DaysOfDevOps - Welcome to Day 66!</description></item><item><title>69. Ansible - контроллер автоматизации (Tower), AWX, Vault</title><link>https://romankurnovskii.com/ru/docs/90daysofdevops/day69/</link><pubDate>Tue, 28 Jun 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/90daysofdevops/day69/</guid><description>Завершая раздел об управлении конфигурацией, я хотел бы рассмотреть другие области, с которыми вы можете столкнуться при работе с Ansible.
Существует множество продуктов, составляющих платформу Ansible Automation.
Red Hat Ansible Automation Platform - это основа для создания и эксплуатации автоматизации в организации. Платформа включает в себя все инструменты, необходимые для внедрения автоматизации в масштабах предприятия.
Я постараюсь осветить некоторые из них в этом посте. Но для получения более подробной информации на официальном сайте Red Hat Ansible есть много другой информации.</description></item><item><title>70. Конвейеры CI/CD</title><link>https://romankurnovskii.com/ru/docs/90daysofdevops/day70/</link><pubDate>Wed, 29 Jun 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/90daysofdevops/day70/</guid><description>Реализация конвейера CI/CD (Continous Integration/Continous Deployment) является основой современной среды DevOps.
Он устраняет разрыв между разработкой и операциями, автоматизируя сборку, тестирование и развертывание приложений.
Мы много говорили об этой мантре Continous во вступительном разделе задачи. Но повторим еще раз:
Continous Integration (CI) - это более современная практика разработки программного обеспечения, при которой инкрементные изменения кода вносятся чаще и надежнее. Автоматизированные шаги рабочего процесса сборки и тестирования, запускаемые Contininous Integration, обеспечивают надежность изменений кода, сливаемых в репозиторий.</description></item><item><title>71. Введение в Jenkins</title><link>https://romankurnovskii.com/ru/docs/90daysofdevops/day71/</link><pubDate>Thu, 30 Jun 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/90daysofdevops/day71/</guid><description>Jenkins - это инструмент непрерывной интеграции, который позволяет непрерывно разрабатывать, тестировать и развертывать вновь созданный код.
Этого можно достичь двумя способами: ночные сборки или непрерывная разработка. Первый вариант заключается в том, что наши разработчики в течение дня занимаются своими задачами и в конце рабочего дня вносят свои изменения в репозиторий исходного кода. Затем в течение ночи мы проводим модульные тесты и собираем программное обеспечение. Это можно считать старым способом интеграции всего кода.
Другой вариант и более предпочтительный способ заключается в том, что наши разработчики по-прежнему фиксируют свои изменения в исходном коде, а затем, после фиксации кода, непрерывно запускается процесс сборки.</description></item><item><title>72. Работа с Jenkins</title><link>https://romankurnovskii.com/ru/docs/90daysofdevops/day72/</link><pubDate>Fri, 01 Jul 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/90daysofdevops/day72/</guid><description>Сегодня мы планируем немного поработать с Jenkins и сделать что-то в рамках нашего конвейера CI, рассматривая некоторые примеры кодовых баз, которые мы можем использовать.
Что такое конвейер? Прежде чем мы начнем, нам нужно знать, что такое конвейер, когда речь идет о CI, и мы уже рассмотрели это на вчерашнем занятии с помощью следующего изображения.
Мы хотим взять процессы или шаги, описанные выше, и автоматизировать их, чтобы в итоге получить результат, то есть развернутое приложение, которое мы можем отправить нашим клиентам, конечным пользователям и т.</description></item><item><title>73. Построение конвейера Jenkins</title><link>https://romankurnovskii.com/ru/docs/90daysofdevops/day73/</link><pubDate>Fri, 01 Jul 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/90daysofdevops/day73/</guid><description>В предыдущем разделе мы развернули Jenkins на нашем кластере Minikube и создали очень простой Jenkins Pipeline, который не делал ничего особенного, кроме как повторял этапы Pipeline.
Вы также могли заметить, что в процессе создания Jenkins Pipeline нам доступны некоторые примеры скриптов для запуска.
Первый демонстрационный скрипт - &amp;ldquo;Declartive (Kubernetes)&amp;rdquo;, и вы можете увидеть его этапы ниже.
1// Uses Declarative syntax to run commands inside a container. 2pipeline { 3 agent { 4 kubernetes { 5 // Rather than inline YAML, in a multibranch Pipeline you could use: yamlFile &amp;#39;jenkins-pod.</description></item><item><title>74. Hello World - Jenkinsfile App Pipeline</title><link>https://romankurnovskii.com/ru/docs/90daysofdevops/day74/</link><pubDate>Fri, 01 Jul 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/90daysofdevops/day74/</guid><description>Здравствуй мир - Jenkinsfile App Pipeline В предыдущем разделе мы построили простой конвейер в Jenkins, который будет перемещать наш образ докера из нашего dockerfile в публичном репозитории GitHub в наш частный репозиторий Dockerhub.
В этом разделе мы хотим сделать еще один шаг вперед и добиться следующего с помощью нашего простого приложения.
Цель Dockerfile (Hello World) Jenkinsfile Jenkins Pipeline для запуска при обновлении репозитория GitHub Используйте репозиторий GitHub в качестве источника. Запуск - Clone/Get Repository, Build, Test, Deploy Stages Развертывание на DockerHub с инкрементными номерами версий Stretch Goal для развертывания на нашем кластере Kubernetes (для этого потребуется еще одно задание и репозиторий манифеста с использованием учетных данных GitHub).</description></item><item><title>75. Обзор GitHub Actions</title><link>https://romankurnovskii.com/ru/docs/90daysofdevops/day75/</link><pubDate>Fri, 01 Jul 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/90daysofdevops/day75/</guid><description>Обзор действий GitHub В этом разделе я хотел бы перейти к рассмотрению, возможно, другого подхода, чем тот, на который мы только что потратили время. На этом занятии мы сосредоточимся на GitHub Actions.
GitHub Actions - это платформа CI/CD, которая позволяет нам строить, тестировать и развертывать, помимо прочих задач, наш конвейер. В ней есть концепция рабочих процессов, которые собираются и тестируются на основе репозитория GitHub. Вы также можете использовать GitHub Actions для управления другими рабочими процессами на основе событий, происходящих в вашем репозитории.</description></item><item><title>76. Обзор ArgoCD</title><link>https://romankurnovskii.com/ru/docs/90daysofdevops/day76/</link><pubDate>Fri, 01 Jul 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/90daysofdevops/day76/</guid><description>Обзор ArgoCD &amp;ldquo;Argo CD - это декларативный инструмент непрерывной доставки GitOps для Kubernetes&amp;rdquo;.
Контроль версий - ключевой момент здесь. Вы когда-нибудь вносили изменения в вашу среду на лету и не помните об этих изменениях, а поскольку свет горит и все вокруг зеленое, вы продолжаете упорно двигаться вперед? Вы когда-нибудь вносили изменения и ломали все или часть всего? Вы могли бы знать, что внесли изменение, и вы можете быстро откатить свое изменение, тот плохой скрипт или опечатку.</description></item><item><title>77. Мониторинг</title><link>https://romankurnovskii.com/ru/docs/90daysofdevops/day77/</link><pubDate>Fri, 01 Jul 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/90daysofdevops/day77/</guid><description>Введение: Мониторинг В этом разделе мы поговорим о мониторинге, что это такое, зачем он нам нужен?
Что такое мониторинг? Мониторинг - это процесс пристального наблюдения за всей инфраструктурой.
и зачем он нам нужен? Предположим, что мы управляем тысячей серверов, которые включают в себя множество специализированных серверов, таких как серверы приложений, серверы баз данных и веб-серверы. Мы также можем усложнить эту задачу за счет дополнительных сервисов и различных платформ, включая публичные облачные предложения и Kubernetes.
Мы отвечаем за то, чтобы все сервисы, приложения и ресурсы на серверах работали так, как должны.</description></item><item><title>78. Hands-On Monitoring Tools</title><link>https://romankurnovskii.com/ru/docs/90daysofdevops/day78/</link><pubDate>Fri, 01 Jul 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/90daysofdevops/day78/</guid><description>Инструменты мониторинга своими руками На последнем занятии я говорил об общей картине мониторинга и рассмотрел Nagios, для этого было две причины. Во-первых, это программное обеспечение, о котором я много слышал на протяжении многих лет, поэтому хотел узнать немного больше о его возможностях.
Сегодня я буду изучать Prometheus, я все больше и больше вижу Prometheus в ландшафте Cloud-Native, но его также можно использовать для присмотра за физическими ресурсами вне Kubernetes и тому подобного.
Prometheus - мониторинг практически всего Прежде всего, Prometheus - это Open-Source, который может помочь вам контролировать контейнеры и системы на базе микросервисов, а также физические, виртуальные и другие сервисы.</description></item><item><title>79. Log Management</title><link>https://romankurnovskii.com/ru/docs/90daysofdevops/day79/</link><pubDate>Fri, 01 Jul 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/90daysofdevops/day79/</guid><description>Введение: Управление журналами В продолжение проблем и решений в области мониторинга инфраструктуры, управление журналами - это еще один пазл в общей картине наблюдаемости.
Управление и агрегация журналов Давайте поговорим о двух основных концепциях, первая из которых - агрегация журналов, это способ сбора и маркировки журналов приложений от множества различных служб в единую приборную панель, по которой можно легко осуществлять поиск.
Одной из первых систем, которые должны быть построены в системе управления производительностью приложений, является агрегация журналов.</description></item><item><title>80. ELK Stack</title><link>https://romankurnovskii.com/ru/docs/90daysofdevops/day80/</link><pubDate>Fri, 01 Jul 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/90daysofdevops/day80/</guid><description>ELK Stack На этом занятии мы немного подробнее рассмотрим некоторые из упомянутых нами опций.
ELK Stack ELK Stack - это комбинация трех отдельных инструментов:
Elasticsearch - это распределенный, бесплатный и открытый поисковый и аналитический механизм для всех типов данных, включая текстовые, числовые, геопространственные, структурированные и неструктурированные.
Logstash - свободный и открытый конвейер обработки данных на стороне сервера, который получает данные из множества источников, преобразует их, а затем отправляет в ваш любимый &amp;ldquo;тайник&amp;rdquo;.
Kibana - это бесплатный и открытый пользовательский интерфейс, позволяющий визуализировать данные Elasticsearch и перемещаться по стеку Elastic Stack.</description></item><item><title>81. Fluentd и FluentBit</title><link>https://romankurnovskii.com/ru/docs/90daysofdevops/day81/</link><pubDate>Fri, 01 Jul 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/90daysofdevops/day81/</guid><description>Fluentd и FluentBit Еще одним коллектором данных, который я хотел изучить в рамках раздела о наблюдаемости, был Fluentd. Это унифицированный уровень протоколирования с открытым исходным кодом.
Fluentd имеет четыре ключевые особенности, которые делают его подходящим для создания чистых, надежных конвейеров протоколирования:
Унифицированное протоколирование с JSON: Fluentd старается структурировать данные в виде JSON, насколько это возможно. Это позволяет Fluentd унифицировать все аспекты обработки данных журналов: сбор, фильтрацию, буферизацию и вывод журналов из нескольких источников и мест назначения.</description></item><item><title>82. EFK Stack</title><link>https://romankurnovskii.com/ru/docs/90daysofdevops/day82/</link><pubDate>Fri, 01 Jul 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/90daysofdevops/day82/</guid><description>EFK Stack В предыдущем разделе мы говорили о ELK Stack, который использует Logstash в качестве сборщика логов в стеке, в EFK Stack мы меняем его на FluentD или FluentBit.
Наша задача в этом разделе - отслеживать журналы Kubernetes с помощью EFK.
Обзор EFK Мы развернем следующее в нашем кластере Kubernetes.
Стек EFK представляет собой набор из 3 программ, объединенных вместе, включая:
Elasticsearch : NoSQL база данных используется для хранения данных и предоставляет интерфейс для поиска и журнал запросов.</description></item><item><title>83. Визуализация данных - Grafana</title><link>https://romankurnovskii.com/ru/docs/90daysofdevops/day83/</link><pubDate>Fri, 01 Jul 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/90daysofdevops/day83/</guid><description>Визуализация данных - Grafana Мы много говорили о Kibana в этом разделе, посвященном Observability. Но мы также должны уделить некоторое время Grafana. Но это не одно и то же, и они не полностью конкурируют друг с другом.
Основной функцией Kibana является запрос и анализ данных. Используя различные методы, пользователи могут искать в данных, проиндексированных в Elasticsearch, определенные события или строки в данных для анализа и диагностики первопричин. На основе этих запросов пользователи могут использовать функции визуализации Kibana, которые позволяют визуализировать данные различными способами, используя графики, таблицы, географические карты и другие виды визуализации.</description></item><item><title>84. Управление данными</title><link>https://romankurnovskii.com/ru/docs/90daysofdevops/day84/</link><pubDate>Fri, 01 Jul 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/90daysofdevops/day84/</guid><description>Введение: Управление данными Управление данными - это далеко не новая стена, на которую нужно карабкаться, хотя мы знаем, что данные стали более важными, чем несколько лет назад. Ценные и постоянно меняющиеся, они также могут стать огромным кошмаром, когда мы говорим об автоматизации и непрерывной интеграции, тестировании и развертывании частых выпусков программного обеспечения. Вводим постоянные данные и базовые службы данных, которые часто являются главным виновником, когда что-то идет не так.
Но прежде чем я перейду к управлению данными в облаке, нам нужно подняться на уровень выше.</description></item><item><title>85. Службы данных</title><link>https://romankurnovskii.com/ru/docs/90daysofdevops/day85/</link><pubDate>Fri, 01 Jul 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/90daysofdevops/day85/</guid><description>Службы данных Базы данных являются наиболее распространенными службами данных, с которыми мы сталкиваемся в наших средах. На этом занятии я хотел бы рассмотреть некоторые из этих различных типов баз данных и некоторые случаи их использования. Некоторые из них мы уже использовали и видели в ходе решения задачи.
С точки зрения разработки приложений выбор правильной службы данных или базы данных будет иметь огромное значение для производительности и масштабируемости вашего приложения.
https://www.youtube.com/watch?v=W2Z7fbCLSTw
Ключ-значение База данных &amp;ldquo;ключ-значение&amp;rdquo; - это тип нереляционной базы данных, которая использует простой метод &amp;ldquo;ключ-значение&amp;rdquo; для хранения данных.</description></item><item><title>86. Резервное копирование всех платформ</title><link>https://romankurnovskii.com/ru/docs/90daysofdevops/day86/</link><pubDate>Fri, 01 Jul 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/90daysofdevops/day86/</guid><description>Резервное копирование всех платформ В ходе всего этого задания мы обсудили множество различных платформ и сред. Всех их объединяет то, что все они нуждаются в определенном уровне защиты данных!
Защита данных существует уже много лет, но богатство данных, которые мы имеем сегодня, и ценность, которую эти данные приносят, означает, что мы должны быть уверены не только в устойчивости к сбоям инфраструктуры за счет наличия нескольких узлов и высокой доступности приложений, но мы также должны учитывать, что нам нужна копия этих данных, этих важных данных в безопасном и надежном месте, если произойдет сбой.</description></item><item><title>87. Резервное копирование и восстановление</title><link>https://romankurnovskii.com/ru/docs/90daysofdevops/day87/</link><pubDate>Fri, 01 Jul 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/90daysofdevops/day87/</guid><description>Резервное копирование и восстановление своими руками На прошлом занятии мы рассмотрели Kopia - инструмент резервного копирования с открытым исходным кодом, который мы использовали для переноса важных данных на локальный NAS и в облачное хранилище объектов.
В этом разделе я хочу погрузиться в мир резервного копирования Kubernetes. Это платформа, которую мы рассматривали в The Big Picture: Kubernetes ранее в этой задаче.
Мы снова будем использовать наш кластер minikube, но на этот раз мы воспользуемся некоторыми из доступных аддонов.</description></item><item><title>88. Резервное копирование, ориентированное на приложения</title><link>https://romankurnovskii.com/ru/docs/90daysofdevops/day88/</link><pubDate>Fri, 01 Jul 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/90daysofdevops/day88/</guid><description>Резервное копирование, ориентированное на приложения В День 85 мы уже потратили некоторое время на обсуждение служб данных или приложений с интенсивным использованием данных, таких как базы данных. Для этих служб данных мы должны подумать о том, как управлять согласованностью, особенно когда речь идет о согласованности приложений.
В этой статье мы рассмотрим требования к защите данных приложения в последовательной манере.
Для этого мы выберем инструмент Kanister
Представляем Kanister Kanister - это проект с открытым исходным кодом от Kasten, который позволяет нам управлять (резервное копирование и восстановление) данными приложений на Kubernetes.</description></item><item><title>89. Аварийное восстановление</title><link>https://romankurnovskii.com/ru/docs/90daysofdevops/day89/</link><pubDate>Fri, 01 Jul 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/90daysofdevops/day89/</guid><description>Аварийное восстановление Мы уже упоминали о том, что различные скрипты сбоев требуют различных требований к восстановлению. Когда речь идет о скриптах пожара, наводнения и крови, мы можем рассматривать их как аварийные ситуации, в которых нам может потребоваться, чтобы наши рабочие нагрузки были запущены в совершенно другом месте как можно быстрее или, по крайней мере, с почти нулевым временем восстановления (RTO).
Этого можно достичь только в масштабе, если автоматизировать репликацию всего стека приложений в резервную среду.</description></item><item><title>90. Мобильность данных и приложений</title><link>https://romankurnovskii.com/ru/docs/90daysofdevops/day90/</link><pubDate>Fri, 01 Jul 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/90daysofdevops/day90/</guid><description>Мобильность данных и приложений День 90 из #90DaysOfDevOps Challenge! В этой заключительной сессии я собираюсь рассказать о мобильности наших данных и приложений. Я сосредоточусь конкретно на Kubernetes, но потребность в мобильности между платформами и между платформами - это то, что является постоянно растущей потребностью и встречается на практике.
Сценарий использования таков: &amp;ldquo;Я хочу переместить рабочую нагрузку, приложение и данные из одного места в другое&amp;rdquo; по разным причинам, будь то стоимость, риск или предоставление бизнесу более качественных услуг.</description></item><item><title>Генерация аннотации</title><link>https://romankurnovskii.com/ru/docs/disser/utils/text_2_short/</link><pubDate>Thu, 29 Dec 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/disser/utils/text_2_short/</guid><description> Сгенерировать</description></item><item><title>EC2</title><link>https://romankurnovskii.com/ru/docs/aws-certified-developer-associate/ec2/</link><pubDate>Sat, 10 Sep 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/aws-certified-developer-associate/ec2/</guid><description>Amazon EC2 Документация Amazon EC2 - 1 Документация Amazon EC2 - 2 Amazon Elastic Compute Cloud (EC2) - одна из самых популярных служб AWS. EC2 позволяет запускать различные типы облачных экземпляров и оплачивать их по модели &amp;ldquo;оплата за использование&amp;rdquo;. EC2 позволяет контролировать вычислительные ресурсы на уровне операционной системы, работая в вычислительной среде Amazon.
Цены Актуальный прайс
Практика Создание EC2 инстанса Заходим на страницу EC2 -&amp;gt; Launch Instance
Образ EC2 Выбираем нужный нам образ Создание ключей Создадим ключ, чтобы использовать его для подключения к инстансу извне Вводим любое имя.</description></item><item><title>Elastic Beanstalk</title><link>https://romankurnovskii.com/ru/docs/aws-certified-developer-associate/elasticbeanstalk/</link><pubDate>Sat, 10 Sep 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/aws-certified-developer-associate/elasticbeanstalk/</guid><description>AWS Elastic Beanstalk Документация AWS Elastic Beanstalk Документация AWS Elastic Beanstalk Цены Дополнительная плата за AWS Elastic Beanstalk не взимается. Оплате подлежат только ресурсы AWS, необходимые для хранения и работы приложений.
Практика Контролируемое развертывание с AWS Elastic Beanstalk Ссылка на лабораторную работу В этой лабораторной работе развернем несколько обновлений версий приложения в среде с балансировкой нагрузки и автоматическим масштабированием.
Первое обновление развертывается с помощью простого развертывания. Второе обновление развертывается с помощью blue-green развертывания, когда создается отдельная среда для запуска новой версии приложения, а DNS свитчер переключает входящий трафик на новую среду.</description></item><item><title>В чем разница между Маржинализмом и Меркантилизмом</title><link>https://romankurnovskii.com/ru/posts/economics/raznica-mezhdu-marzhinalizmom-i-nerkantilizmom/</link><pubDate>Thu, 26 Jan 2023 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/posts/economics/raznica-mezhdu-marzhinalizmom-i-nerkantilizmom/</guid><description>Маржинализм и меркантилизм - это два разных термина, которые описывают различные экономические концепции.
Маржинализм - (Неоклассическое направление) - середина XIX в, это экономическая теория, которая основана на идее, что цена товара или услуги определяется его маржой, то есть разницей между продажной ценой и затратами на его производство. В рамках маржинализма обычно считается, что рост маржи является показателем эффективности экономики.
Меркантилизм - это экономическая теория, которая основана на идее, что основной движущей силой экономики является спрос. Меркантилисты считают, что рост спроса способствует росту экономики и снижению безработицы.</description></item><item><title>ChatGPT/ruGPT-3</title><link>https://romankurnovskii.com/ru/posts/rugpt-3-notes/</link><pubDate>Sat, 31 Dec 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/posts/rugpt-3-notes/</guid><description> https://chat.openai.com/chat/ https://russiannlp.github.io/rugpt-demo/ Краткий экскурс в ruGPT-3. Инструкция и демонстрация</description></item><item><title>Требования по иностранным языкам</title><link>https://romankurnovskii.com/ru/docs/disser/canditate-minimum/languages-requirements/</link><pubDate>Thu, 29 Dec 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/disser/canditate-minimum/languages-requirements/</guid><description>Необходимые документы:
Заявление на имя заведующего кафедрой. В з-и указать название и шифр специальности Монография на иностранном языке. Реферат на русском языке (объем 21-8 стр) по прочитанной лит-ре объемом 300 стр. Реферат, подписанный автором, должен иметь заключения, а также библиографию (список использованной литературы). Глосарий (словарь специальных терминов) - ен менее 300 единиц. Отзыв от научного руководителя или специалиста по данной дисциплине. Содержание экзамена:
Вышеуказанные документы сдаются н а кафедру иностраных яызков за 10 дней до экзамена.</description></item><item><title>Написание статей</title><link>https://romankurnovskii.com/ru/docs/disser/articles-notes/</link><pubDate>Thu, 22 Dec 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/disser/articles-notes/</guid><description>В аннотацию прописывать предложения, которые могут быть запрошены как поисковый запрос в поисковиках. Анотации индексируются поисковиками яндекс, гугл.
https://www.semanticscholar.org/ https://www.researchgate.net/ После выхода в сборнике:
Добавить на сайт pdf из журнала Добавить в ResearchGate IMF Report: September 16, 2022: West Bank and Gaza: Report to the AD HOC Liaison Committee
Конференции https://sciencen.org/konferencii/grafik-konferencij/ https://na-konferencii.ru/ https://konferencii.ru/ https://www.kon-ferenc.ru/econom.html https://www.hse.ru/science/HSEconf</description></item><item><title>Раздел 1. Экономическая теория.</title><link>https://romankurnovskii.com/ru/docs/disser/canditate-minimum/01-economic-theory/</link><pubDate>Mon, 12 Dec 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/disser/canditate-minimum/01-economic-theory/</guid><description>РУДН - https://econ.rudn.ru/general_information/cathedras/ekonomicheskih_otnosheniy/kandidatskiy_minimum_2016_vesna_osen_voprosy/ ВШЭ - https://we.hse.ru/phd_programm МГИМО - https://mgimo.ru/upload/2021/04/progr_kand-ehkz-08-00-14-meo-i-ves.pdf Перечень вопросов, выносимых на кандидатский минимум по специальности 08.00.14 Мировая экономика:
Раздел 1. Экономическая теория. (ВОЛГИНА НАТАЛЬЯ АНАТОЛЬЕВНА)
Меркантилизм как внешнеторговая теория и политика. «Игра с нулевой суммой» в торговле. Адам Смит: теория абсолютного преимущества в торговле. Давид Рикардо: теория сравнительного преимущества в торговле. Теорема Хекшера-Олина и выравнивание относительных цен на торгуемые товары. Меркантилизм как внешнеторговая теория и политика. «Игра с нулевой суммой» в торговле. Меркантилизм (15-17 вв) - это экономическая политика, цель которой — накопление в стране драгоценных металлов, средство достижения цели – активный торговый баланс, то есть превышение экспорта над импортом.</description></item><item><title>Cloud exam Quizz</title><link>https://romankurnovskii.com/ru/apps/cloud-exam-quizz/</link><pubDate>Mon, 10 Oct 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/apps/cloud-exam-quizz/</guid><description>Goal: Check if you are ready to pass Cloud exam
Goal: Check if you are ready to pass the Cloud exam
The application calculates progress after each answered question. Ability to answer at least one question and get a comment at the same time. No need to pass all questions before. It is convenient to spend 20 min a day Works from web/tablet/mobile Link: https://www.cloud-exam-prepare.com</description></item><item><title>Пополнение Interactive Brokers с Израильского счета</title><link>https://romankurnovskii.com/ru/posts/interactivebrokers-deposit/</link><pubDate>Fri, 07 Oct 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/posts/interactivebrokers-deposit/</guid><description>Web Создание заявки в IB Заходим на сайт https://www.interactivebrokers.co.uk/portal/#/ Нажимаем Deposit Нажимаем Use a new deposit method если ранее шаблон не был создан Bank Wire -&amp;gt; Get instructions Account Number: Номер банковского счета.
Получаем инструкции с реквизитами для пополнения Bank Wire Instructions Эти данные Вам нужны для оплаты в Discount Bank
Отправить деньги из Discount Bank Заходим в личный кабинет банка start.telebank.co.il Нажимаем: ביצוע העברה
Заполняем форму
Нажимаем המשך и жмем далее. Приходит смс с подверждением, вводим и жмем далее</description></item><item><title>Lambda</title><link>https://romankurnovskii.com/ru/docs/aws-certified-developer-associate/lambda/</link><pubDate>Sun, 11 Sep 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/aws-certified-developer-associate/lambda/</guid><description>https://docs.aws.amazon.com/lambda/?id=docs_gateway
https://aws.amazon.com/lambda/
AWS Lambda – это сервис бессерверных вычислений, который запускает программный код в ответ на определенные события и отвечает за автоматическое выделение необходимых вычислительных ресурсов.
AWS Lambda автоматически запускает программный код в ответ на различные события, такие как HTTP‑запросы через Amazon API Gateway, изменение объектов в корзинах Amazon Simple Storage Service (Amazon S3), обновление таблиц в Amazon DynamoDB или смена состояний в AWS Step Functions.
Поддержка языков Java, Go, PowerShell, Node.js, C#, Python и Ruby</description></item><item><title>IAM</title><link>https://romankurnovskii.com/ru/docs/aws-certified-developer-associate/iam/</link><pubDate>Fri, 09 Sep 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/aws-certified-developer-associate/iam/</guid><description>AWS Identity and Access Management Документация AWS IAM Документация AWS IAM AWS Identity and Access Management (IAM) позволяет безопасно контролировать доступ пользователей к службам и ресурсам AWS. Эта услуга предназначена для организаций с множеством пользователей или систем, использующих такие продукты AWS, как Amazon EC2, Amazon RDS и AWS Management Console. С помощью IAM вы можете централизованно управлять пользователями, учетными данными безопасности, такими как ключи доступа, и разрешениями, контролирующими доступ пользователей к ресурсам AWS.
Практика Переходим на страницу IAM</description></item><item><title>cognito-token-observer</title><link>https://romankurnovskii.com/ru/apps/npm/cognito-token-observer/</link><pubDate>Sun, 28 Aug 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/apps/npm/cognito-token-observer/</guid><description/></item><item><title>hugo-lunr-ml</title><link>https://romankurnovskii.com/ru/apps/npm/hugo-lunr-ml/</link><pubDate>Fri, 22 Jul 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/apps/npm/hugo-lunr-ml/</guid><description/></item><item><title>Увеличение картинки по нажатию в Hugo</title><link>https://romankurnovskii.com/ru/posts/hugo-add-image-zoomin/</link><pubDate>Sat, 09 Jul 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/posts/hugo-add-image-zoomin/</guid><description>Введение В Hugo по умолчанию используется парсинг markdown файлов. Т.е. мы получаем html код в том виде, как он написан в markdown.
Для того, чтобы нам понимать какие именно изображения мы можем увеличивать, добавим к этим изображениям отдельный тег/ключ/id
Инструменты Для реализации функционала нам необходимо:
написать/подключить скрипт/обработчик, который будет выполнять эффект zoomin к нужным нам изображениям Добавить необходимые метаданные к изображениям, чтобы скрипт их смог найти Скрипт zoomin Для добавления возможности увеличивать картинку при нажатии воспользуемся пакетом medium-zoom.</description></item><item><title>Израиль - Хайфа - Бахайские сады</title><link>https://romankurnovskii.com/ru/posts/photos/22-07-02-israel-haifa-bahai-gardens/</link><pubDate>Sat, 02 Jul 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/posts/photos/22-07-02-israel-haifa-bahai-gardens/</guid><description>Маршрут</description></item><item><title>Установка Ubuntu Desktop 22.10 (Kinetic Kudu) на ARM CPU</title><link>https://romankurnovskii.com/ru/posts/howto-install-ubuntu-desktop-on-arm/</link><pubDate>Thu, 23 Jun 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/posts/howto-install-ubuntu-desktop-on-arm/</guid><description>Ubuntu - одна из популярных Linux систем и достаточно много обзоров по установке Ubuntu. В этой статье мы будем устанавливать образ Ubuntu для ARM процессора на виртуальную машину UTM. Вся установка будет проходить на Mac OS.
Загрузка установочного образа На сайте Ubuntu доступен для скачивания только образ Ubuntu Server ARM версии 22.04 - без графического интерфейса. Но можно скачать обновленный релиз Ubuntu Desktop для ARM - Daily Build по ссылке.
Находим 64-bit ARM (ARMv8/AArch64) desktop image и скачиваем Виртуальная машина В качестве виртуальной машины для установки RHEL 9 использую бесплатную виртуальную машину UTM.</description></item><item><title>Как подключить React .jsx в проект на Hugo</title><link>https://romankurnovskii.com/ru/posts/integrate-hugo-react/</link><pubDate>Sun, 19 Jun 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/posts/integrate-hugo-react/</guid><description>Hugo предлагает подключение различных JS библиотек в проект. Такие изменения влекут за собой полное обновление проекта. Сегодня мы подключим компонент react без внесения больших изменений.
React - это библиотека. Чтобы она заработала на сайте, необходимо ее подклчюить, а далее воспользоваться внутренними функциями.
Подключить можно двумя способоами. С помощью подгрузки скрипта с CDN или загрузки пакета в package.json, чтопозволит использовать .jsx
package.json План:
Импорт пакета в package.json Создание .jsx скрипта Загрузка/build пакета в Hugo Импорт В корне проекта запускаем команду</description></item><item><title>Установка Linux RHEL 9</title><link>https://romankurnovskii.com/ru/posts/howto-install-rhel-9-free/</link><pubDate>Fri, 17 Jun 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/posts/howto-install-rhel-9-free/</guid><description>Red Hat Enterprise Linux 9 (RHEL 9) под кодовым названием Plow стал общедоступным (GA). Компания Red Hat объявила об этом 18 мая 2022 года. Она сменила бета-версию, которая существовала с 3 ноября 2021 года.
RHEL 9 - это несколько первых релизов в семействе Red Hat. Это первый крупный релиз после приобретения Red Hat компанией IBM в июле 2019 года, а также первая крупная версия после отказа от проекта CentOS в пользу CentOS Stream, который теперь является предшественником RHEL.</description></item><item><title>Сниппеты Python</title><link>https://romankurnovskii.com/ru/posts/python-snippets/</link><pubDate>Thu, 16 Jun 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/posts/python-snippets/</guid><description>Дата Текущая 1import datetime 2x = datetime.datetime.now() # 2022-08-04 21:41:24.871910 Формат YYYY-MM-DD 1import datetime 2x = datetime.datetime.now().strftime(&amp;#34;%Y-%m-%d&amp;#34;) # 2022-08-04 Создать папку 1import os 2if not os.path.exists(name): 3 os.makedirs(name) Самое часто встречаемое значение в списке 1import collections 2x = [1, 2, 7, 4, 5, 6, 7, 10] 3print(collections.Counter(x).most_common(1)[0][0]) # 7 1def most_freq(list): 2 return max(set(list), key=list.count) 3 4test = [10, 10, 20, 20, 10, 30, 30, 30, 20, 10] 5print(most_freq(test)) # 10 Случайное целое число 1import random 2x = random.</description></item><item><title>Популярные команды Docker</title><link>https://romankurnovskii.com/ru/posts/docker-commands/</link><pubDate>Tue, 07 Jun 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/posts/docker-commands/</guid><description>Full in english
Топ 10 комманд Docker docker ps — смотрим список запущенных контейнеров docker pull — загрузка образа docker build — собирает образ docker logs — смотрим логи docker run — запускаем контейнер docker stop — останавливает контейнер docker kill — «убивает» контейнер docker rm — удаляет контейнер docker rmi — удаляет образ docker volume ls — список томов docker build Документация Построить образ из Dockerfile.
1docker build [DOCKERFILE PATH] Флаги --file -f Путь, где находится Dockerfile --force-rm Всегда удалять временные контейнеры.</description></item><item><title>Как сделать редирект на другой URL в JavaScript</title><link>https://romankurnovskii.com/ru/posts/howto-redirect-to-url/</link><pubDate>Mon, 06 Jun 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/posts/howto-redirect-to-url/</guid><description>Пользователя можно перенаправлять с одной веб-страницы на любую другую несколькими способами.
с помощью обновления мета-данных HTML. Перенаправления на стороне сервера. Например, используя файл .htaccess, PHP с помощью перенаправления на стороне клиента через JavaScript. Для перенаправления на другой URL с помощью JavaScript используем window.location.href или window.location.replace(). Передать второй аргумент, чтобы произвести клик по ссылке (true - по умолчанию) или перенаправление по HTTP (false).
JavaScript функции Логика 1const newUrl = &amp;#39;https://www.google.com/&amp;#39;; 2 3window.location.href = newUrl; // 1 4window.</description></item><item><title>Шпаргалка tar архиватор</title><link>https://romankurnovskii.com/ru/posts/cheat-sheet-command-tar/</link><pubDate>Sun, 05 Jun 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/posts/cheat-sheet-command-tar/</guid><description>Кратко Создать:
1tar cf archive.tar directory Распаковать:
1tar xf archive.tar Создание 1mkdir my_dir # Создаем папку 2tar cf dir_archive.tar my_dir # Создаем архив с папкой 3ll # Проверяем содержимое текущего каталога 4# -rw-r--r-- 1 r staff 1.5K Jun 4 14:42 dir_archive.tar 5# drwxr-xr-x 2 r staff 64B Jun 4 14:42 my_dir Распаковка 1tar xf dir_archive.tar Сжатие 1tar czf dir_archive.tar.gz dir_archive.tar Распаковка сжатого файла 1tar xzf dir_archive.tar.gz Сжатие с помощью bzip2 1tar cjf dir_archive.tar.bz2 my_dir Распаковка с помощью bzip2 1tar xjf dir_archive.</description></item><item><title>Как переименовать файлы в Python</title><link>https://romankurnovskii.com/ru/posts/howto-rename-files-in-python/</link><pubDate>Sat, 04 Jun 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/posts/howto-rename-files-in-python/</guid><description>os.rename Если имеется весь путь до пути файла:
1old_source = &amp;#39;/Users/r/Desktop/old_source.txt&amp;#39; 2new_source = &amp;#39;/Users/r/Desktop/new_source.txt&amp;#39; 3os.rename(&amp;#34;old_source&amp;#34;, &amp;#34;new_source&amp;#34;) Если имеется только имя файла, воспользуемся os.path.splitext(), который возвращает кортеж из имени файла и расширения:
1import os 2for file in os.listdir(): 3 name, ext = os.path.splitext(file) # return (&amp;#39;путь до файла без расщирения&amp;#39;, &amp;#39;.txt&amp;#39;) 4 new_name = f&amp;#34;{name}_new{ext}&amp;#34; 5 os.rename(file, new_name) pathlib С помощью встроенного модуля pathlib
1Path.rename(new_name) 1from pathlib import Path 2for file in os.listdir(): 3 f = Path(file) 4 new_name = f&amp;#34;{f.</description></item><item><title>Как сделать глубокое клонирование объекта в JavaScript</title><link>https://romankurnovskii.com/ru/posts/howto-create-deepclone-js/</link><pubDate>Thu, 02 Jun 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/posts/howto-create-deepclone-js/</guid><description>В JavaScript объекты копируются по ссылке. Это означает, что фактически две(или более) ссылок ссылается на один объект Для глубокого клонирования мы можем воспользоваться рекурсией
Воспользуемся методом Object.assign() и возьмем пустой объект ({}), чтобы создать клон оригинального объекта. Используем Object.keys() и Array.prototype.forEach() для определения ключей-значений, которые нужно полностью клонировать (не ссылаться на них).
1const deepClone = obj =&amp;gt; { 2 let clone = Object.assign({}, obj); 3 Object.keys(clone).forEach( 4 key =&amp;gt; (clone[key] = typeof obj[key] === &amp;#39;object&amp;#39; ?</description></item><item><title>PyScript - Python, встроенный в HTML</title><link>https://romankurnovskii.com/ru/posts/pyscript-python-embedded-in-html/</link><pubDate>Fri, 20 May 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/posts/pyscript-python-embedded-in-html/</guid><description>PyScript PyScript - средство запуска Python в браузере, встроенное в HTML, был анонсирован на мероприятии PyCon в Солт-Лейк-Сити, США. Кнопка Instl здесь для шутки, так как установка не требуется
PyScript зависит от существующего проекта Pyodide, который является скомпилированным в WebAssembly интерпретатором CPython 3.8, позволяющим запускать Python в браузере, а также скомпилированных научных пакетов Python.
Связывание с файлами библиотеки CSS и JavaScript PyScript позволяет разработчикам встраивать код Python с помощью тега &amp;lt;py-script&amp;gt;, а также компонент &amp;lt;py-repl&amp;gt; (Read, Evaluate, Print, Loop), который позволяет Python печатать и выполняться динамически.</description></item><item><title>Руководство по оформлению Markdown файлов</title><link>https://romankurnovskii.com/ru/posts/markdown-syntax/</link><pubDate>Thu, 21 Apr 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/posts/markdown-syntax/</guid><description>&lt;p>Эта статья предлагает пример базового синтаксиса Markdown, который можно использовать в файлах содержимого Hugo, а также показывает, украшаются ли основные элементы HTML с помощью CSS в теме Hugo.&lt;/p></description></item><item><title>Отображение таблицы Google Sheets в JSON</title><link>https://romankurnovskii.com/ru/posts/google-sheets-2-json/</link><pubDate>Sat, 12 Mar 2022 11:55:25 +0200</pubDate><guid>https://romankurnovskii.com/ru/posts/google-sheets-2-json/</guid><description>Задача Есть таблица google. Необходимо конвертировать ее в JSON и не делать каждый раз ручной экспорт.
Условия таблица закрыта для общего просмотра json отображение читать по ссылке План Использовать webapps от google. Парсить google таблицу и выдавать готовый url с json.
Подготовка Открываем Таблицу Google Extensions → Apps Script Создаем скрипт Как работает endpoint. Документация
Когда пользователь посещает приложение или программа отправляет приложению HTTP-запрос GET, Apps Script запускает функцию doGet(e).
Когда отправляется приложению HTTP-запрос POST, вместо этого Apps Script запускает doPost(e).</description></item><item><title>Политика конфиденциальности</title><link>https://romankurnovskii.com/ru/p/privacy_ru/</link><pubDate>Sat, 12 Mar 2022 13:11:22 +0800</pubDate><guid>https://romankurnovskii.com/ru/p/privacy_ru/</guid><description>Список приложений: ФСФР - Базовый экзамен
Настоящая Политика конфиденциальности персональных данных (далее – Политика конфиденциальности) действует в отношении всей информации, которую приложения из раздела: &amp;ldquo;Список приложений&amp;rdquo; могут получить о Пользователе во время использования.
Общие положения 1.1. Целью Политики конфиденциальности является реализация требований законодательства в области обработки и защиты персональных данных. 1.2. Настоящий Регламент разработан на основании Конституции Российской Федерации, Трудового кодекса Российской Федерации, Гражданского кодекса Российской Федерации, Уголовного кодекса Российской Федерации, Кодекса об административных правонарушениях Российской Федерации, Федерального закона Российской Федерации «О персональных данных» № 152-ФЗ от 27 июля 2006 года.</description></item><item><title>Публикация next.js приложения на github pages</title><link>https://romankurnovskii.com/ru/posts/nextjs-to-github-pages-ations/</link><pubDate>Mon, 07 Mar 2022 15:31:25 +0200</pubDate><guid>https://romankurnovskii.com/ru/posts/nextjs-to-github-pages-ations/</guid><description>Подготовка коммит все предыдущего состояния на случай вынужденного отката
Для того чтобы Actions имели доступ к репозиторию нужно подключить ключи шифрования
Настройка репозитория Создаю ключи
1ssh-keygen -t rsa -b 4096 -C &amp;#34;$(git config user.email)&amp;#34; -f gh-pages -N &amp;#34;&amp;#34; Создалось 2 файла с ключами:
gh-pages - приватный gh-pages.pub - публичный в Репозитории (не профиле)
https://github.com/romankurnovskii/notion-project/settings/keys
Settings → Deploy keys →Add new
из файла gh-pages.pub вставляю текст публичного ключа
Settings → Secrets
Имя: ACTIONS_DEPLOY_KEY
Вставляю приватный ключ из приватного файла gh-pages</description></item><item><title>Печатные публикации</title><link>https://romankurnovskii.com/ru/p/publications/</link><pubDate>Wed, 31 Mar 2021 13:11:22 +0800</pubDate><guid>https://romankurnovskii.com/ru/p/publications/</guid><description>Печатные журналы / сборники Для цитирования:
Факторы и условия, определяющие становления финансовой экосистемы в современных условиях, // Экономика и предпринимательство // д.э.н., проф. Коновалова М.Е., Курновский Р.М., Ширяева Д.В. // Номер: 8 (145) 2022 г. Страницы: 928-931
Статья [pdf] / ResearchGate
«Ключевые подходы к разработке доступного, интуитивно понятного интерфейса статистического пакета», // Научный журнал // к.т.н., профессор Суханова Е. И., канд. физ.-мат., доцент Ширяева Л. К., Курновский Р. М. // 2014 г. //
«Мобильность платформы 1С на базе приложения 1С:Монитор ERP» // Известия Института Систем Управления Самарского государственного экономического университета.</description></item><item><title>IT курсы 2020</title><link>https://romankurnovskii.com/ru/posts/diploma/</link><pubDate>Fri, 01 Jan 2021 15:31:25 +0200</pubDate><guid>https://romankurnovskii.com/ru/posts/diploma/</guid><description>&lt;p>Промежуточные метрики еще в процессе расчетов&lt;/p>
&lt;p>За 2020 год:&lt;/p>
&lt;ul>
&lt;li>Затрачено времени на учебу/практику: ~5500 часов&lt;/li>
&lt;/ul></description></item><item><title>Чеклист репатриация в Израиль</title><link>https://romankurnovskii.com/ru/p/%D1%80%D0%B5%D0%BF%D0%B0%D1%82%D1%80%D0%B8%D0%B0%D1%86%D0%B8%D1%8F/</link><pubDate>Mon, 02 Dec 2019 11:55:25 +0200</pubDate><guid>https://romankurnovskii.com/ru/p/%D1%80%D0%B5%D0%BF%D0%B0%D1%82%D1%80%D0%B8%D0%B0%D1%86%D0%B8%D1%8F/</guid><description>Инфа СОХНУТ - Еврейское агентство для Израиля, — международная сионистская организация с центром в государстве Израиль, которая занимается репатриацией в Израиль и помощью репатриантам.
https://www.jewishagency.org/ru/
Министерства алии и интеграции тел. *2994 или 03-9733333
Ссылки Чаты, где спрашивать:
https://t.me/OlimHadashim https://t.me/olehadash_com_chat https://t.me/forum_israel Няни, частные учителя, частные школы и садики в Израиле. https://www.facebook.com/groups/Nyani.Uchitelya.Shkoli.Israel
ASD в Израиле. Все о детях в спектре и их родителях https://www.facebook.com/groups/asdisraelrus
Мамочки Израиля https://www.facebook.com/groups/1524467887858435
Репатрианты в Израиле: здесь помогают и делятся опытом https://www.facebook.com/groups/1511311149184796
ОТДАМ ДАРОМ В ИЗРАИЛЕ https://www.</description></item><item><title>Docs</title><link>https://romankurnovskii.com/ru/docs/archive/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/archive/</guid><description>This page contains an archive of all posts.</description></item><item><title>Posts Archive</title><link>https://romankurnovskii.com/ru/posts/archive/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/posts/archive/</guid><description>This page contains an archive of all posts.</description></item></channel></rss>