<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Programming on Roman Kurnovskii</title><link>https://romankurnovskii.com/ru/categories/programming/</link><description>Recent content in Programming on Roman Kurnovskii</description><generator>Hugo -- gohugo.io</generator><language>ru</language><copyright>&amp;copy; 2023 Personal page</copyright><lastBuildDate>Sat, 02 Sep 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://romankurnovskii.com/ru/categories/programming/index.xml" rel="self" type="application/rss+xml"/><item><title>Легкие</title><link>https://romankurnovskii.com/ru/tracks/algorithms-101/leetcode/easy/</link><pubDate>Sun, 16 Oct 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/tracks/algorithms-101/leetcode/easy/</guid><description/></item><item><title>Средние</title><link>https://romankurnovskii.com/ru/tracks/algorithms-101/leetcode/medium/</link><pubDate>Sun, 16 Oct 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/tracks/algorithms-101/leetcode/medium/</guid><description/></item><item><title>Тяжелые</title><link>https://romankurnovskii.com/ru/tracks/algorithms-101/leetcode/hard/</link><pubDate>Sun, 16 Oct 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/tracks/algorithms-101/leetcode/hard/</guid><description/></item><item><title>Дерево отрезков</title><link>https://romankurnovskii.com/ru/tracks/algorithms-101/data-structures/segment-tree/</link><pubDate>Fri, 10 Feb 2023 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/tracks/algorithms-101/data-structures/segment-tree/</guid><description>Для изучения темы &amp;ldquo;дерево отрезков&amp;rdquo; необходимо знать следующие понятия:
массивы циклы условные операторы битовые операции Дерево отрезков (Segment Tree) - это динамическая структура данных, используемая для выполнения операций над интервалами и их обновления. Оно поддерживает две операции: обновление элементов (update) в заданном диапазоне и запрос (query) на сумму элементов в заданном диапазоне.
Выполним следующую задачу: у нас есть массив, и мы хотим находить сумму элементов в определенном диапазоне.
Для этой задачи мы можем использовать дерево отрезков. Оно построено как бинарное дерево, где каждый узел представляет интервал, а значение узла - это сумма элементов в этом интервале.</description></item><item><title>Дерево Фенвика</title><link>https://romankurnovskii.com/ru/tracks/algorithms-101/data-structures/fenwick-tree/</link><pubDate>Fri, 10 Feb 2023 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/tracks/algorithms-101/data-structures/fenwick-tree/</guid><description>Дерево Фенвика, также известное как двоичное индексированное дерево (Binary Indexed Tree, BIT).
Терминология:
a - исходный массив tree - массив дерева, полученный в результате преобразований массива 'a' i - индекс массива k - индекс массива F(i) - еще не определенный индекс, полученный в реузльтате преобразования индекса `i`. F(i) &amp;lt;= i F(i) - функция, которую создадим позже. 0 1 2 3 4 5 6 7 a[ 5, 7, 9, 3, 8, 2, 4, 6] Сумма по текущему индексу содержит данные только с предыдущих индексов, не обязательно с нулевого.</description></item><item><title>Префиксные суммы</title><link>https://romankurnovskii.com/ru/tracks/algorithms-101/data-structures/prefix-sum/</link><pubDate>Fri, 10 Feb 2023 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/tracks/algorithms-101/data-structures/prefix-sum/</guid><description>Подсчет префиксных сумм Сумма в текущей ячейке равна сумме в предыдущей + значение текущей.
0 1 2 3 4 5 6 7 0 1 2 3 4 5 6 7 a[ 5, 7, 9, 3, 8, 2, 4, 6] =&amp;gt; b[5, 12, 21, 24, 32, 34, 38, 44] 0 5 [5,] 1 5 + 7 = 12 [5,12,] 2 9 + 12 = 21 [5,12,21,] 3 3 + 21 = 24 [5,12,21,24,] ... Чтобы посчитать сумму на любом отрезкe [L, R], достаточно вычесть сумму с предыдущего индекса от `L'</description></item><item><title>LeetCode</title><link>https://romankurnovskii.com/ru/tracks/algorithms-101/leetcode/</link><pubDate>Sat, 02 Sep 2023 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/tracks/algorithms-101/leetcode/</guid><description> Получай решения LeetCode на email: Подписаться</description></item><item><title>Data Structures</title><link>https://romankurnovskii.com/ru/tracks/algorithms-101/data-structures/</link><pubDate>Thu, 09 Feb 2023 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/tracks/algorithms-101/data-structures/</guid><description>Tree class Node: def __init__(self, value): self.value = value self.children = {} def insert(self, s, idx): # idx: index of the current character in s if idx != len(s): self.children.setdefault(s[idx], Node(s[idx])) self.children.get(s[idx]).insert(s, idx + 1) Fenwick Tree class Fenwick: #also known as Binary Indexed Tree (BIT) def __init__(self, n): self.n = n self.bit = [0] * (n+1) def add(self, idx, val): while idx &amp;lt;= self.n: self.bit[idx] += val idx += idx &amp;amp; -idx def add_range(self, l, r, val): self.</description></item><item><title>Увеличение картинки по нажатию в Hugo</title><link>https://romankurnovskii.com/ru/posts/hugo-add-image-zoomin/</link><pubDate>Sat, 09 Jul 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/posts/hugo-add-image-zoomin/</guid><description>Введение В Hugo по умолчанию используется парсинг markdown файлов. Т.е. мы получаем html код в том виде, как он написан в markdown.
Для того, чтобы нам понимать какие именно изображения мы можем увеличивать, добавим к этим изображениям отдельный тег/ключ/id
Инструменты Для реализации функционала нам необходимо:
написать/подключить скрипт/обработчик, который будет выполнять эффект zoomin к нужным нам изображениям Добавить необходимые метаданные к изображениям, чтобы скрипт их смог найти Скрипт zoomin Для добавления возможности увеличивать картинку при нажатии воспользуемся пакетом medium-zoom.</description></item><item><title>Карманная книга по Python</title><link>https://romankurnovskii.com/ru/tracks/python-101/</link><pubDate>Tue, 28 Jun 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/tracks/python-101/</guid><description>Скачать | PDF обновление 2023/02/27
Здравствуйте!
Я рад приветствовать вас на страницах этого хендбука по языку программирования Python.
Python - это мощный и гибкий язык программирования, который находит применение в самых различных областях, от разработки веб-приложений и научных исследований до создания игр и машинного обучения. Однако, как и любой другой язык программирования, Python может показаться довольно сложным для начинающих.
Этот хендбук призван помочь вам изучить основы языка Python, научиться использовать различные библиотеки и инструменты, а также дать ответы на самые часто задаваемые вопросы о языке.</description></item><item><title>PyScript - Python, встроенный в HTML</title><link>https://romankurnovskii.com/ru/posts/pyscript-python-embedded-in-html/</link><pubDate>Fri, 20 May 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/posts/pyscript-python-embedded-in-html/</guid><description>PyScript PyScript - средство запуска Python в браузере, встроенное в HTML, был анонсирован на мероприятии PyCon в Солт-Лейк-Сити, США. Кнопка Instl здесь для шутки, так как установка не требуется
PyScript зависит от существующего проекта Pyodide, который является скомпилированным в WebAssembly интерпретатором CPython 3.8, позволяющим запускать Python в браузере, а также скомпилированных научных пакетов Python.
Связывание с файлами библиотеки CSS и JavaScript PyScript позволяет разработчикам встраивать код Python с помощью тега &amp;lt;py-script&amp;gt;, а также компонент &amp;lt;py-repl&amp;gt; (Read, Evaluate, Print, Loop), который позволяет Python печатать и выполняться динамически.</description></item></channel></rss>