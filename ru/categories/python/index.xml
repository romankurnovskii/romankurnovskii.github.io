<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Python on Roman Kurnovskii</title><link>https://romankurnovskii.com/ru/categories/python/</link><description>Recent content in Python on Roman Kurnovskii</description><generator>Hugo -- gohugo.io</generator><language>ru</language><copyright>&amp;copy; 2023 Personal page</copyright><lastBuildDate>Tue, 28 Jun 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://romankurnovskii.com/ru/categories/python/index.xml" rel="self" type="application/rss+xml"/><item><title>Модуль потоков threading</title><link>https://romankurnovskii.com/ru/tracks/python-101/standard_library/threading/</link><pubDate>Tue, 28 Jun 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/tracks/python-101/standard_library/threading/</guid><description>Модуль threading в Python предоставляет возможность создавать и управлять потоками выполнения. Потоки - это легковесные процессы, которые выполняются параллельно в пределах одного процесса, что позволяет лучше использовать ресурсы компьютера.
Для создания нового потока необходимо создать объект Thread и передать в его конструктор функцию, которую вы хотите запустить в отдельном потоке. Затем вызовите метод start() у этого объекта, чтобы запустить поток. Если вы хотите дождаться завершения потока, вызовите метод join(), который блокирует текущий поток, пока поток, на который вы вызываете join(), не завершится.</description></item><item><title>Карманная книга по Python</title><link>https://romankurnovskii.com/ru/tracks/python-101/</link><pubDate>Tue, 28 Jun 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/tracks/python-101/</guid><description>Скачать | PDF обновление 2023/02/27
Здравствуйте!
Я рад приветствовать вас на страницах этого хендбука по языку программирования Python.
Python - это мощный и гибкий язык программирования, который находит применение в самых различных областях, от разработки веб-приложений и научных исследований до создания игр и машинного обучения. Однако, как и любой другой язык программирования, Python может показаться довольно сложным для начинающих.
Этот хендбук призван помочь вам изучить основы языка Python, научиться использовать различные библиотеки и инструменты, а также дать ответы на самые часто задаваемые вопросы о языке.</description></item><item><title>Сниппеты Python</title><link>https://romankurnovskii.com/ru/posts/python-snippets/</link><pubDate>Thu, 16 Jun 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/posts/python-snippets/</guid><description>Дата Текущая import datetime x = datetime.datetime.now() # 2023-08-23 21:41:24.871910 Формат YYYY-MM-DD import datetime x = datetime.datetime.now().strftime(&amp;#34;%Y-%m-%d&amp;#34;) # 2023-08-23 Разница в секундах import datetime date1 = datetime.datetime(2023, 3, 26, 0, 0, 0) # March 26, 2023 at midnight date2 = datetime.datetime(2023, 3, 27, 0, 0, 0) # March 27, 2023 at midnight difference_in_seconds = (date2 - date1).total_seconds() if difference_in_seconds &amp;gt; 0: print(&amp;#34;Date2 is later than Date1 by&amp;#34;, difference_in_seconds, &amp;#34;seconds.&amp;#34;) elif difference_in_seconds &amp;lt; 0: print(&amp;#34;Date1 is later than Date2 by&amp;#34;, abs(difference_in_seconds), &amp;#34;seconds.</description></item><item><title>Как переименовать файлы в Python</title><link>https://romankurnovskii.com/ru/posts/howto-rename-files-in-python/</link><pubDate>Sat, 04 Jun 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/posts/howto-rename-files-in-python/</guid><description>os.rename Если имеется весь путь до пути файла:
old_source = &amp;#39;/Users/r/Desktop/old_source.txt&amp;#39; new_source = &amp;#39;/Users/r/Desktop/new_source.txt&amp;#39; os.rename(&amp;#34;old_source&amp;#34;, &amp;#34;new_source&amp;#34;) Если имеется только имя файла, воспользуемся os.path.splitext(), который возвращает кортеж из имени файла и расширения:
import os for file in os.listdir(): name, ext = os.path.splitext(file) # return (&amp;#39;путь до файла без расщирения&amp;#39;, &amp;#39;.txt&amp;#39;) new_name = f&amp;#34;{name}_new{ext}&amp;#34; os.rename(file, new_name) pathlib С помощью встроенного модуля pathlib
Path.rename(new_name) from pathlib import Path for file in os.listdir(): f = Path(file) new_name = f&amp;#34;{f.stem}_new{f.suffix}&amp;#34; f.rename(new_name) shutil.move Модуль Shutil предлагает ряд высокоуровневых операций с файлами и коллекциями файлов.</description></item><item><title>PyScript - Python, встроенный в HTML</title><link>https://romankurnovskii.com/ru/posts/pyscript-python-embedded-in-html/</link><pubDate>Fri, 20 May 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/posts/pyscript-python-embedded-in-html/</guid><description>PyScript PyScript - средство запуска Python в браузере, встроенное в HTML, был анонсирован на мероприятии PyCon в Солт-Лейк-Сити, США. Кнопка Instl здесь для шутки, так как установка не требуется
PyScript зависит от существующего проекта Pyodide, который является скомпилированным в WebAssembly интерпретатором CPython 3.8, позволяющим запускать Python в браузере, а также скомпилированных научных пакетов Python.
Связывание с файлами библиотеки CSS и JavaScript PyScript позволяет разработчикам встраивать код Python с помощью тега &amp;lt;py-script&amp;gt;, а также компонент &amp;lt;py-repl&amp;gt; (Read, Evaluate, Print, Loop), который позволяет Python печатать и выполняться динамически.</description></item></channel></rss>