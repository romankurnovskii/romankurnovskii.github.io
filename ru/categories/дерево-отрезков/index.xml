<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>–î–µ—Ä–µ–≤–æ –û—Ç—Ä–µ–∑–∫–æ–≤ on Roman Kurnovskii</title><link>https://romankurnovskii.com/ru/categories/%D0%B4%D0%B5%D1%80%D0%B5%D0%B2%D0%BE-%D0%BE%D1%82%D1%80%D0%B5%D0%B7%D0%BA%D0%BE%D0%B2/</link><description>Recent content in –î–µ—Ä–µ–≤–æ –û—Ç—Ä–µ–∑–∫–æ–≤ on Roman Kurnovskii</description><generator>Hugo -- gohugo.io</generator><language>ru</language><copyright>&amp;copy; 2025</copyright><lastBuildDate>Fri, 10 Feb 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://romankurnovskii.com/ru/categories/%D0%B4%D0%B5%D1%80%D0%B5%D0%B2%D0%BE-%D0%BE%D1%82%D1%80%D0%B5%D0%B7%D0%BA%D0%BE%D0%B2/index.xml" rel="self" type="application/rss+xml"/><item><title>–î–µ—Ä–µ–≤–æ –æ—Ç—Ä–µ–∑–∫–æ–≤</title><link>https://romankurnovskii.com/ru/tracks/algorithms-101/data-structures/segment-tree/</link><pubDate>Fri, 10 Feb 2023 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/tracks/algorithms-101/data-structures/segment-tree/</guid><description>&lt;p>–î–ª—è –∏–∑—É—á–µ–Ω–∏—è —Ç–µ–º—ã &amp;ldquo;–¥–µ—Ä–µ–≤–æ –æ—Ç—Ä–µ–∑–∫–æ–≤&amp;rdquo; –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–Ω–∞—Ç—å —Å–ª–µ–¥—É—é—â–∏–µ –ø–æ–Ω—è—Ç–∏—è:&lt;/p>
&lt;ul>
&lt;li>–º–∞—Å—Å–∏–≤—ã&lt;/li>
&lt;li>—Ü–∏–∫–ª—ã&lt;/li>
&lt;li>—É—Å–ª–æ–≤–Ω—ã–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä—ã&lt;/li>
&lt;li>–±–∏—Ç–æ–≤—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏&lt;/li>
&lt;/ul>
&lt;p>–î–µ—Ä–µ–≤–æ –æ—Ç—Ä–µ–∑–∫–æ–≤ (Segment Tree) - —ç—Ç–æ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–∞–Ω–Ω—ã—Ö, –∏—Å–ø–æ–ª—å–∑—É–µ–º–∞—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –æ–ø–µ—Ä–∞—Ü–∏–π –Ω–∞–¥ –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞–º–∏ –∏ –∏—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è. –û–Ω–æ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –¥–≤–µ –æ–ø–µ—Ä–∞—Ü–∏–∏: &lt;strong>–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤&lt;/strong> (update) –≤ –∑–∞–¥–∞–Ω–Ω–æ–º –¥–∏–∞–ø–∞–∑–æ–Ω–µ –∏ &lt;strong>–∑–∞–ø—Ä–æ—Å&lt;/strong> (query) –Ω–∞ —Å—É–º–º—É —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ –∑–∞–¥–∞–Ω–Ω–æ–º –¥–∏–∞–ø–∞–∑–æ–Ω–µ.&lt;/p>
&lt;p>&lt;strong>–í—ã–ø–æ–ª–Ω–∏–º —Å–ª–µ–¥—É—é—â—É—é –∑–∞–¥–∞—á—É:&lt;/strong> —É –Ω–∞—Å –µ—Å—Ç—å –º–∞—Å—Å–∏–≤, –∏ –º—ã —Ö–æ—Ç–∏–º –Ω–∞—Ö–æ–¥–∏—Ç—å —Å—É–º–º—É —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–º –¥–∏–∞–ø–∞–∑–æ–Ω–µ.&lt;/p>
&lt;p>–î–ª—è —ç—Ç–æ–π –∑–∞–¥–∞—á–∏ –º—ã –º–æ–∂–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–µ—Ä–µ–≤–æ –æ—Ç—Ä–µ–∑–∫–æ–≤. –û–Ω–æ –ø–æ—Å—Ç—Ä–æ–µ–Ω–æ –∫–∞–∫ &lt;strong>–±–∏–Ω–∞—Ä–Ω–æ–µ –¥–µ—Ä–µ–≤–æ&lt;/strong>, –≥–¥–µ –∫–∞–∂–¥—ã–π —É–∑–µ–ª –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç –∏–Ω—Ç–µ—Ä–≤–∞–ª, –∞ –∑–Ω–∞—á–µ–Ω–∏–µ —É–∑–ª–∞ - —ç—Ç–æ —Å—É–º–º–∞ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ —ç—Ç–æ–º –∏–Ω—Ç–µ—Ä–≤–∞–ª–µ.&lt;/p>
&lt;p>&lt;strong>–û—Å–Ω–æ–≤—ã:&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞ —Å—É–º–º—ã –≤ –¥–µ—Ä–µ–≤–µ –æ—Ç—Ä–µ–∑–∫–æ–≤:&lt;/li>
&lt;/ol>
&lt;p>–≠–ª–µ–º–µ–Ω—Ç —Å—É–º–º—ã –≤ –¥–µ—Ä–µ–≤–µ –æ—Ç—Ä–µ–∑–∫–æ–≤ —è–≤–ª—è–µ—Ç—Å—è —Å—É–º–º–æ–π –≤—Å–µ—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ, –∫–æ—Ç–æ—Ä—ã–π –æ–Ω –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç.&lt;/p>
&lt;ol start="2">
&lt;li>–ö–æ–Ω—Å—Ç—Ä—É–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–µ—Ä–µ–≤–∞ –æ—Ç—Ä–µ–∑–∫–æ–≤:&lt;/li>
&lt;/ol>
&lt;p>–î–µ—Ä–µ–≤–æ –æ—Ç—Ä–µ–∑–∫–æ–≤ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø–æ—Å—Ç—Ä–æ–µ–Ω–æ –Ω–∞ –±–∞–∑–µ –º–∞—Å—Å–∏–≤–∞ —á–∏—Å–µ–ª. –ö–∞–∂–¥—ã–π —É–∑–µ–ª –¥–µ—Ä–µ–≤–∞ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç –¥–∏–∞–ø–∞–∑–æ–Ω —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ –º–∞—Å—Å–∏–≤–µ –∏ —Ö—Ä–∞–Ω–∏—Ç —Å—É–º–º—É —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ —ç—Ç–æ–º –¥–∏–∞–ø–∞–∑–æ–Ω–µ.&lt;/p>
&lt;ol start="3">
&lt;li>–†–µ–∞–ª–∏–∑–∞—Ü–∏—è –æ–ø–µ—Ä–∞—Ü–∏–π:&lt;/li>
&lt;/ol>
&lt;p>–†–µ–∞–ª–∏–∑–∞—Ü–∏—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π –≤ –¥–µ—Ä–µ–≤–µ –æ—Ç—Ä–µ–∑–∫–æ–≤ –ø–æ —Å—É—Ç–∏ –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –µ–≥–æ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã. –û–¥–Ω–∞–∫–æ, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ –æ–ø–µ—Ä–∞—Ü–∏–π, –∫–æ—Ç–æ—Ä—ã–µ —á–∞—Å—Ç–æ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –≤ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –∑–∞–¥–∞—á–∞—Ö:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ&lt;/strong> –∑–Ω–∞—á–µ–Ω–∏—è –≤ –º–∞—Å—Å–∏–≤–µ: –≠—Ç–∞ –æ–ø–µ—Ä–∞—Ü–∏—è –ø–æ–∑–≤–æ–ª—è–µ—Ç –∏–∑–º–µ–Ω—è—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞ –≤ –º–∞—Å—Å–∏–≤–µ. –û–±—ã—á–Ω–æ –æ–Ω–∞ —Ä–µ–∞–ª–∏–∑—É–µ—Ç—Å—è —Å –ø–æ–º–æ—â—å—é —Ä–µ–∫—É—Ä—Å–∏–≤–Ω–æ–≥–æ –ø—Ä–æ—Ö–æ–¥–∞ –ø–æ –¥–µ—Ä–µ–≤—É.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>–ó–∞–ø—Ä–æ—Å –Ω–∞ –∑–Ω–∞—á–µ–Ω–∏–µ&lt;/strong>: –≠—Ç–∞ –æ–ø–µ—Ä–∞—Ü–∏—è –ø–æ–∑–≤–æ–ª—è–µ—Ç –∑–∞–ø—Ä–∞—à–∏–≤–∞—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞ –≤ –º–∞—Å—Å–∏–≤–µ. –û–±—ã—á–Ω–æ –æ–Ω–∞ —Ç–∞–∫–∂–µ —Ä–µ–∞–ª–∏–∑—É–µ—Ç—Å—è —Å –ø–æ–º–æ—â—å—é —Ä–µ–∫—É—Ä—Å–∏–≤–Ω–æ–≥–æ –ø—Ä–æ—Ö–æ–¥–∞ –ø–æ –¥–µ—Ä–µ–≤—É.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>–ó–∞–ø—Ä–æ—Å –Ω–∞ —Å—É–º–º—É&lt;/strong>: –≠—Ç–∞ –æ–ø–µ—Ä–∞—Ü–∏—è –ø–æ–∑–≤–æ–ª—è–µ—Ç –∑–∞–ø—Ä–∞—à–∏–≤–∞—Ç—å —Å—É–º–º—É –∑–Ω–∞—á–µ–Ω–∏–π –≤ –º–∞—Å—Å–∏–≤–µ –Ω–∞ –∑–∞–¥–∞–Ω–Ω–æ–º –∏–Ω—Ç–µ—Ä–≤–∞–ª–µ. –û–Ω–∞ –æ–±—ã—á–Ω–æ —Ä–µ–∞–ª–∏–∑—É–µ—Ç—Å—è —Å –ø–æ–º–æ—â—å—é —Ä–µ–∫—É—Ä—Å–∏–≤–Ω–æ–≥–æ –ø—Ä–æ—Ö–æ–¥–∞ –ø–æ –¥–µ—Ä–µ–≤—É –∏ –ø–æ–¥—Å—á–µ—Ç–∞ —Å—É–º–º—ã&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="–ø–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ-–¥–µ—Ä–µ–≤–∞-–æ—Ç—Ä–µ–∑–∫–æ–≤">–ü–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ –¥–µ—Ä–µ–≤–∞ –æ—Ç—Ä–µ–∑–∫–æ–≤&lt;/h2>
&lt;p>–¢–∞–∫ –∫–∞–∫ –¥–µ—Ä–µ–≤–æ –±–∏–Ω–∞—Ä–Ω–æ–µ, —É –∫–∞–∂–¥–æ–π –≤–µ—Ä—à–∏–Ω—ã –±—É–¥–µ—Ç –¥–æ –¥–≤—É—Ö –ø–æ—Ç–æ–º–∫–æ–≤.&lt;/p>
&lt;p>–ì—Ä–∞—Ñ–∏—á–µ—Å–∫–∏ —ç—Ç–æ –≤—ã–≥–ª—è–¥–∏—Ç —Å–ª–µ–¥—É—é—â–∏–º –æ–±—Ä–∞–∑–æ–º (–¥–ª—è –º–∞—Å—Å–∏–≤–∞ –∏–∑ 8 —ç–ª–µ–º–µ–Ω—Ç–æ–≤):&lt;/p>
&lt;p>&lt;p class="md__image">
&lt;img
src="../assets/segment-tree-structure.ru.png"
id="zoom-default"
alt="segment-tree-structure.ru.png"
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;p>–í —Å–∞–º–æ–π –≤–µ—Ä—Ö–Ω–µ–π –≤–µ—Ä—à–∏–Ω–µ –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω –æ—Ç—Ä–µ–∑–æ–∫ –æ—Ç –Ω–∞—á–∞–ª–∞ –º–∞—Å—Å–∏–≤–∞ –¥–æ –ø–æ—Å–ª–µ–¥–Ω–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞.&lt;/p>
&lt;p>–°–ª–µ–≤–∞ - –ª–µ–≤–∞ –ø–æ–ª–æ–≤–∏–Ω–∞ –æ—Ç &lt;em>—Ä–æ–¥–∏—Ç–µ–ª—è&lt;/em> (&lt;code>[0 1 2 3]&lt;/code>). –°–ø—Ä–∞–≤–∞ - –ø—Ä–∞–≤–∞—è –ø–æ–ª–æ–≤–∏–Ω–∞ ()&lt;code>[4 5 6 7]&lt;/code>). –ò —Ç–∞–∫ –¥–∞–ª–µ–µ –¥–æ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —É–∑–ª–∞ —Å –æ—Ç—Ä–µ–∑–∫–æ–º –∏–∑ –æ–¥–Ω–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞.&lt;/p>
&lt;p>–í–æ–∑—å–º–µ–º –º–∞—Å—Å–∏–≤ &lt;code>a = [1, 3, -2, 8, -7]&lt;/code>. –ù–∞ –µ–≥–æ –±–∞–∑–µ –ø–æ—Å—Ç—Ä–æ–∏–º –¥–µ—Ä–µ–≤–æ –æ—Ç—Ä–µ–∑–∫–æ–≤–∏ –∑–∞–ø–∏—à–µ–º —Å—É–º–º—ã —ç—Ç–∏—Ö –æ—Ç—Ä–µ–∑–∫–æ–≤ –≤ –∫–∞–∂–¥—ã–π —É–∑–µ–ª.&lt;/p>
&lt;p>–°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç–∞–∫–æ–≥–æ –¥–µ—Ä–µ–≤–æ –≤—ã–≥–ª—è–¥–∏—Ç —Å–ª–µ–¥—É—é—â–∏–º –æ–±—Ä–∞–∑–æ–º:&lt;/p>
&lt;p>&lt;p class="md__image">
&lt;img
src="../assets/segment-tree-sum.ru.png"
id="zoom-default"
alt="segment-tree-sum.ru.png"
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;p>üí° –î–µ—Ä–µ–≤–æ —Å–æ–¥–µ—Ä–∂–∏—Ç –º–µ–Ω–µ–µ &lt;strong>2n&lt;/strong> –≤–µ—Ä—à–∏–Ω. &lt;code>2*n-1&lt;/code>&lt;/p>
&lt;p>–ß–∏—Å–ª–æ –≤–µ—Ä—à–∏–Ω –≤ —Ö—É–¥—à–µ–º —Å–ª—É—á–∞–µ –æ—Ü–µ–Ω–∏–≤–∞–µ—Ç—Å—è —Å—É–º–º–æ–π $n + \frac{n}{2} + \frac{n}{4} + \frac{n}{8} + \ldots + 1 &amp;lt; 2n$&lt;/p>
&lt;p>–û—Ç–æ–±—Ä–∞–∑–∏–º —Ç–∞–∫–æ–µ –¥–µ—Ä–µ–≤–æ –∫–∞–∫ –º–∞—Å—Å–∏–≤:&lt;/p>
&lt;ol>
&lt;li>–í —Ç–∞–∫–æ–º –¥–µ—Ä–µ–≤–µ 9 –≤–µ—Ä—à–∏–Ω. –ú–∞—Å—Å–∏–≤ –±—É–¥–µ—Ç —Å–æ—Å—Ç–æ—è—Ç—å –∏–∑ 9 —ç–ª–µ–º–µ–Ω—Ç–æ–≤.&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>tree[0] = A[0:4]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>tree[1] = A[0:2]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>tree[2] = A[3:4]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>tree[3] = A[0:1]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>tree[4] = A[2:2]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>tree[5] = A[3:3]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>tree[6] = A[4:4]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>tree[7] = A[0:0]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>tree[8] = A[1:1]
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>–í –¥–∞–Ω–Ω–æ–º –¥–µ—Ä–µ–≤–µ &lt;em>–ø–æ–∫—Ä—ã—Ç—ã&lt;/em> –≤—Å–µ –≤–µ—Ä—à–∏–Ω—ã.&lt;/p>
&lt;p>–ò–º–µ—è —Ç–∞–∫—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É, –≤ –∑–Ω–∞—á–µ–Ω–∏—è—Ö –≤–µ—Ä—à–∏–Ω –º–æ–∂–Ω–æ —Ö—Ä–∞–Ω–∏—Ç—å —Ä–∞–∑–ª–∏—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ, –Ω–∞–ø—Ä–∏–º–µ—Ä, —Å—É–º–º—É –æ—Ç—Ä–µ–∑–∫–∞, –Ω–∞–∏–º–µ–Ω—å—à–µ–µ/–Ω–∞–∏–±–æ–ª—å—à–µ–µ —á–∏—Å–ª–æ –∏–ª–∏ –¥—Ä—É–≥–∏–µ –∞–≥—Ä–µ–≥–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –Ω–∞ –æ—Ç—Ä–µ–∑–∫–∞—Ö.&lt;/p>
&lt;h2 id="—Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è-–¥–µ—Ä–µ–≤–∞-–æ—Ç—Ä–µ–∑–∫–æ–≤-–Ω–∞-python">–†–µ–∞–ª–∏–∑–∞—Ü–∏—è –¥–µ—Ä–µ–≤–∞ –æ—Ç—Ä–µ–∑–∫–æ–≤ –Ω–∞ Python&lt;/h2>
&lt;p>–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–µ—Ä–µ–≤–∞&lt;/p>
&lt;p>&lt;code>a = [1, 3, -2, 8, -7]&lt;/code>&lt;/p>
&lt;p>–¢–∞–∫ –∫–∞–∫ —Å–∞–º—ã–º–∏ –ø–æ—Å–ª–µ–¥–Ω–∏–º–∏ –≤–µ—Ä—à–∏–Ω–∞–º–∏ —è–≤–ª—è—é—Ç—Å—è –æ—Ç—Ä–µ–∑–∫–∏ –¥–ª–∏–Ω–æ–π == &lt;code>1&lt;/code>. –¢–æ –ø—Ä–æ—Ü–µ—Å—Å —Å–æ–∑–¥–∞–Ω–∏—è –Ω–∞—á–∏–Ω–∞–µ–º —Å –Ω–∏—Ö, –ø–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ –ø–æ–¥–Ω–∏–º–∞—è—Å—å –Ω–∞ —É—Ä–æ–≤–µ–Ω—å –≤—ã—à–µ.&lt;/p>
&lt;p>üí° –î–µ—Ä–µ–≤–æ —Å–æ–¥–µ—Ä–∂–∏—Ç –º–µ–Ω–µ–µ &lt;strong>2n&lt;/strong> –≤–µ—Ä—à–∏–Ω.
üí° –ù–∏–∂–Ω—è—è –≤–µ—Ä—à–∏–Ω–∞ - –¥–ª–∏–Ω–∞ –æ—Ç—Ä–µ–∑–∫–∞ —Ä–∞–≤–Ω–∞ 1.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">def&lt;/span> &lt;span style="color:#06287e">build_tree&lt;/span>(array):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> n &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#007020">len&lt;/span>(array)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> tree &lt;span style="color:#666">=&lt;/span> [&lt;span style="color:#40a070">0&lt;/span>] &lt;span style="color:#666">*&lt;/span> &lt;span style="color:#40a070">2&lt;/span> &lt;span style="color:#666">*&lt;/span> n &lt;span style="color:#60a0b0;font-style:italic"># –î–µ—Ä–µ–≤–æ —Å–æ–¥–µ—Ä–∂–∏—Ç –º–µ–Ω–µ–µ **2n** –≤–µ—Ä—à–∏–Ω.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">for&lt;/span> i &lt;span style="color:#007020;font-weight:bold">in&lt;/span> &lt;span style="color:#007020">range&lt;/span>(n):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> tree[n &lt;span style="color:#666">+&lt;/span> i] &lt;span style="color:#666">=&lt;/span> a[i] &lt;span style="color:#60a0b0;font-style:italic"># —Å–∞–º—ã–µ –Ω–∏–∂–Ω–∏–µ –≤–µ—Ä—à–∏–Ω—ã –¥–µ—Ä–µ–≤–∞&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#60a0b0;font-style:italic"># –¥–æ–±–∞–≤–ª—è–µ–º —Ä–æ–¥–∏—Ç–µ–ª–µ–π&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">for&lt;/span> i &lt;span style="color:#007020;font-weight:bold">in&lt;/span> &lt;span style="color:#007020">reversed&lt;/span>(&lt;span style="color:#007020">range&lt;/span>(n)):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> tree[i] &lt;span style="color:#666">=&lt;/span> tree[&lt;span style="color:#40a070">2&lt;/span> &lt;span style="color:#666">*&lt;/span> i] &lt;span style="color:#666">+&lt;/span> tree[&lt;span style="color:#40a070">2&lt;/span> &lt;span style="color:#666">*&lt;/span> i &lt;span style="color:#666">+&lt;/span> &lt;span style="color:#40a070">1&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020">print&lt;/span>(i, tree)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#666">&amp;gt;&amp;gt;&lt;/span> array &lt;span style="color:#666">=&lt;/span> [&lt;span style="color:#40a070">1&lt;/span>, &lt;span style="color:#40a070">3&lt;/span>, &lt;span style="color:#666">-&lt;/span>&lt;span style="color:#40a070">2&lt;/span>, &lt;span style="color:#40a070">8&lt;/span>, &lt;span style="color:#666">-&lt;/span>&lt;span style="color:#40a070">7&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#666">&amp;gt;&amp;gt;&lt;/span> build_tree(array)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#40a070">4&lt;/span> [&lt;span style="color:#40a070">0&lt;/span>, &lt;span style="color:#40a070">0&lt;/span>, &lt;span style="color:#40a070">0&lt;/span>, &lt;span style="color:#40a070">0&lt;/span>, &lt;span style="color:#40a070">1&lt;/span>, &lt;span style="color:#40a070">1&lt;/span>, &lt;span style="color:#40a070">3&lt;/span>, &lt;span style="color:#666">-&lt;/span>&lt;span style="color:#40a070">2&lt;/span>, &lt;span style="color:#40a070">8&lt;/span>, &lt;span style="color:#666">-&lt;/span>&lt;span style="color:#40a070">7&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#40a070">3&lt;/span> [&lt;span style="color:#40a070">0&lt;/span>, &lt;span style="color:#40a070">0&lt;/span>, &lt;span style="color:#40a070">0&lt;/span>, &lt;span style="color:#40a070">1&lt;/span>, &lt;span style="color:#40a070">1&lt;/span>, &lt;span style="color:#40a070">1&lt;/span>, &lt;span style="color:#40a070">3&lt;/span>, &lt;span style="color:#666">-&lt;/span>&lt;span style="color:#40a070">2&lt;/span>, &lt;span style="color:#40a070">8&lt;/span>, &lt;span style="color:#666">-&lt;/span>&lt;span style="color:#40a070">7&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#40a070">2&lt;/span> [&lt;span style="color:#40a070">0&lt;/span>, &lt;span style="color:#40a070">0&lt;/span>, &lt;span style="color:#40a070">2&lt;/span>, &lt;span style="color:#40a070">1&lt;/span>, &lt;span style="color:#40a070">1&lt;/span>, &lt;span style="color:#40a070">1&lt;/span>, &lt;span style="color:#40a070">3&lt;/span>, &lt;span style="color:#666">-&lt;/span>&lt;span style="color:#40a070">2&lt;/span>, &lt;span style="color:#40a070">8&lt;/span>, &lt;span style="color:#666">-&lt;/span>&lt;span style="color:#40a070">7&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#40a070">1&lt;/span> [&lt;span style="color:#40a070">0&lt;/span>, &lt;span style="color:#40a070">3&lt;/span>, &lt;span style="color:#40a070">2&lt;/span>, &lt;span style="color:#40a070">1&lt;/span>, &lt;span style="color:#40a070">1&lt;/span>, &lt;span style="color:#40a070">1&lt;/span>, &lt;span style="color:#40a070">3&lt;/span>, &lt;span style="color:#666">-&lt;/span>&lt;span style="color:#40a070">2&lt;/span>, &lt;span style="color:#40a070">8&lt;/span>, &lt;span style="color:#666">-&lt;/span>&lt;span style="color:#40a070">7&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#40a070">0&lt;/span> [&lt;span style="color:#40a070">3&lt;/span>, &lt;span style="color:#40a070">3&lt;/span>, &lt;span style="color:#40a070">2&lt;/span>, &lt;span style="color:#40a070">1&lt;/span>, &lt;span style="color:#40a070">1&lt;/span>, &lt;span style="color:#40a070">1&lt;/span>, &lt;span style="color:#40a070">3&lt;/span>, &lt;span style="color:#666">-&lt;/span>&lt;span style="color:#40a070">2&lt;/span>, &lt;span style="color:#40a070">8&lt;/span>, &lt;span style="color:#666">-&lt;/span>&lt;span style="color:#40a070">7&lt;/span>]
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>–ü–æ–¥—Å—á–µ—Ç —Å—É–º–º—ã –Ω–∞ –æ—Ç—Ä–µ–∑–∫–µ:&lt;/strong>&lt;/p>
&lt;p>–§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–∞–µ—Ç –∏–Ω–¥–µ–∫—Å—ã –∏—Å—Ö–æ–¥–Ω–æ–≥–æ –º–∞—Å—Å–∏–≤–∞.&lt;/p>
&lt;p>–ü—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –¥–µ—Ä–µ–≤–∞ –∏–∑ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ –º–∞—Å—Å–∏–≤–∞ –º—ã –ø–æ–º–µ—â–∞–ª–∏ –∫–∞–∂–¥—ã–π –æ—Ç–¥–µ–ª—å–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç –Ω–∞ –Ω–æ–≤—ã–π –∏–Ω–¥–µ–∫—Å &lt;code>[n + i]&lt;/code>.&lt;/p>
&lt;p>üí° –ü–æ—ç—Ç–æ–º—É –∫–æ–≥–¥–∞ —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –∏–Ω–¥–µ–∫—Å, —Å–Ω–∞—á–∞–ª–∞ –º—ã –Ω–∞–π–¥–µ—Ç &lt;em>—Å–∞–º—ã–π –Ω–∏–∂–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç&lt;/em> –≤ –¥–µ—Ä–µ–≤–µ. –û–Ω —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω –≤ –Ω–æ–≤–æ–º –º–∞—Å—Å–∏–≤–µ –ø–æ –∏–Ω–¥–µ–∫—Å—É &lt;code>[–¥–ª–∏–Ω–∞_–∏—Å—Ö–æ–¥–Ω–æ–≥–æ_–º–∞—Å—Å–∏–≤–∞ + index]&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># –ø–æ–¥—Å—á–µ—Ç —Å—É–º–º—ã –Ω–∞ –æ—Ç—Ä–µ–∑–∫–µ&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">def&lt;/span> &lt;span style="color:#06287e">query_tree&lt;/span>(l, r):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">global&lt;/span> tree, n
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020">sum&lt;/span> &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#40a070">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> l &lt;span style="color:#666">+=&lt;/span> n &lt;span style="color:#60a0b0;font-style:italic"># –∏–Ω–¥–µ–∫—Å —Ç–µ–∫—É—â–µ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> r &lt;span style="color:#666">+=&lt;/span> n
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">while&lt;/span> l &lt;span style="color:#666">&amp;lt;=&lt;/span> r:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">if&lt;/span> l &lt;span style="color:#666">%&lt;/span> &lt;span style="color:#40a070">2&lt;/span> &lt;span style="color:#666">==&lt;/span> &lt;span style="color:#40a070">1&lt;/span>: &lt;span style="color:#60a0b0;font-style:italic"># –µ—Å–ª–∏ –∏–Ω–¥–µ–∫—Å –Ω–µ—á–µ—Ç–Ω—ã–π&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020">sum&lt;/span> &lt;span style="color:#666">+=&lt;/span> tree[l]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> l &lt;span style="color:#666">+=&lt;/span> &lt;span style="color:#40a070">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">if&lt;/span> r &lt;span style="color:#666">%&lt;/span> &lt;span style="color:#40a070">2&lt;/span> &lt;span style="color:#666">==&lt;/span> &lt;span style="color:#40a070">0&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020">sum&lt;/span> &lt;span style="color:#666">+=&lt;/span> tree[r]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> r &lt;span style="color:#666">-=&lt;/span> &lt;span style="color:#40a070">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> l &lt;span style="color:#666">//=&lt;/span> &lt;span style="color:#40a070">2&lt;/span> &lt;span style="color:#60a0b0;font-style:italic"># floor division. 8 // 3 = 2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> r &lt;span style="color:#666">//=&lt;/span> &lt;span style="color:#40a070">2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> &lt;span style="color:#007020">sum&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#666">&amp;gt;&amp;gt;&lt;/span> a &lt;span style="color:#666">=&lt;/span> [&lt;span style="color:#40a070">1&lt;/span>, &lt;span style="color:#40a070">3&lt;/span>, &lt;span style="color:#666">-&lt;/span>&lt;span style="color:#40a070">2&lt;/span>, &lt;span style="color:#40a070">8&lt;/span>, &lt;span style="color:#666">-&lt;/span>&lt;span style="color:#40a070">7&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#666">&amp;gt;&amp;gt;&lt;/span> n &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#007020">len&lt;/span>(a)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#666">&amp;gt;&amp;gt;&lt;/span> tree &lt;span style="color:#666">=&lt;/span> build_tree(a)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#666">&amp;gt;&amp;gt;&lt;/span> query_tree(&lt;span style="color:#40a070">0&lt;/span>, &lt;span style="color:#40a070">4&lt;/span>) &lt;span style="color:#60a0b0;font-style:italic"># sum([1, 3, -2, 8, -7])&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#40a070">3&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#666">&amp;gt;&amp;gt;&lt;/span> query_tree(&lt;span style="color:#40a070">1&lt;/span>, &lt;span style="color:#40a070">3&lt;/span>) &lt;span style="color:#60a0b0;font-style:italic"># sum([3, -2, 8])&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#40a070">9&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#666">&amp;gt;&amp;gt;&lt;/span> query_tree(&lt;span style="color:#40a070">4&lt;/span>, &lt;span style="color:#40a070">4&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#666">-&lt;/span>&lt;span style="color:#40a070">7&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>–ü–æ–ª—É—á–∞–µ–º –∫–ª–∞—Å—Å &lt;code>SegmentTree&lt;/code>:&lt;/p>
&lt;p>&lt;em>–§—É–Ω–∫—Ü–∏—é —Å—É–º–º–∏—Ä–æ–≤–∞–Ω–∏—è –∏–ª–∏ –ª—é–±—É—é –¥—Ä—É–≥—É—é –º–æ–∂–Ω–æ –≤–∫–ª—é—á–∏—Ç—å –≤ –º–æ–º–µ–Ω—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –¥–µ—Ä–µ–≤–∞&lt;/em>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">class&lt;/span> &lt;span style="color:#0e84b5;font-weight:bold">SegmentTree&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">def&lt;/span> __init__(self, a):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#666">.&lt;/span>n &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#007020">len&lt;/span>(a)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#666">.&lt;/span>tree &lt;span style="color:#666">=&lt;/span> [&lt;span style="color:#40a070">0&lt;/span>] &lt;span style="color:#666">*&lt;/span> &lt;span style="color:#40a070">2&lt;/span> &lt;span style="color:#666">*&lt;/span> self&lt;span style="color:#666">.&lt;/span>n
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">for&lt;/span> i &lt;span style="color:#007020;font-weight:bold">in&lt;/span> &lt;span style="color:#007020">range&lt;/span>(self&lt;span style="color:#666">.&lt;/span>n):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#666">.&lt;/span>tree[self&lt;span style="color:#666">.&lt;/span>n &lt;span style="color:#666">+&lt;/span> i] &lt;span style="color:#666">=&lt;/span> a[i]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">for&lt;/span> i &lt;span style="color:#007020;font-weight:bold">in&lt;/span> &lt;span style="color:#007020">range&lt;/span>(self&lt;span style="color:#666">.&lt;/span>n &lt;span style="color:#666">-&lt;/span> &lt;span style="color:#40a070">1&lt;/span>, &lt;span style="color:#40a070">0&lt;/span>, &lt;span style="color:#666">-&lt;/span>&lt;span style="color:#40a070">1&lt;/span>):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#666">.&lt;/span>tree[i] &lt;span style="color:#666">=&lt;/span> self&lt;span style="color:#666">.&lt;/span>tree[&lt;span style="color:#40a070">2&lt;/span>&lt;span style="color:#666">*&lt;/span>i] &lt;span style="color:#666">+&lt;/span> self&lt;span style="color:#666">.&lt;/span>tree[&lt;span style="color:#40a070">2&lt;/span>&lt;span style="color:#666">*&lt;/span>i&lt;span style="color:#666">+&lt;/span>&lt;span style="color:#40a070">1&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">def&lt;/span> &lt;span style="color:#06287e">calculate_sum&lt;/span>(self, l, r):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020">sum&lt;/span> &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#40a070">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> l &lt;span style="color:#666">+=&lt;/span> self&lt;span style="color:#666">.&lt;/span>n
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> r &lt;span style="color:#666">+=&lt;/span> self&lt;span style="color:#666">.&lt;/span>n
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">while&lt;/span> l &lt;span style="color:#666">&amp;lt;=&lt;/span> r:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">if&lt;/span> l &lt;span style="color:#666">%&lt;/span> &lt;span style="color:#40a070">2&lt;/span> &lt;span style="color:#666">==&lt;/span> &lt;span style="color:#40a070">1&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020">sum&lt;/span> &lt;span style="color:#666">+=&lt;/span> self&lt;span style="color:#666">.&lt;/span>tree[l]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> l &lt;span style="color:#666">+=&lt;/span> &lt;span style="color:#40a070">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">if&lt;/span> r &lt;span style="color:#666">%&lt;/span> &lt;span style="color:#40a070">2&lt;/span> &lt;span style="color:#666">==&lt;/span> &lt;span style="color:#40a070">0&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020">sum&lt;/span> &lt;span style="color:#666">+=&lt;/span> self&lt;span style="color:#666">.&lt;/span>tree[r]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> r &lt;span style="color:#666">-=&lt;/span> &lt;span style="color:#40a070">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> l &lt;span style="color:#666">//=&lt;/span> &lt;span style="color:#40a070">2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> r &lt;span style="color:#666">//=&lt;/span> &lt;span style="color:#40a070">2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> &lt;span style="color:#007020">sum&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">def&lt;/span> &lt;span style="color:#06287e">find_value&lt;/span>(self, l, r):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> l &lt;span style="color:#666">+=&lt;/span> self&lt;span style="color:#666">.&lt;/span>n
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> r &lt;span style="color:#666">+=&lt;/span> self&lt;span style="color:#666">.&lt;/span>n
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">while&lt;/span> l &lt;span style="color:#666">&amp;lt;&lt;/span> r:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">if&lt;/span> r &lt;span style="color:#666">%&lt;/span> &lt;span style="color:#40a070">2&lt;/span> &lt;span style="color:#666">==&lt;/span> &lt;span style="color:#40a070">0&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> r &lt;span style="color:#666">-=&lt;/span> &lt;span style="color:#40a070">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">else&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> r &lt;span style="color:#666">-=&lt;/span> &lt;span style="color:#40a070">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> l &lt;span style="color:#666">+=&lt;/span> &lt;span style="color:#40a070">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> l &lt;span style="color:#666">-&lt;/span> self&lt;span style="color:#666">.&lt;/span>n
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="—à–∞–±–ª–æ–Ω-–∫–ª–∞—Å—Å–∞-segment-tree">–®–∞–±–ª–æ–Ω –∫–ª–∞—Å—Å–∞ Segment Tree&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">class&lt;/span> &lt;span style="color:#0e84b5;font-weight:bold">SegmentTree&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">def&lt;/span> __init__(self, data, default&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#40a070">0&lt;/span>, func&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#007020">max&lt;/span>):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#666">.&lt;/span>_default &lt;span style="color:#666">=&lt;/span> default
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#666">.&lt;/span>_func &lt;span style="color:#666">=&lt;/span> func
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#666">.&lt;/span>_len &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#007020">len&lt;/span>(data)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#666">.&lt;/span>_size &lt;span style="color:#666">=&lt;/span> _size &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#40a070">1&lt;/span> &lt;span style="color:#666">&amp;lt;&amp;lt;&lt;/span> (self&lt;span style="color:#666">.&lt;/span>_len &lt;span style="color:#666">-&lt;/span> &lt;span style="color:#40a070">1&lt;/span>)&lt;span style="color:#666">.&lt;/span>bit_length()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#666">.&lt;/span>data &lt;span style="color:#666">=&lt;/span> [default] &lt;span style="color:#666">*&lt;/span> (&lt;span style="color:#40a070">2&lt;/span> &lt;span style="color:#666">*&lt;/span> _size)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#666">.&lt;/span>data[_size:_size &lt;span style="color:#666">+&lt;/span> self&lt;span style="color:#666">.&lt;/span>_len] &lt;span style="color:#666">=&lt;/span> data
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">for&lt;/span> i &lt;span style="color:#007020;font-weight:bold">in&lt;/span> &lt;span style="color:#007020">reversed&lt;/span>(&lt;span style="color:#007020">range&lt;/span>(_size)):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#666">.&lt;/span>data[i] &lt;span style="color:#666">=&lt;/span> func(self&lt;span style="color:#666">.&lt;/span>data[i &lt;span style="color:#666">+&lt;/span> i], self&lt;span style="color:#666">.&lt;/span>data[i &lt;span style="color:#666">+&lt;/span> i &lt;span style="color:#666">+&lt;/span> &lt;span style="color:#40a070">1&lt;/span>])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">def&lt;/span> __delitem__(self, idx):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self[idx] &lt;span style="color:#666">=&lt;/span> self&lt;span style="color:#666">.&lt;/span>_default
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">def&lt;/span> __getitem__(self, idx):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> self&lt;span style="color:#666">.&lt;/span>data[idx &lt;span style="color:#666">+&lt;/span> self&lt;span style="color:#666">.&lt;/span>_size]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">def&lt;/span> __setitem__(self, idx, value):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> idx &lt;span style="color:#666">+=&lt;/span> self&lt;span style="color:#666">.&lt;/span>_size
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#666">.&lt;/span>data[idx] &lt;span style="color:#666">=&lt;/span> value
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> idx &lt;span style="color:#666">&amp;gt;&amp;gt;=&lt;/span> &lt;span style="color:#40a070">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">while&lt;/span> idx:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#666">.&lt;/span>data[idx] &lt;span style="color:#666">=&lt;/span> self&lt;span style="color:#666">.&lt;/span>_func(self&lt;span style="color:#666">.&lt;/span>data[&lt;span style="color:#40a070">2&lt;/span> &lt;span style="color:#666">*&lt;/span> idx], self&lt;span style="color:#666">.&lt;/span>data[&lt;span style="color:#40a070">2&lt;/span> &lt;span style="color:#666">*&lt;/span> idx &lt;span style="color:#666">+&lt;/span> &lt;span style="color:#40a070">1&lt;/span>])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> idx &lt;span style="color:#666">&amp;gt;&amp;gt;=&lt;/span> &lt;span style="color:#40a070">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">def&lt;/span> __len__(self):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> self&lt;span style="color:#666">.&lt;/span>_len
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">def&lt;/span> &lt;span style="color:#06287e">query&lt;/span>(self, start, stop):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4070a0">&amp;#34;&amp;#34;&amp;#34;func of data[start, stop)&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> start &lt;span style="color:#666">+=&lt;/span> self&lt;span style="color:#666">.&lt;/span>_size
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> stop &lt;span style="color:#666">+=&lt;/span> self&lt;span style="color:#666">.&lt;/span>_size
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">if&lt;/span> start&lt;span style="color:#666">==&lt;/span>stop:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> self&lt;span style="color:#666">.&lt;/span>_default
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> res_left &lt;span style="color:#666">=&lt;/span> res_right &lt;span style="color:#666">=&lt;/span> self&lt;span style="color:#666">.&lt;/span>_default
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">while&lt;/span> start &lt;span style="color:#666">&amp;lt;&lt;/span> stop:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">if&lt;/span> start &lt;span style="color:#666">&amp;amp;&lt;/span> &lt;span style="color:#40a070">1&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> res_left &lt;span style="color:#666">=&lt;/span> self&lt;span style="color:#666">.&lt;/span>_func(res_left, self&lt;span style="color:#666">.&lt;/span>data[start])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> start &lt;span style="color:#666">+=&lt;/span> &lt;span style="color:#40a070">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">if&lt;/span> stop &lt;span style="color:#666">&amp;amp;&lt;/span> &lt;span style="color:#40a070">1&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> stop &lt;span style="color:#666">-=&lt;/span> &lt;span style="color:#40a070">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> res_right &lt;span style="color:#666">=&lt;/span> self&lt;span style="color:#666">.&lt;/span>_func(self&lt;span style="color:#666">.&lt;/span>data[stop], res_right)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> start &lt;span style="color:#666">&amp;gt;&amp;gt;=&lt;/span> &lt;span style="color:#40a070">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> stop &lt;span style="color:#666">&amp;gt;&amp;gt;=&lt;/span> &lt;span style="color:#40a070">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> self&lt;span style="color:#666">.&lt;/span>_func(res_left, res_right)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">def&lt;/span> __repr__(self):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> &lt;span style="color:#4070a0">&amp;#34;SegmentTree(&lt;/span>&lt;span style="color:#70a0d0">{0}&lt;/span>&lt;span style="color:#4070a0">)&amp;#34;&lt;/span>&lt;span style="color:#666">.&lt;/span>format(self&lt;span style="color:#666">.&lt;/span>data)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>–ú–µ—Ç–æ–¥ &lt;code>build_tree&lt;/code> —Å—Ç—Ä–æ–∏—Ç –¥–µ—Ä–µ–≤–æ –æ—Ç—Ä–µ–∑–∫–æ–≤, –∞ &lt;code>query&lt;/code> –ø–æ–∑–≤–æ–ª—è–µ—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å –æ–ø–µ—Ä–∞—Ü–∏–∏ –∑–∞–ø—Ä–æ—Å–∞.&lt;/p>
&lt;h2 id="—Ä–µ—Å—É—Ä—Å—ã">–†–µ—Å—É—Ä—Å—ã&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://ru.algorithmica.org/cs/segment-tree/">https://ru.algorithmica.org/cs/segment-tree/&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>–î–µ—Ä–µ–≤–æ –§–µ–Ω–≤–∏–∫–∞</title><link>https://romankurnovskii.com/ru/tracks/algorithms-101/data-structures/fenwick-tree/</link><pubDate>Fri, 10 Feb 2023 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/tracks/algorithms-101/data-structures/fenwick-tree/</guid><description>&lt;p>–î–µ—Ä–µ–≤–æ –§–µ–Ω–≤–∏–∫–∞, —Ç–∞–∫–∂–µ –∏–∑–≤–µ—Å—Ç–Ω–æ–µ –∫–∞–∫ –¥–≤–æ–∏—á–Ω–æ–µ –∏–Ω–¥–µ–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –¥–µ—Ä–µ–≤–æ (Binary Indexed Tree, BIT).&lt;/p>
&lt;p>–¢–µ—Ä–º–∏–Ω–æ–ª–æ–≥–∏—è:&lt;/p>
&lt;pre>&lt;code>a - –∏—Å—Ö–æ–¥–Ω—ã–π –º–∞—Å—Å–∏–≤
tree - –º–∞—Å—Å–∏–≤ –¥–µ—Ä–µ–≤–∞, –ø–æ–ª—É—á–µ–Ω–Ω—ã–π –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–π –º–∞—Å—Å–∏–≤–∞ 'a'
i - –∏–Ω–¥–µ–∫—Å –º–∞—Å—Å–∏–≤–∞
k - –∏–Ω–¥–µ–∫—Å –º–∞—Å—Å–∏–≤–∞
F(i) - –µ—â–µ –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–π –∏–Ω–¥–µ–∫—Å, –ø–æ–ª—É—á–µ–Ω–Ω—ã–π –≤ —Ä–µ—É–∑–ª—å—Ç–∞—Ç–µ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è –∏–Ω–¥–µ–∫—Å–∞ `i`. F(i) &amp;lt;= i
F(i) - —Ñ—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä—É—é —Å–æ–∑–¥–∞–¥–∏–º –ø–æ–∑–∂–µ.
&lt;/code>&lt;/pre>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span> 0 1 2 3 4 5 6 7
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>a[ 5, 7, 9, 3, 8, 2, 4, 6]
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol>
&lt;li>
&lt;p>–°—É–º–º–∞ –ø–æ —Ç–µ–∫—É—â–µ–º—É –∏–Ω–¥–µ–∫—Å—É —Å–æ–¥–µ—Ä–∂–∏—Ç –¥–∞–Ω–Ω—ã–µ &lt;strong>—Ç–æ–ª—å–∫–æ —Å –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö&lt;/strong> –∏–Ω–¥–µ–∫—Å–æ–≤, &lt;strong>–Ω–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —Å –Ω—É–ª–µ–≤–æ–≥–æ&lt;/strong>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>–í –∫–∞–∂–¥–æ–π —è—á–µ–π–∫–µ —Ä–µ—É–∑–ª—å—Ç–∏—Ä—É–µ—â–µ–≥–æ –º–∞—Å—Å–∏–≤–∞ —Ö—Ä–∞–Ω–∏—Ç—Å—è —Å—É–º–º–∞ —è—á–µ–µ–∫ –æ—Ç—Ä–µ–∑–∫–∞ &lt;code>k&lt;/code>. &lt;code>k&lt;/code>- –Ω–µ –∫–æ–Ω—Å—Ç–∞–Ω—Ç–Ω–æ–µ —á–∏—Å–ª–æ –∏ –º–æ–∂–µ—Ç –º–µ–Ω—è—Ç—å—Å—è.&lt;/p>
&lt;p>–¢.–µ. –≤ –æ–¥–Ω–æ–π —è—á–µ–π–∫–µ –º–æ–∂–µ—Ç —Ö—Ä–∞–Ω–∏—Ç—å—Å—è —Å—É–º–º–∞ –∑–∞ –ø—Ä–µ–¥—É–¥—É—â–∏–π –æ—Ç—Ä–µ–∑–æ–∫ –¥–ª–∏–Ω–Ω–æ—é 2 —Å–∏–º–≤–æ–ª–∞, –∞ –≤ –¥—Ä—É–≥–æ–π —è—á–µ–π–∫–µ –∑–∞ –æ—Ç—Ä–µ–∑–æ–∫ –¥–ª–∏–Ω–æ—é 5 —Å–∏–º–≤–æ–ª–æ–≤.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>&lt;p class="md__image">
&lt;img
src="../assets/fenwick-tree.ru.jpg"
id="zoom-default"
alt="fenwick-tree.ru.jpg"
loading="lazy"
/>
&lt;/p>
&lt;p class="md__image">
&lt;img
src="../assets/fenwick-tree-prefix-sum-compare.ru.png"
id="zoom-default"
alt="fenwick-tree-prefix-sum-compare.ru.png"
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;p>&lt;strong>–ü–æ –≤–µ—Ä—Ç–∏–∫–∞–ª–∏ ‚Äî –∏–Ω–¥–µ–∫—Å—ã –º–∞—Å—Å–∏–≤–∞ &lt;code>a&lt;/code>&lt;/strong>&lt;/p>
&lt;p>&lt;strong>–ü–æ –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª–∏ ‚Äî –∏–Ω–¥–µ–∫—Å—ã –º–∞—Å—Å–∏–≤–∞ &lt;code>tree&lt;/code>&lt;/strong>&lt;/p>
&lt;p>&lt;strong>($T_i$ —è–≤–ª—è–µ—Ç—Å—è —Å—É–º–º–æ–π —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –º–∞—Å—Å–∏–≤–∞ &lt;code>a&lt;/code>, –∏–Ω–¥–µ–∫—Å—ã –∫–æ—Ç–æ—Ä—ã—Ö –∑–∞—à—Ç—Ä–∏—Ö–æ–≤–∞–Ω—ã), –ø–æ –≤–µ—Ä—Ç–∏–∫–∞–ª–∏ ‚Äî –∏–Ω–¥–µ–∫—Å—ã –º–∞—Å—Å–∏–≤–∞ &lt;code>a&lt;/code>&lt;/strong>&lt;/p>
&lt;p>–í –¥–∞–Ω–Ω–æ–º –ø—Ä–∏–º–µ—Ä–µ –≤ &lt;code>tree[1]&lt;/code> —Ö—Ä–∞–Ω–∏—Ç—Å—è —Å—É–º–º–∞ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –Ω–∞ –æ—Ç—Ä–µ–∑–≤–µ &lt;code>a[0:2]&lt;/code> . &lt;strong>2 - –ø–æ—Ç–æ–º—É —á—Ç–æ –ø–æ—Å–ª–µ–¥–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç –ø–æ –∏–Ω–¥–µ–∫—Å—É –Ω–µ –≤–∫–ª—é—á–∞–µ—Ç—Å—è&lt;/strong>.&lt;/p>
&lt;pre>&lt;code>tree[9] = sum(a[8:10])
tree[7] = sum(a[0:8])
&lt;/code>&lt;/pre>
&lt;hr>
&lt;p>–ù–∞ –¥–∞–Ω–Ω–æ–º —ç—Ç–∞–ø–µ –ø–æ–ª—É—á–∞–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–µ—Ä–µ–≤–∞ –≤–∏–¥–∞: &lt;code>tree[i] = sum(a[F(i):i+1])&lt;/code>. –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: &lt;code>i+1&lt;/code> - —á—Ç–æ–±—ã &lt;em>–∑–∞—Ö–≤–∞—Ç–∏—Ç—å&lt;/em> –ø–æ—Å–ª–µ–¥–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç –ø–æ –∏–Ω–¥–µ–∫—Å—É.&lt;/p>
&lt;p>–ï—Å–ª–∏ –º—ã —Ä–∞—Å—Å—á–∏—Ç–∞–µ–º —Ç–∞–∫–æ–µ &lt;code>F(i)&lt;/code> –∏ —É–º–µ–µ–º —Å—á–∏—Ç–∞—Ç—å &lt;a href="../prefix-sum">—Å—É–º–º—É –Ω–∞ –ø—Ä–µ—Ñ–∏–∫—Å–µ&lt;/a>, —Ç–æ —Å–º–æ–∂–µ–º –Ω–∞—Ö–æ–¥–∏—Ç—å —Å—É–º–º—É –ª—é–±–æ–≥–æ –ø–æ–¥–æ—Ç—Ä–µ–∑–∫–∞ –∑–∞ &lt;code>O(logn)&lt;/code>.&lt;/p>
&lt;blockquote>
&lt;p>&lt;a href="https://youtu.be/BzFN9YwR-NM?t=1830">–ö–∞–∫ —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç—Å—è –º–∞—Å—Å–∏–≤ –¥–µ—Ä–µ–≤–∞ | youtube&lt;/a>&lt;/p>&lt;/blockquote>
&lt;p>–ü–æ–¥—Å—á–µ—Ç –ø—Ä–µ—Ñ–∏–∫—Å–Ω—ã—Ö —Å—É–º–º:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">def&lt;/span> &lt;span style="color:#06287e">prefix_sum&lt;/span>(k):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> result &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#40a070">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> i &lt;span style="color:#666">=&lt;/span> k
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">while&lt;/span> i &lt;span style="color:#666">&amp;gt;=&lt;/span> &lt;span style="color:#40a070">0&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> result &lt;span style="color:#666">+=&lt;/span> tree[i]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> i &lt;span style="color:#666">=&lt;/span> F(i) &lt;span style="color:#666">-&lt;/span> &lt;span style="color:#40a070">1&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="—Ä–µ—Å—É—Ä—Å—ã">–†–µ—Å—É—Ä—Å—ã&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=BzFN9YwR-NM">https://www.youtube.com/watch?v=BzFN9YwR-NM&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://neerc.ifmo.ru/wiki/index.php?title=%D0%94%D0%B5%D1%80%D0%B5%D0%B2%D0%BE_%D0%A4%D0%B5%D0%BD%D0%B2%D0%B8%D0%BA%D0%B0">–î–µ—Ä–µ–≤–æ –§–µ–Ω–≤–∏–∫–∞ | wiki&lt;/a>&lt;/li>
&lt;/ul></description></item></channel></rss>