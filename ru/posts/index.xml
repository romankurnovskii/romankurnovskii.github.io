<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Заметки on Roman Kurnovskii</title><link>https://romankurnovskii.com/ru/posts/</link><description>Recent content in Заметки on Roman Kurnovskii</description><generator>Hugo -- gohugo.io</generator><language>ru</language><copyright>&amp;copy; 2025</copyright><atom:link href="https://romankurnovskii.com/ru/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>Certificates</title><link>https://romankurnovskii.com/ru/posts/certificates/</link><pubDate>Fri, 27 Oct 2023 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/posts/certificates/</guid><description/></item><item><title>Как создать приложение React-Electron с нуля</title><link>https://romankurnovskii.com/ru/posts/howto-create-react-electron-app-ts/</link><pubDate>Sat, 26 Aug 2023 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/posts/howto-create-react-electron-app-ts/</guid><description>&lt;p>В этом пошаговом руководстве мы создадим простое приложение React-Electron с нуля. Electron — это фреймворк, который позволяет создавать кроссплатформенные настольные приложения с использованием веб-технологий, таких как HTML, CSS и JavaScript. React — популярная библиотека JavaScript для создания пользовательских интерфейсов.&lt;/p>
&lt;p>Я использую этот чистый шаблон в качестве заготовки для своих проектов.&lt;/p>
&lt;h2 id="вкратце">Вкратце&lt;/h2>
&lt;ol>
&lt;li>Перейдите к репозиторию &lt;a href="https://github.com/romankurnovskii/electron-react-template">electron-react-template&lt;/a>&lt;/li>
&lt;li>Нажмите &lt;strong>Use this template&lt;/strong>, чтобы создать новый репозиторий и начать кодирование.&lt;/li>
&lt;/ol>
&lt;h2 id="предварительные-требования">Предварительные требования&lt;/h2>
&lt;p>Прежде чем начать этот урок, убедитесь, что следующие инструменты установлены на вашей системе:&lt;/p>
&lt;ol>
&lt;li>Node.js (версия 12 или новее)&lt;/li>
&lt;li>npm или yarn (npm включен в Node.js, а yarn можно установить отдельно)&lt;/li>
&lt;li>Редактор кода (например, Visual Studio Code)&lt;/li>
&lt;/ol>
&lt;h2 id="шаг-1-настройка-структуры-проекта">Шаг 1: Настройка структуры проекта&lt;/h2>
&lt;p>Создайте новую директорию для вашего проекта и перейдите к ней в вашем терминале:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>mkdir react-electron-app
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020">cd&lt;/span> react-electron-app
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>mkdir -p src electron public
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>touch src/App.tsx src/index.tsx electron/main.ts
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>touch public/index.html
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Теперь ваш проект должен иметь следующую структуру:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>react-electron-app
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├── electron
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ └── main.ts
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├── public
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ └── index.html
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>└── src
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ├── App.tsx
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> └── index.tsx
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="шаг-2-инициализация-проекта">Шаг 2: Инициализация проекта&lt;/h2>
&lt;p>Выполните следующую команду в терминале, чтобы инициализировать проект с файлом &lt;code>package.json&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>npm init -y
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="шаг-3-установка-зависимостей">Шаг 3: Установка зависимостей&lt;/h2>
&lt;p>Установите необходимые зависимости для проекта:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>npm install --save react react-dom typescript electron
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>npm install --save-dev concurrently electron-builder electron-is-dev wait-on cross-env
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="шаг-4-настройка-typescript">Шаг 4: Настройка TypeScript&lt;/h2>
&lt;p>Создайте файл &lt;code>tsconfig.json&lt;/code> в корне проекта:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>touch tsconfig.json
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Добавьте следующее содержимое в файл &lt;code>tsconfig.json&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#062873;font-weight:bold">&amp;#34;compilerOptions&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#062873;font-weight:bold">&amp;#34;target&amp;#34;&lt;/span>: &lt;span style="color:#4070a0">&amp;#34;ES2023&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#062873;font-weight:bold">&amp;#34;lib&amp;#34;&lt;/span>: [&lt;span style="color:#4070a0">&amp;#34;dom&amp;#34;&lt;/span>, &lt;span style="color:#4070a0">&amp;#34;dom.iterable&amp;#34;&lt;/span>, &lt;span style="color:#4070a0">&amp;#34;esnext&amp;#34;&lt;/span>],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#062873;font-weight:bold">&amp;#34;allowJs&amp;#34;&lt;/span>: &lt;span style="color:#007020;font-weight:bold">true&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#062873;font-weight:bold">&amp;#34;skipLibCheck&amp;#34;&lt;/span>: &lt;span style="color:#007020;font-weight:bold">true&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#062873;font-weight:bold">&amp;#34;esModuleInterop&amp;#34;&lt;/span>: &lt;span style="color:#007020;font-weight:bold">true&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#062873;font-weight:bold">&amp;#34;allowSyntheticDefaultImports&amp;#34;&lt;/span>: &lt;span style="color:#007020;font-weight:bold">true&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#062873;font-weight:bold">&amp;#34;strict&amp;#34;&lt;/span>: &lt;span style="color:#007020;font-weight:bold">true&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#062873;font-weight:bold">&amp;#34;forceConsistentCasingInFileNames&amp;#34;&lt;/span>: &lt;span style="color:#007020;font-weight:bold">true&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#062873;font-weight:bold">&amp;#34;noFallthroughCasesInSwitch&amp;#34;&lt;/span>: &lt;span style="color:#007020;font-weight:bold">true&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#062873;font-weight:bold">&amp;#34;module&amp;#34;&lt;/span>: &lt;span style="color:#4070a0">&amp;#34;esnext&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#062873;font-weight:bold">&amp;#34;moduleResolution&amp;#34;&lt;/span>: &lt;span style="color:#4070a0">&amp;#34;node&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#062873;font-weight:bold">&amp;#34;resolveJsonModule&amp;#34;&lt;/span>: &lt;span style="color:#007020;font-weight:bold">true&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#062873;font-weight:bold">&amp;#34;isolatedModules&amp;#34;&lt;/span>: &lt;span style="color:#007020;font-weight:bold">true&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#062873;font-weight:bold">&amp;#34;noEmit&amp;#34;&lt;/span>: &lt;span style="color:#007020;font-weight:bold">true&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#062873;font-weight:bold">&amp;#34;jsx&amp;#34;&lt;/span>: &lt;span style="color:#4070a0">&amp;#34;react-jsx&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#062873;font-weight:bold">&amp;#34;include&amp;#34;&lt;/span>: [&lt;span style="color:#4070a0">&amp;#34;src&amp;#34;&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="шаг-5-настройка-приложения-react">Шаг 5: Настройка приложения React&lt;/h2>
&lt;p>Замените содержимое файла &lt;code>src/App.tsx&lt;/code> следующим кодом:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-tsx" data-lang="tsx">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">function&lt;/span> App() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#062873;font-weight:bold">div&lt;/span> &lt;span style="color:#4070a0">className&lt;/span>&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#4070a0">&amp;#39;App&amp;#39;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#062873;font-weight:bold">p&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="">Привет&lt;/span>, &lt;span style="">мир&lt;/span>&lt;span style="color:#666">!&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#062873;font-weight:bold">p&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#062873;font-weight:bold">div&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> );
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">export&lt;/span> &lt;span style="color:#007020;font-weight:bold">default&lt;/span> App;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Замените содержимое файла &lt;code>src/index.tsx&lt;/code> следующим кодом:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-tsx" data-lang="tsx">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">import&lt;/span> React &lt;span style="color:#007020;font-weight:bold">from&lt;/span> &lt;span style="color:#4070a0">&amp;#39;react&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">import&lt;/span> ReactDOM &lt;span style="color:#007020;font-weight:bold">from&lt;/span> &lt;span style="color:#4070a0">&amp;#39;react-dom&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">import&lt;/span> App &lt;span style="color:#007020;font-weight:bold">from&lt;/span> &lt;span style="color:#4070a0">&amp;#39;./App&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ReactDOM.render(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#062873;font-weight:bold">React.StrictMode&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#062873;font-weight:bold">App&lt;/span> /&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#062873;font-weight:bold">React.StrictMode&lt;/span>&amp;gt;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020">document&lt;/span>.getElementById(&lt;span style="color:#4070a0">&amp;#39;root&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Замените содержимое файла &lt;code>public/index.html&lt;/code> следующим кодом:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-html" data-lang="html">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020">&amp;lt;!DOCTYPE html&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#062873;font-weight:bold">html&lt;/span> &lt;span style="color:#4070a0">lang&lt;/span>&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#4070a0">&amp;#34;ru&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#062873;font-weight:bold">head&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#062873;font-weight:bold">meta&lt;/span> &lt;span style="color:#4070a0">charset&lt;/span>&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#4070a0">&amp;#34;UTF-8&amp;#34;&lt;/span> /&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#062873;font-weight:bold">meta&lt;/span> &lt;span style="color:#4070a0">name&lt;/span>&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#4070a0">&amp;#34;viewport&amp;#34;&lt;/span> &lt;span style="color:#4070a0">content&lt;/span>&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#4070a0">&amp;#34;width=device-width, initial-scale=1.0&amp;#34;&lt;/span> /&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#062873;font-weight:bold">title&lt;/span>&amp;gt;Приложение React-Electron&amp;lt;/&lt;span style="color:#062873;font-weight:bold">title&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#062873;font-weight:bold">head&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#062873;font-weight:bold">body&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#062873;font-weight:bold">div&lt;/span> &lt;span style="color:#4070a0">id&lt;/span>&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#4070a0">&amp;#34;root&amp;#34;&lt;/span>&amp;gt;&amp;lt;/&lt;span style="color:#062873;font-weight:bold">div&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#062873;font-weight:bold">body&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;/&lt;span style="color:#062873;font-weight:bold">html&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="шаг-6-настройка-основного-процесса-electron">Шаг 6: Настройка основного процесса Electron&lt;/h2>
&lt;p>Замените содержимое файла &lt;code>electron/main.ts&lt;/code> следующим кодом:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-ts" data-lang="ts">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">import&lt;/span> { app, BrowserWindow } &lt;span style="color:#007020;font-weight:bold">from&lt;/span> &lt;span style="color:#4070a0">&amp;#39;electron&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">import&lt;/span> &lt;span style="color:#666">*&lt;/span> &lt;span style="color:#007020;font-weight:bold">as&lt;/span> path &lt;span style="color:#007020;font-weight:bold">from&lt;/span> &lt;span style="color:#4070a0">&amp;#39;path&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">import&lt;/span> &lt;span style="color:#666">*&lt;/span> &lt;span style="color:#007020;font-weight:bold">as&lt;/span> isDev &lt;span style="color:#007020;font-weight:bold">from&lt;/span> &lt;span style="color:#4070a0">&amp;#39;electron-is-dev&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">function&lt;/span> createWindow() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">const&lt;/span> win &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#007020;font-weight:bold">new&lt;/span> BrowserWindow({
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> width: &lt;span style="color:#902000">800&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> height: &lt;span style="color:#902000">600&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> webPreferences&lt;span style="color:#666">:&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> nodeIntegration: &lt;span style="color:#902000">true&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> });
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> win.loadURL(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> isDev
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#666">?&lt;/span> &lt;span style="color:#4070a0">&amp;#39;http://localhost:3000&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#666">:&lt;/span> &lt;span style="color:#4070a0">`file://&lt;/span>&lt;span style="color:#70a0d0">${&lt;/span>path.join(__dirname, &lt;span style="color:#4070a0">&amp;#39;../build/index.html&amp;#39;&lt;/span>)&lt;span style="color:#70a0d0">}&lt;/span>&lt;span style="color:#4070a0">`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> );
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> win.webContents.openDevTools();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>app.whenReady().then(createWindow);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>app.on(&lt;span style="color:#4070a0">&amp;#39;window-all-closed&amp;#39;&lt;/span>, () &lt;span style="color:#666">=&amp;gt;&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">if&lt;/span> (process.platform &lt;span style="color:#666">!==&lt;/span> &lt;span style="color:#4070a0">&amp;#39;darwin&amp;#39;&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> app.quit();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>});
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>app.on(&lt;span style="color:#4070a0">&amp;#39;activate&amp;#39;&lt;/span>, () &lt;span style="color:#666">=&amp;gt;&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">if&lt;/span> (BrowserWindow.getAllWindows().length &lt;span style="color:#666">===&lt;/span> &lt;span style="color:#40a070">0&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> createWindow();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>});
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="шаг-7-настройка-скриптов-в-packagejson">Шаг 7: Настройка скриптов в package.json&lt;/h2>
&lt;p>Откройте файл &lt;code>package.json&lt;/code> и добавьте следующие скрипты в раздел &amp;ldquo;scripts&amp;rdquo;:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4070a0">&amp;#34;scripts&amp;#34;&lt;/span>&lt;span style="">:&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#062873;font-weight:bold">&amp;#34;start&amp;#34;&lt;/span>: &lt;span style="color:#4070a0">&amp;#34;react-scripts start&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#062873;font-weight:bold">&amp;#34;build&amp;#34;&lt;/span>: &lt;span style="color:#4070a0">&amp;#34;react-scripts build&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#062873;font-weight:bold">&amp;#34;eject&amp;#34;&lt;/span>: &lt;span style="color:#4070a0">&amp;#34;react-scripts eject&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#062873;font-weight:bold">&amp;#34;electron:dev&amp;#34;&lt;/span>: &lt;span style="color:#4070a0">&amp;#34;concurrently \&amp;#34;cross-env BROWSER=none yarn start\&amp;#34; \&amp;#34;wait-on http://127.0.0.1:3000 &amp;amp;&amp;amp; tsc -p electron -w\&amp;#34; \&amp;#34;wait-on http://127.0.0.1:3000 &amp;amp;&amp;amp; tsc -p electron &amp;amp;&amp;amp; electron .\&amp;#34;&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#062873;font-weight:bold">&amp;#34;electron:build&amp;#34;&lt;/span>: &lt;span style="color:#4070a0">&amp;#34;yarn build &amp;amp;&amp;amp; tsc -p electron &amp;amp;&amp;amp; electron-builder&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#062873;font-weight:bold">&amp;#34;electron:dist&amp;#34;&lt;/span>: &lt;span style="color:#4070a0">&amp;#34;yarn build &amp;amp;&amp;amp; tsc -p electron &amp;amp;&amp;amp; electron-builder --mac --dir&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="шаг-8-запуск-приложения">Шаг 8: Запуск приложения&lt;/h2>
&lt;p>Теперь вы можете запустить свое приложение React-Electron, выполнив следующую команду:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>npm run electron:dev
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>SMA - Простая скользящая средняя</title><link>https://romankurnovskii.com/ru/posts/trading-indicators/sma/</link><pubDate>Tue, 13 Jun 2023 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/posts/trading-indicators/sma/</guid><description>&lt;p>SMA (Simple Moving Average) - Простая скользящая средняя&lt;/p>
&lt;p>Вычисляет среднее арифметическое на выбранном отрезке.&lt;/p>
&lt;p>Удобно использовать одновременно на короткий и длинный отрезок.&lt;/p>
&lt;p>Например короткий период 50 дней, длинный 200 дней.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>short_period &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#40a070">50&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>long_period &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#40a070">200&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sma(short_period, long_period)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Тенденция: Когда 50-дневная SMA находится выше 200-дневной SMA, это может указывать на продолжающийся восходящий тренд. И наоборот, если 50-дневная SMA находится ниже 200-дневной SMA, это может свидетельствовать о нисходящем тренде.&lt;/p>
&lt;p>Потенциальная точка входа: Если более короткая SMA пересекается &lt;strong>выше более длинной&lt;/strong> SMA, это обычно рассматривается как &amp;ldquo;бычий&amp;rdquo; сигнал, и трейдеры могут рассмотреть возможность входа в длинную позицию, покупать.&lt;/p>
&lt;p>И наоборот, если более короткая SMA пересекается ниже более длинной SMA, это может быть медвежьим сигналом, и трейдеры могут рассмотреть возможность продажи или входа в короткую позицию.&lt;/p>
&lt;p>Используется в связке с RSI и/или MACD.&lt;/p></description></item><item><title>Валютные форварды и Фьючерсы</title><link>https://romankurnovskii.com/ru/posts/economics/diff-forward-contracts-futures.ru/</link><pubDate>Sun, 05 Mar 2023 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/posts/economics/diff-forward-contracts-futures.ru/</guid><description>&lt;h2 id="валютные-форварды">Валютные форварды&lt;/h2>
&lt;p>Валютные форварды (forward contracts) - это договоры, в рамках которых две стороны соглашаются на обмен активами (обычно это валюты, сырьевые товары или финансовые инструменты) на определенную дату в будущем по заранее оговоренной цене. Это финансовый инструмент, который используется компаниями и инвесторами для защиты от рисков колебаний курсов валют.&lt;/p>
&lt;p>Например, если компания знает, что ей нужно купить определенную сумму валюты на будущее время для оплаты поставок, она может заключить валютный форвард, чтобы зафиксировать курс обмена на определенный период времени. Таким образом, она может избежать потерь от колебаний курса валют и защитить свою операционную прибыль.&lt;/p>
&lt;p>&lt;p class="md__image">
&lt;img
src="forwards.png"
id="zoom-default"
alt="forwards.png"
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;p>Форварды являются одним из инструментов хеджирования рисков и используются для защиты от потенциальных потерь, связанных с колебаниями цен на активы.&lt;/p>
&lt;p>Например, компания, занимающаяся импортом товаров, может заключить форвардный контракт на покупку валюты по фиксированной цене, чтобы защитить себя от возможного увеличения стоимости валюты в будущем.&lt;/p>
&lt;p>Форварды и фьючерсы относятся к группе финансовых инструментов, но они имеют некоторые отличия.&lt;/p>
&lt;h2 id="фьючерсы">Фьючерсы&lt;/h2>
&lt;p>Фьючерсы - это стандартизованные контракты на покупку или продажу определенного актива, например, валюты, акций, сырья, в определенное время в будущем по заранее оговоренной цене. Фьючерсы торгуются на биржах и обычно имеют строгие правила в отношении размера контракта, срока исполнения, стоимости и способа расчета.&lt;/p>
&lt;h3 id="особенности">Особенности&lt;/h3>
&lt;ul>
&lt;li>&lt;strong>Стандартизация:&lt;/strong> все фьючерсы имеют одинаковый размер, срок действия, тип и спецификацию актива, на который они ссылаются.&lt;/li>
&lt;li>&lt;strong>Кредитный риск:&lt;/strong> каждая сторона должна обеспечить свои обязательства по фьючерсному контракту, что означает, что обе стороны могут быть подвержены кредитному риску, если одна из них не исполнит свои обязательства.&lt;/li>
&lt;li>Маржинальное финансирование: для уменьшения кредитного риска стороны должны вносить маржу (внесение определенного денежного залога) в течение срока действия контракта.&lt;/li>
&lt;li>&lt;strong>Ликвидность:&lt;/strong> фьючерсы торгуются на биржах, что обеспечивает высокую ликвидность контрактов и возможность быстрой покупки или продажи актива по рыночной цене.&lt;/li>
&lt;li>&lt;strong>Спекулятивные операции:&lt;/strong> фьючерсы могут использоваться не только для защиты от рисков, но и для спекулятивных операций с целью получения прибыли от изменения цен активов.&lt;/li>
&lt;/ul>
&lt;h2 id="форварды">Форварды&lt;/h2>
&lt;p>Форварды - это договоренности о покупке или продаже определенного актива в будущем по заранее оговоренной цене. Они не стандартизованы и заключаются напрямую между двумя контрагентами. Форварды обычно не торгуются на биржах и могут иметь различные условия, например, размер контракта, дата исполнения и расчета.&lt;/p>
&lt;p>Форвардные контракты могут быть настроены индивидуально для каждой стороны, в отличие от &lt;strong>фьючерсов&lt;/strong>, которые стандартизированы и &lt;strong>торгуются на биржах&lt;/strong>. Также, в отличие от фьючерсов, &lt;strong>форварды&lt;/strong> не имеют стандартных условий исполнения и могут быть заключены на &lt;strong>любой актив&lt;/strong> и на &lt;strong>любой период времени&lt;/strong>.&lt;/p>
&lt;p>Таким образом, форварды и фьючерсы имеют некоторые сходства, но их различия заключаются в &lt;strong>степени стандартизации&lt;/strong>, &lt;strong>регулирования&lt;/strong> и &lt;strong>доступности&lt;/strong> для обычных инвесторов.&lt;/p></description></item><item><title>Разница между Маржинализмом и Меркантилизмом</title><link>https://romankurnovskii.com/ru/posts/economics/raznica-mezhdu-marzhinalizmom-i-nerkantilizmom/</link><pubDate>Thu, 26 Jan 2023 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/posts/economics/raznica-mezhdu-marzhinalizmom-i-nerkantilizmom/</guid><description>&lt;p>Маржинализм и меркантилизм - это два разных термина, которые описывают различные экономические концепции.&lt;/p>
&lt;h2 id="маржинализм">Маржинализм&lt;/h2>
&lt;p>(Неоклассическое направление) - середина XIX в, это экономическая теория, которая основана на идее, что цена товара или услуги определяется его маржой, то есть разницей между продажной ценой и затратами на его производство. В рамках маржинализма обычно считается, что рост маржи является показателем эффективности экономики.&lt;/p>
&lt;p>Маржинализм использует такие величины, как предельная полезность, предельная производительность, предельные издержки&lt;/p>
&lt;p>Одним из главных аспектов является «субъективизм» - подход, при котором все явления в экономике оцениваются, а также исследуются с точки зрения определенного субъекта.&lt;/p>
&lt;p>&lt;strong>Основные элементы маржинализма:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Использование предельных (т.е. приростных) величин. Само слово «маржинализм» происходит от латинского margo, что означает край, предел. Маржиналистов интересует то, насколько изменится та или иная величина при изменении другой величины на единицу. В этом смысле весьма удобным оказывается использование дифференциального исчисления, в котором все построено на соотношении приростов разных величин.&lt;/li>
&lt;li>Субъективизм, т.е. подход, при котором все экономические явления исследуются и оцениваются с точки зрения отдельного хозяйствующего субъекта. Недаром маржинализм иногда называют субъективной школой экономики.&lt;/li>
&lt;li>Гедонизм хозяйствующих субъектов. Человек рассматривался маржиналистами как рациональное существо, целью которого является максимизация собственного удовлетворения.&lt;/li>
&lt;/ul>
&lt;p>После Маржиналистской революции экономическая теория из науки о материальном богатстве превратилась в науку о рациональном поведении людей.&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Методологический индивидуализм. Согласно этому методологическому принципу, закономерности функционирования хозяйства в целом выводятся из поведения отдельно взятого хозяйствующего субъекта. Как писал один из творцов Маржиналистской революции К. Менгер, «то наблюдение, которое мы сперва сделали над изолированным индивидом, а затем над маленьким обществом, временно отделенным от остальных людей, равным образом относится и к более сложным отношениям народа и человеческого общества вообще»[1][1].&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Статичность. Маржиналисты потеряли интерес к «законам движения» капитализма, которыми занимались классики. Акцент экономических исследований после Маржиналистской революции сместился к изучению использования редких ресурсов для удовлетворения потребностей людей в данный момент времени.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Замена причинно-следственного анализа функциональным. Это также стимулировало применение в экономической науке математических методов.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Ликвидация приоритета сферы производства, характерного для экономического анализа классиков. Вместо этого на ранней стадии своего развития маржинализма акцент был перенесен на сферу потребления.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Акцент на применении дедуктивных методов исследования в противоположность историзму и индукции.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Восприятие рыночной экономики как равновесной системы (хотя последнее было не характерно для австрийской школы маржинализма). Эта равновесность неразрывна связана с рациональным оптимизирующим поведением, поскольку неравновесные состояния экономики - т. е. те состояния, которые не удовлетворяют рациональных хозяйствующих субъектов - корректируются их действиями и приводятся к равновесию.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="меркантилизм">Меркантилизм&lt;/h2>
&lt;ul>
&lt;li>это экономическая теория, которая основана на идее, что основной движущей силой экономики является спрос. Меркантилисты считают, что рост спроса способствует росту экономики и снижению безработицы.&lt;/li>
&lt;/ul>
&lt;p>Меркантилизм (Англия) - первая школа экономической науки. Представители: Томас Ман, Джон Лоу, Ричард Кантильон. Главным источником богатства представители этой школы считали торговлю, а богатство отождествляли с золотом.&lt;/p>
&lt;p>&lt;strong>Основные принципы меркантилизма:&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>золото и другие сокровища являются главным богатством общества;&lt;/li>
&lt;li>главный источник получения богатства – внешняя торговля и денежный оборот для обеспечения притока в страну золота и серебра;&lt;/li>
&lt;li>государство должно активно вмешиваться в экономику страны;&lt;/li>
&lt;li>внутри страны производство развивается за счет импорта дешевого сырья;&lt;/li>
&lt;li>поощряется экспорт;&lt;/li>
&lt;li>низкий уровень поддержания заработной платы за счет роста населения.&lt;/li>
&lt;/ol>
&lt;p>Необходимым условием для развития экономики меркантилисты считали превышение экспорта над импортом (активный торговый баланс).&lt;/p>
&lt;ul>
&lt;li>«ранний» меркантилизм (до середины XVI в.);&lt;/li>
&lt;li>«поздний» меркантилизм (середина XVI – середина XVII в.); начало установления торговых связей между странами за счет предложения относительно дешевых товаров; использование золота и серебра чаще в посреднических сделках.&lt;/li>
&lt;/ul>
&lt;p>В общем маржинализм сосредоточен на стоимости производства и продаже товара, в то время как меркантилизм сосредоточен на спросе и потребностях потребителей. Они оба имеют разные подходы к управлению экономикой и оба имеют свои достоинства и недостатки.&lt;/p>
&lt;h2 id="ресурсы">Ресурсы&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://studfile.net/preview/4330083/page:2/">Этапы развития экономической теории: меркантилизм, физиократы, классическая теория, марксизм, маржинализм, кейнсианство, институционализм, монетаризм&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://institutional.narod.ru/history1/ch5.htm">Маржинализм и неоклассика&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>ChatGPT/ruGPT-3</title><link>https://romankurnovskii.com/ru/posts/rugpt-3-notes/</link><pubDate>Sat, 31 Dec 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/posts/rugpt-3-notes/</guid><description>&lt;ul>
&lt;li>&lt;a href="https://chat.openai.com/chat/">https://chat.openai.com/chat/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://russiannlp.github.io/rugpt-demo/">https://russiannlp.github.io/rugpt-demo/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://habr.com/ru/post/589663/">Краткий экскурс в ruGPT-3. Инструкция и демонстрация&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Пополнение Interactive Brokers с Израильского счета</title><link>https://romankurnovskii.com/ru/posts/interactivebrokers-deposit/</link><pubDate>Fri, 07 Oct 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/posts/interactivebrokers-deposit/</guid><description>&lt;h2 id="web">Web&lt;/h2>
&lt;h3 id="создание-заявки-в-ib">Создание заявки в IB&lt;/h3>
&lt;ol>
&lt;li>Заходим на сайт &lt;a href="https://www.interactivebrokers.co.uk/portal/#/">https://www.interactivebrokers.co.uk/portal/#/&lt;/a>&lt;/li>
&lt;li>Нажимаем &lt;a href="https://www.interactivebrokers.co.uk/AccountManagement/AmAuthentication?action=FUND_TRANSFERS&amp;amp;type=DEPOSIT">&lt;strong>Deposit&lt;/strong>&lt;/a>&lt;/li>
&lt;/ol>
&lt;p>&lt;p class="md__image">
&lt;img
src="https://romankurnovskii.com/en/posts/interactivebrokers-deposit/img/button-deposit.png"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;ol>
&lt;li>Нажимаем &lt;strong>Use a new deposit method&lt;/strong> если ранее шаблон не был создан&lt;/li>
&lt;/ol>
&lt;p>&lt;p class="md__image">
&lt;img
src="https://romankurnovskii.com/en/posts/interactivebrokers-deposit/img/button-use-new-deposit.png"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;ol start="4">
&lt;li>Bank Wire -&amp;gt; Get instructions&lt;/li>
&lt;/ol>
&lt;p>&lt;p class="md__image">
&lt;img
src="https://romankurnovskii.com/en/posts/interactivebrokers-deposit/img/select-deposit-method.png"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;p>Account Number: Номер банковского счета.&lt;/p>
&lt;p>&lt;p class="md__image">
&lt;img
src="https://romankurnovskii.com/en/posts/interactivebrokers-deposit/img/bank-wire-template.png"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;ol start="5">
&lt;li>Получаем инструкции с реквизитами для пополнения &lt;em>Bank Wire Instructions&lt;/em>&lt;/li>
&lt;/ol>
&lt;p>&lt;p class="md__image">
&lt;img
src="https://romankurnovskii.com/en/posts/interactivebrokers-deposit/img/bank-wire-instructions.png"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;p>Эти данные Вам нужны для оплаты в Discount Bank&lt;/p>
&lt;h3 id="отправить-деньги-из-discount-bank">Отправить деньги из Discount Bank&lt;/h3>
&lt;ol>
&lt;li>Заходим в личный кабинет банка &lt;a href="https://start.telebank.co.il/">start.telebank.co.il&lt;/a>&lt;/li>
&lt;/ol>
&lt;p>&lt;p class="md__image">
&lt;img
src="https://romankurnovskii.com/en/posts/interactivebrokers-deposit/img/discount-bank-01.jpg"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Нажимаем: &lt;strong>ביצוע העברה&lt;/strong>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Заполняем форму&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>&lt;p class="md__image">
&lt;img
src="https://romankurnovskii.com/en/posts/interactivebrokers-deposit/img/discount-send-money.jpg"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;ol>
&lt;li>Нажимаем &lt;strong>המשך&lt;/strong> и жмем далее. Приходит смс с подверждением, вводим и жмем далее&lt;/li>
&lt;/ol>
&lt;p>&lt;p class="md__image">
&lt;img
src="https://romankurnovskii.com/en/posts/interactivebrokers-deposit/img/discount-send-money-done.png"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
&lt;/p></description></item><item><title>Увеличение картинки по нажатию в Hugo</title><link>https://romankurnovskii.com/ru/posts/hugo-add-image-zoomin/</link><pubDate>Sat, 09 Jul 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/posts/hugo-add-image-zoomin/</guid><description>&lt;h2 id="введение">Введение&lt;/h2>
&lt;p>В Hugo по умолчанию используется парсинг &lt;em>markdown&lt;/em> файлов. Т.е. мы получаем html код в том виде, как он написан в markdown.&lt;/p>
&lt;p>Для того, чтобы нам понимать какие именно изображения мы можем увеличивать, добавим к этим изображениям отдельный тег/ключ/id&lt;/p>
&lt;h2 id="инструменты">Инструменты&lt;/h2>
&lt;p>Для реализации функционала нам необходимо:&lt;/p>
&lt;ul>
&lt;li>написать/подключить скрипт/обработчик, который будет выполнять эффект &lt;strong>zoomin&lt;/strong> к нужным нам изображениям&lt;/li>
&lt;li>Добавить необходимые &lt;em>метаданные&lt;/em> к изображениям, чтобы скрипт их смог найти&lt;/li>
&lt;/ul>
&lt;h2 id="скрипт-zoomin">Скрипт zoomin&lt;/h2>
&lt;p>Для добавления возможности увеличивать картинку при нажатии воспользуемся пакетом &lt;a href="https://github.com/francoischalifour/medium-zoom">medium-zoom&lt;/a>.&lt;/p>
&lt;p>Данный покет реализовывает данную функциональность в ненагруженном удобном стиле.&lt;/p>
&lt;p>&lt;p class="md__image">
&lt;img
src="https://user-images.githubusercontent.com/6137112/43369906-7623239a-9376-11e8-978b-6e089be499fb.gif"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
&lt;a href="https://medium-zoom.francoischalifour.com/">Демо сайт&lt;/a>&lt;/p>
&lt;h3 id="логика-скрипта">Логика скрипта&lt;/h3>
&lt;p>Скрипт находит изображения с &lt;code>id&lt;/code> и так понимает, что нужно применить свойство &lt;code>zoomin&lt;/code> к этим изображениям&lt;/p>
&lt;p>Возможные &lt;code>id&lt;/code>:&lt;/p>
&lt;ul>
&lt;li>zoom-default&lt;/li>
&lt;li>zoom-margin&lt;/li>
&lt;li>zoom-background&lt;/li>
&lt;li>zoom-scrollOffset&lt;/li>
&lt;li>zoom-trigger&lt;/li>
&lt;li>zoom-detach&lt;/li>
&lt;li>zoom-center&lt;/li>
&lt;/ul>
&lt;h3 id="подключение-скриптов">Подключение скриптов&lt;/h3>
&lt;p>Для работы скрипта, нам необходимо подключить логику, а также обработчик.&lt;/p>
&lt;p>В Hugo в корне проекта есть папка static, которую можно использовать для хранения статических файлов (стиле, скриптов) и использовать для подключения на сайте. Если такой папки нет, то можно создать.&lt;/p>
&lt;p>В папке &lt;em>static&lt;/em> создадим папку &lt;em>zoom-image&lt;/em> и добавим в нее 2 скрипта&lt;/p>
&lt;p>&lt;p class="md__image">
&lt;img
src="img/static-scripts.png"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;h4 id="staticjszoom-imageindexjs">static/js/zoom-image/index.js&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">const&lt;/span> zoomDefault &lt;span style="color:#666">=&lt;/span> mediumZoom(&lt;span style="color:#4070a0">&amp;#39;#zoom-default&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">const&lt;/span> zoomMargin &lt;span style="color:#666">=&lt;/span> mediumZoom(&lt;span style="color:#4070a0">&amp;#39;#zoom-margin&amp;#39;&lt;/span>, { margin&lt;span style="color:#666">:&lt;/span> &lt;span style="color:#40a070">48&lt;/span> })
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">const&lt;/span> zoomBackground &lt;span style="color:#666">=&lt;/span> mediumZoom(&lt;span style="color:#4070a0">&amp;#39;#zoom-background&amp;#39;&lt;/span>, { background&lt;span style="color:#666">:&lt;/span> &lt;span style="color:#4070a0">&amp;#39;#212530&amp;#39;&lt;/span> })
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">const&lt;/span> zoomScrollOffset &lt;span style="color:#666">=&lt;/span> mediumZoom(&lt;span style="color:#4070a0">&amp;#39;#zoom-scrollOffset&amp;#39;&lt;/span>, {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> scrollOffset&lt;span style="color:#666">:&lt;/span> &lt;span style="color:#40a070">0&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> background&lt;span style="color:#666">:&lt;/span> &lt;span style="color:#4070a0">&amp;#39;rgba(25, 18, 25, .9)&amp;#39;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>})
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic">// Trigger the zoom when the button is clicked
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic">&lt;/span>&lt;span style="color:#007020;font-weight:bold">const&lt;/span> zoomToTrigger &lt;span style="color:#666">=&lt;/span> mediumZoom(&lt;span style="color:#4070a0">&amp;#39;#zoom-trigger&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">const&lt;/span> button &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#007020">document&lt;/span>.querySelector(&lt;span style="color:#4070a0">&amp;#39;#button-trigger&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>button.addEventListener(&lt;span style="color:#4070a0">&amp;#39;click&amp;#39;&lt;/span>, () =&amp;gt; zoomToTrigger.open())
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic">// Detach the zoom after having been zoomed once
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic">&lt;/span>&lt;span style="color:#007020;font-weight:bold">const&lt;/span> zoomToDetach &lt;span style="color:#666">=&lt;/span> mediumZoom(&lt;span style="color:#4070a0">&amp;#39;#zoom-detach&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>zoomToDetach.on(&lt;span style="color:#4070a0">&amp;#39;closed&amp;#39;&lt;/span>, () =&amp;gt; zoomToDetach.detach())
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic">// Observe zooms to write the history
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic">&lt;/span>&lt;span style="color:#007020;font-weight:bold">const&lt;/span> observedZooms &lt;span style="color:#666">=&lt;/span> [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> zoomDefault,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> zoomMargin,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> zoomBackground,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> zoomScrollOffset,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> zoomToTrigger,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> zoomToDetach,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic">// Log all interactions in the history
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic">&lt;/span>&lt;span style="color:#007020;font-weight:bold">const&lt;/span> history &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#007020">document&lt;/span>.querySelector(&lt;span style="color:#4070a0">&amp;#39;#history&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>observedZooms.forEach(zoom =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> zoom.on(&lt;span style="color:#4070a0">&amp;#39;open&amp;#39;&lt;/span>, event =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">const&lt;/span> time &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#007020;font-weight:bold">new&lt;/span> &lt;span style="color:#007020">Date&lt;/span>().toLocaleTimeString()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> history.innerHTML &lt;span style="color:#666">+=&lt;/span> &lt;span style="color:#4070a0">`&amp;lt;li&amp;gt;Image &amp;#34;&amp;lt;em&amp;gt;&lt;/span>&lt;span style="color:#70a0d0">${&lt;/span>event.target.alt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#70a0d0">}&lt;/span>&lt;span style="color:#4070a0">&amp;lt;/em&amp;gt;&amp;#34; was zoomed at &lt;/span>&lt;span style="color:#70a0d0">${&lt;/span>time&lt;span style="color:#70a0d0">}&lt;/span>&lt;span style="color:#4070a0">&amp;lt;/li&amp;gt;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> })
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> zoom.on(&lt;span style="color:#4070a0">&amp;#39;detach&amp;#39;&lt;/span>, event =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">const&lt;/span> time &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#007020;font-weight:bold">new&lt;/span> &lt;span style="color:#007020">Date&lt;/span>().toLocaleTimeString()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> history.innerHTML &lt;span style="color:#666">+=&lt;/span> &lt;span style="color:#4070a0">`&amp;lt;li&amp;gt;Image &amp;lt;em&amp;gt;&amp;#34;&lt;/span>&lt;span style="color:#70a0d0">${&lt;/span>event.target.alt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#70a0d0">}&lt;/span>&lt;span style="color:#4070a0">&amp;#34;&amp;lt;/em&amp;gt; was detached at &lt;/span>&lt;span style="color:#70a0d0">${&lt;/span>time&lt;span style="color:#70a0d0">}&lt;/span>&lt;span style="color:#4070a0">&amp;lt;/li&amp;gt;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> })
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>})
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="staticjszoom-imageplaceholdersjs">static/js/zoom-image/placeholders.js&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic">// Show placeholders for paragraphs
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic">&lt;/span>&lt;span style="color:#007020;font-weight:bold">const&lt;/span> paragraphs &lt;span style="color:#666">=&lt;/span> [].slice.call(&lt;span style="color:#007020">document&lt;/span>.querySelectorAll(&lt;span style="color:#4070a0">&amp;#39;p.placeholder&amp;#39;&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>paragraphs.forEach(paragraph =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#60a0b0;font-style:italic">// eslint-disable-next-line no-param-reassign
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic">&lt;/span> paragraph.innerHTML &lt;span style="color:#666">=&lt;/span> paragraph.textContent
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .split(&lt;span style="color:#4070a0">&amp;#39; &amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .filter(text =&amp;gt; text.length &lt;span style="color:#666">&amp;gt;&lt;/span> &lt;span style="color:#40a070">4&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .map(text =&amp;gt; &lt;span style="color:#4070a0">`&amp;lt;span class=&amp;#34;placeholder__word&amp;#34;&amp;gt;&lt;/span>&lt;span style="color:#70a0d0">${&lt;/span>text&lt;span style="color:#70a0d0">}&lt;/span>&lt;span style="color:#4070a0">&amp;lt;/span&amp;gt;`&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .join(&lt;span style="color:#4070a0">&amp;#39; &amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>})
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="cdn-скрипт">CDN скрипт&lt;/h4>
&lt;p>Скрипт можно скачать, а можно подгружать&lt;/p>
&lt;p>&lt;a href="https://cdn.jsdelivr.net/npm/medium-zoom@1.0.6/dist/medium-zoom.min.js">Ссылка на скрипт&lt;/a>&lt;/p>
&lt;h4 id="добавление-в-шаблон">Добавление в шаблон&lt;/h4>
&lt;p>Для того, чтобы данные скрипты работали в шаблоне сайта, их необходимо подключить.&lt;/p>
&lt;p>Я использую для этого шаблон &lt;strong>baseof.html&lt;/strong>. Просто добавляю ссылки на скрипта в &lt;strong>body&lt;/strong> шаблона.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-html" data-lang="html">&lt;span style="display:flex;">&lt;span> # baseof.html
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#062873;font-weight:bold">footer&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#062873;font-weight:bold">script&lt;/span> &lt;span style="color:#4070a0">src&lt;/span>&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#4070a0">&amp;#34;https://cdn.jsdelivr.net/npm/medium-zoom@1.0.6/dist/medium-zoom.min.js&amp;#34;&lt;/span> &lt;span style="color:#4070a0">defer&lt;/span>&amp;gt;&amp;lt;/&lt;span style="color:#062873;font-weight:bold">script&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#062873;font-weight:bold">script&lt;/span> &lt;span style="color:#4070a0">src&lt;/span>&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#4070a0">&amp;#34;/js/zoom-image/placeholders.js&amp;#34;&lt;/span> &lt;span style="color:#4070a0">defer&lt;/span>&amp;gt;&amp;lt;/&lt;span style="color:#062873;font-weight:bold">script&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#062873;font-weight:bold">script&lt;/span> &lt;span style="color:#4070a0">src&lt;/span>&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#4070a0">&amp;#34;/js/zoom-image/index.js&amp;#34;&lt;/span> &lt;span style="color:#4070a0">defer&lt;/span>&amp;gt;&amp;lt;/&lt;span style="color:#062873;font-weight:bold">script&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#062873;font-weight:bold">body&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;/&lt;span style="color:#062873;font-weight:bold">html&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="id-изображения">ID изображения&lt;/h2>
&lt;p>Hugo позволяет изменить поведение при парсинге &lt;em>markdown&lt;/em> файлов с помощью хуков. Подробнее о рендер-хуках можно прочитать на &lt;a href="https://gohugo.io/templates/render-hooks/">сайте&lt;/a>.&lt;/p>
&lt;p>В папке *&lt;em>layouts&lt;/em>&lt;/p>
&lt;p>Добавим файл &lt;strong>render-image.html&lt;/strong> по следующему пути &lt;strong>layouts -&amp;gt; _default -&amp;gt; _markup&lt;/strong>
&lt;p class="md__image">
&lt;img
src="img/render-image-path.png"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;p>код файла:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-html" data-lang="html">&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#062873;font-weight:bold">p&lt;/span> &lt;span style="color:#4070a0">class&lt;/span>&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#4070a0">&amp;#34;md__image&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#062873;font-weight:bold">img&lt;/span> &lt;span style="color:#4070a0">src&lt;/span>&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#4070a0">&amp;#34;{{ .Destination | safeURL }}&amp;#34;&lt;/span> &lt;span style="color:#4070a0">id&lt;/span>&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#4070a0">&amp;#34;zoom-default&amp;#34;&lt;/span> &lt;span style="color:#4070a0">alt&lt;/span>&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#4070a0">&amp;#34;{{ .Text }}&amp;#34;&lt;/span> &lt;span style="">{{&lt;/span> &lt;span style="color:#4070a0">with&lt;/span> &lt;span style="">.&lt;/span>&lt;span style="color:#4070a0">Title&lt;/span>&lt;span style="">}}&lt;/span> &lt;span style="color:#4070a0">title&lt;/span>&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#4070a0">&amp;#34;{{ . }}&amp;#34;&lt;/span> &lt;span style="">{{&lt;/span> &lt;span style="color:#4070a0">end&lt;/span> &lt;span style="">}}&lt;/span> /&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;/&lt;span style="color:#062873;font-weight:bold">p&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Мы добавили только &lt;code>id=&amp;quot;zoom-default&amp;quot;&lt;/code> в код по умолчанию&lt;/p>
&lt;h2 id="итоги">Итоги&lt;/h2>
&lt;video controls>
&lt;source src="img/gallery.mp4" type="video/mp4">
Your browser does not support the video tag.
&lt;/video>
&lt;h3 id="процесс">Процесс&lt;/h3>
&lt;div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
&lt;iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" loading="eager" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/dHwGdSaO-tk?autoplay=0&amp;amp;controls=1&amp;amp;end=0&amp;amp;loop=0&amp;amp;mute=0&amp;amp;start=0" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" title="YouTube video">&lt;/iframe>
&lt;/div></description></item><item><title>Установка Ubuntu Desktop 22.10 (Kinetic Kudu) на ARM CPU</title><link>https://romankurnovskii.com/ru/posts/howto-install-ubuntu-desktop-on-arm/</link><pubDate>Thu, 23 Jun 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/posts/howto-install-ubuntu-desktop-on-arm/</guid><description>&lt;p>Ubuntu - одна из популярных Linux систем и достаточно много &lt;a href="https://mac.getutm.app/gallery/ubuntu-20-04">обзоров по установке Ubuntu&lt;/a>. В этой статье мы будем устанавливать образ Ubuntu для &lt;strong>ARM процессора&lt;/strong> на виртуальную машину UTM. Вся установка будет проходить на Mac OS.&lt;/p>
&lt;h3 id="загрузка-установочного-образа">Загрузка установочного образа&lt;/h3>
&lt;p>На сайте Ubuntu доступен для скачивания только образ &lt;a href="https://ubuntu.com/download/server/arm">Ubuntu Server ARM&lt;/a> версии &lt;strong>22.04&lt;/strong> - без графического интерфейса. Но можно скачать обновленный релиз Ubuntu Desktop для ARM - Daily Build по &lt;a href="https://cdimage.ubuntu.com/daily-live/current/">ссылке&lt;/a>.&lt;/p>
&lt;p>Находим &lt;em>64-bit ARM (ARMv8/AArch64) desktop image&lt;/em> и скачиваем
&lt;p class="md__image">
&lt;img
src="img/01-ubuntu-kinetic.png"
id="zoom-default"
alt="ARMv8/AArch64"
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;h3 id="виртуальная-машина">Виртуальная машина&lt;/h3>
&lt;p>В качестве виртуальной машины для установки RHEL 9 использую бесплатную &lt;a href="https://mac.getutm.app/">виртуальную машину UTM&lt;/a>. Установить можно с помощью &lt;a href="../mac-setup-development/#homebrew">Homebrew&lt;/a>, выполнив команду &lt;code>brew install --cask utm&lt;/code>.&lt;/p>
&lt;h2 id="установка-ubuntu-desktop">Установка Ubuntu Desktop&lt;/h2>
&lt;h3 id="настройка-виртуальной-машины-utm">Настройка виртуальной машины UTM&lt;/h3>
&lt;p>В UTM нажимаем &lt;code>Create a New Virtual Machine&lt;/code> -&amp;gt; Virtualize
&lt;p class="md__image">
&lt;img
src="img/02.png"
id="zoom-default"
alt="Настройка виртуальной машины UTM"
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;p>Выбираем скачанный образ и нажимаем &lt;code>Continue&lt;/code>, далее оставляем опции по умолчанию
&lt;p class="md__image">
&lt;img
src="img/03.png"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;h3 id="запуск-live-версии">Запуск Live версии&lt;/h3>
&lt;p>Выбираем &lt;em>Try or Install Ubuntu&lt;/em>. Запустится live образ Ubuntu. Такой образ не сохраняет свое состояние после перезагрузки.
&lt;p class="md__image">
&lt;img
src="img/04.png"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;p>Входим под пользователем ubuntu:&lt;/p>
&lt;p>&lt;p class="md__image">
&lt;img
src="img/05.png"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
Видим рабочий стол и можем пользоваться.&lt;/p>
&lt;h3 id="установка">Установка&lt;/h3>
&lt;p>Внизу справа есть ярлык для стандартной установки Ubuntu. Нажимаем и запускаем обычную установку на диск.
&lt;p class="md__image">
&lt;img
src="img/06.png"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;p>Выбираем нужный язык
&lt;p class="md__image">
&lt;img
src="img/07.png"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
Я выбираю минимальную установку, т.к. мне не нужны будут предустановленные игры и прочие приложения. Графический интерфейс, браузер, терминал остается со всеми базовыми настройками.
&lt;p class="md__image">
&lt;img
src="img/08.png"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
Оставляем по умолчанию стирание виртуального диска перед установкой
&lt;p class="md__image">
&lt;img
src="img/09.png"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
Создаем пользователя, под которым будем входить в систему.
&lt;p class="md__image">
&lt;img
src="img/10.png"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
Как только установка закончится, нажимаем &lt;em>Restart&lt;/em>.
&lt;p class="md__image">
&lt;img
src="img/11.png"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
У меня после перезагрузки черный экран. Поэтому я просто закрываю и снова запускаю вирутальную машину.&lt;/p>
&lt;h3 id="вход-в-систему">Вход в систему&lt;/h3>
&lt;p>После запуска системы выбираем *Boot from next volume. Первым по умолчанию будет запуск с вирутального образа, но у нас уже есть система на диске, поэтому выбираем запуск со следующего по очереди диска.
&lt;p class="md__image">
&lt;img
src="img/12.png"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
Входим под своим пользователем
&lt;p class="md__image">
&lt;img
src="img/13.png"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
Система предлагает скачать обновления для системы. Нажимаю установить.
&lt;p class="md__image">
&lt;img
src="img/14.png"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
Теперь можно пользоваться системой и все данные будут сохраняться после перезагрузки.
&lt;p class="md__image">
&lt;img
src="img/15.png"
id="zoom-default"
alt="Kinetic Kudu 22.10"
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;h2 id="ссылки">Ссылки&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://discourse.ubuntu.com/t/kinetic-kudu-release-schedule/27263">Kinetic Kudu Release Schedule&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://cdimage.ubuntu.com/daily-live/current/">Daily Builds&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Как подключить React .jsx в проект на Hugo</title><link>https://romankurnovskii.com/ru/posts/integrate-hugo-react/</link><pubDate>Sun, 19 Jun 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/posts/integrate-hugo-react/</guid><description>&lt;p>Hugo предлагает подключение различных JS библиотек в проект. Такие изменения влекут за собой полное обновление проекта.
Сегодня мы подключим компонент react без внесения больших изменений.&lt;/p>
&lt;p>React - это библиотека. Чтобы она заработала на сайте, необходимо ее подклчюить, а далее воспользоваться внутренними функциями.&lt;/p>
&lt;p>Подключить можно двумя способоами. С помощью подгрузки скрипта с CDN или загрузки пакета в package.json, чтопозволит использовать &lt;code>.jsx&lt;/code>&lt;/p>
&lt;h2 id="packagejson">package.json&lt;/h2>
&lt;p>&lt;strong>План:&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>Импорт пакета в &lt;code>package.json&lt;/code>&lt;/li>
&lt;li>Создание &lt;code>.jsx&lt;/code> скрипта&lt;/li>
&lt;li>Загрузка/build пакета в Hugo&lt;/li>
&lt;/ol>
&lt;h3 id="импорт">Импорт&lt;/h3>
&lt;p>В корне проекта запускаем команду&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>npm i react react-dom
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="создание-jsx-скрипта">Создание jsx скрипта&lt;/h3>
&lt;ol>
&lt;li>В папке с темой &lt;code>assets&lt;/code> создадим файл &lt;code>my-react-script.jsx&lt;/code>&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-jsx" data-lang="jsx">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">import&lt;/span> React from &lt;span style="color:#4070a0">&amp;#39;react&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">import&lt;/span> &lt;span style="color:#666">*&lt;/span> as ReactDOM from &lt;span style="color:#4070a0">&amp;#39;react-dom&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">import&lt;/span> { createRoot } from &lt;span style="color:#4070a0">&amp;#39;react-dom/client&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">const&lt;/span> App &lt;span style="color:#666">=&lt;/span> () =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">function&lt;/span> sayHello () {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> alert(&lt;span style="color:#4070a0">&amp;#39;Hello, World!&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#062873;font-weight:bold">button&lt;/span> &lt;span style="color:#4070a0">onClick&lt;/span>&lt;span style="color:#666">=&lt;/span>{sayHello}&amp;gt;Click me&lt;span style="color:#666">!&lt;/span>&amp;lt;/&lt;span style="color:#062873;font-weight:bold">button&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ReactDOM.render(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> React.createElement(App, &lt;span style="color:#007020;font-weight:bold">null&lt;/span>),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020">document&lt;/span>.getElementById(&lt;span style="color:#4070a0">&amp;#39;root&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">const&lt;/span> container &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#007020">document&lt;/span>.getElementById(&lt;span style="color:#4070a0">&amp;#39;my_render_block&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">const&lt;/span> root &lt;span style="color:#666">=&lt;/span> createRoot(container);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>root.render(&amp;lt;&lt;span style="color:#062873;font-weight:bold">App&lt;/span> /&amp;gt;);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="2">
&lt;li>Добавим блок &lt;code>div&lt;/code> в место в шаблоне для отрисовки react приложения&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-html" data-lang="html">&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#062873;font-weight:bold">div&lt;/span> &lt;span style="color:#4070a0">id&lt;/span>&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#4070a0">&amp;#34;my_render_block&amp;#34;&lt;/span>&amp;gt;&amp;lt;/&lt;span style="color:#062873;font-weight:bold">div&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="подключение-в-hugo">Подключение в HUGO&lt;/h3>
&lt;p>В файле &lt;code>head.html&lt;/code> или другом файте шаблона Hugo импортируем скрипт&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-html" data-lang="html">&lt;span style="display:flex;">&lt;span>{{ with resources.Get &amp;#34;my-react-script.jsx&amp;#34; }}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{{ $options := dict &amp;#34;defines&amp;#34; (dict &amp;#34;process.env.NODE_ENV&amp;#34; &amp;#34;\&amp;#34;development\&amp;#34;&amp;#34; &amp;#34;process.env.BaseURL&amp;#34; (printf `&amp;#34;%s&amp;#34;`
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$.Site.BaseURL)) }}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{{ $script := . | js.Build $options }}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#062873;font-weight:bold">script&lt;/span> &lt;span style="color:#4070a0">src&lt;/span>&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#4070a0">&amp;#34;{{ $script.RelPermalink }}&amp;#34;&lt;/span> &lt;span style="color:#4070a0">defer&lt;/span>&amp;gt;&amp;lt;/&lt;span style="color:#062873;font-weight:bold">script&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{{ end }}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="cdn">CDN&lt;/h2>
&lt;p>Второй способ&lt;/p>
&lt;h3 id="подключение-библиотеки-react">Подключение библиотеки React&lt;/h3>
&lt;p>В проекте Hugo в шаблонах обновим файл head.html. В моем проекте это шаблон, который содержит основные теги &lt;code>html и head&lt;/code>.
Открываем &lt;code>layouts/partials/head.html&lt;/code> и добавляем скрипт в раздел &lt;code>&amp;lt;head&amp;gt;&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-html" data-lang="html">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic">&amp;lt;!-- ... &amp;lt;head&amp;gt; ... --&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic">&amp;lt;!-- Примечание: при деплое на продакшен замените «development.js» на «production.min.js» --&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#062873;font-weight:bold">script&lt;/span> &lt;span style="color:#4070a0">src&lt;/span>&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#4070a0">&amp;#34;https://unpkg.com/react@17/umd/react.development.js&amp;#34;&lt;/span> &lt;span style="color:#4070a0">crossorigin&lt;/span>&amp;gt;&amp;lt;/&lt;span style="color:#062873;font-weight:bold">script&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#062873;font-weight:bold">script&lt;/span> &lt;span style="color:#4070a0">src&lt;/span>&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#4070a0">&amp;#34;https://unpkg.com/react-dom@17/umd/react-dom.development.js&amp;#34;&lt;/span> &lt;span style="color:#4070a0">crossorigin&lt;/span>&amp;gt;&amp;lt;/&lt;span style="color:#062873;font-weight:bold">script&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#60a0b0;font-style:italic">&amp;lt;!-- ... &amp;lt;/head&amp;gt; ... --&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="выбор-места-для-отрисовки-компонента">Выбор места для отрисовки компонента&lt;/h3>
&lt;p>Создадим &lt;code>div&lt;/code> блок в любом шаблоне Hugo, где будем отрисоывать React компонент.
Например файл &lt;code>layouts/partials/footer.html&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-html" data-lang="html">&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#062873;font-weight:bold">div&lt;/span> &lt;span style="color:#4070a0">id&lt;/span>&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#4070a0">&amp;#34;my_react_app&amp;#34;&lt;/span>&amp;gt;&amp;lt;/&lt;span style="color:#062873;font-weight:bold">div&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>React будет искать данный блок и отрисует внутри него компонент&lt;/p>
&lt;h3 id="создание-компонента">Создание компонента&lt;/h3>
&lt;p>Вынесем создание компонента в отдельный &lt;code>js&lt;/code> файл. В Hugo есть директория &lt;strong>static&lt;/strong> в корне проекта. Если нету, то можно создать. Подробнее о &lt;a href="https://gohugo.io/content-management/static-files/">static folder&lt;/a>&lt;/p>
&lt;p>Создадим файл &lt;code>static/js/my_react_component.js&lt;/code> и запишем код:&lt;/p>
&lt;blockquote>
&lt;p>Важно: скрипт должен подключиться в проекте &lt;strong>после&lt;/strong> блока &lt;code>&amp;lt;div id=&amp;quot;my_react_app&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;&lt;/code>&lt;/p>&lt;/blockquote>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">const&lt;/span> e &lt;span style="color:#666">=&lt;/span> React.createElement;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">const&lt;/span> MyCountButton &lt;span style="color:#666">=&lt;/span> () =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">const&lt;/span> [count, setCount] &lt;span style="color:#666">=&lt;/span> React.useState(&lt;span style="color:#40a070">100&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> e(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4070a0">&amp;#39;button&amp;#39;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> { onClick&lt;span style="color:#666">:&lt;/span> () =&amp;gt; setCount(count &lt;span style="color:#666">+&lt;/span> &lt;span style="color:#40a070">1&lt;/span>) },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> count
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> );
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic">// Выведем на экран компонент
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic">// ищем блок my_react_app и отрисовываем внутри него компонент
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic">&lt;/span>ReactDOM.render(React.createElement(MyCountButton), &lt;span style="color:#007020">document&lt;/span>.getElementById(&lt;span style="color:#4070a0">&amp;#34;my_react_app&amp;#34;&lt;/span>));
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="подключение-скрипта-с-react-компонентами">Подключение скрипта с React компонентами&lt;/h3>
&lt;p>Так как скрипт будет искать div &amp;ldquo;my_react_app&amp;rdquo;, данный div блок должен быть загружен &lt;strong>до&lt;/strong> исполнения скрипта. Поэтому в файле &lt;code>layouts/partials/footer.html&lt;/code> добавляем скрипт в конец раздела &lt;code>&amp;lt;body&amp;gt;&lt;/code>:&lt;/p>
&lt;p>&lt;p class="md__image">
&lt;img
src="img/01.png"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;h2 id="пример">Пример&lt;/h2>
&lt;p>Нажми на кнопку: &lt;div id="_react_count_example_" style="display:inline-block" class='inline-block bg-tertiary-bg rounded px-3 py-2 my-2 me-2 hover:text-yalla text-lg' >100&lt;/div>&lt;/p>
&lt;script crossorigin src="https://unpkg.com/react@18/umd/react.production.min.js">&lt;/script>
&lt;script crossorigin src="https://unpkg.com/react-dom@18/umd/react-dom.production.min.js">&lt;/script>
&lt;div id="__react_block_render__">&lt;/div></description></item><item><title>Установка Linux RHEL 9</title><link>https://romankurnovskii.com/ru/posts/howto-install-rhel-9-free/</link><pubDate>Fri, 17 Jun 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/posts/howto-install-rhel-9-free/</guid><description>&lt;p>Red Hat Enterprise Linux 9 (RHEL 9) под кодовым названием Plow стал общедоступным (GA). Компания Red Hat объявила об этом 18 мая 2022 года. Она сменила бета-версию, которая существовала с 3 ноября 2021 года.&lt;/p>
&lt;p>RHEL 9 - это несколько первых релизов в семействе Red Hat. Это первый крупный релиз после приобретения Red Hat компанией IBM в июле 2019 года, а также первая крупная версия после отказа от проекта CentOS в пользу CentOS Stream, который теперь является предшественником RHEL.&lt;/p>
&lt;p>RHEL 9 является последней основной версией RHEL и поставляется с ядром 5.14, множеством новых пакетов программного обеспечения и массой усовершенствований. В ней особое внимание уделяется безопасности, стабильности, гибкости и надежности.&lt;/p>
&lt;h2 id="описание">Описание&lt;/h2>
&lt;p>RHEL 9 поставляется с новыми версиями программного обеспечения, включая Python 3.9. Node.JS 16, GCC 11, Perl 5.32, Ruby 3.0, PHP 8.0 и многие другие.&lt;/p>
&lt;h2 id="подготовка-к-установке">Подготовка к установке&lt;/h2>
&lt;h3 id="регистрация-на-портале-red-hat">Регистрация на портале Red Hat&lt;/h3>
&lt;p>Подписка Red Hat Developer Subscription - это бесплатное предложение программы Red Hat Developer, предназначенное для индивидуальных разработчиков, которые хотят воспользоваться всеми преимуществами Red Hat Enterprise Linux.&lt;/p>
&lt;p>Она дает разработчикам доступ ко всем версиям Red Hat Enterprise Linux, а также к другим продуктам Red Hat, таким как дополнения, обновления программного обеспечения и ошибки безопасности.&lt;/p>
&lt;p>Прежде всего, убедитесь, что у вас есть активная учетная запись Red Hat. Если у вас еще нет учетной записи, перейдите на портал &lt;a href="https://access.redhat.com/">Red Hat Customer Portal&lt;/a>, нажмите на кнопку &amp;ldquo;Регистрация&amp;rdquo; и заполните свои данные для создания учетной записи Red Hat.
&lt;p class="md__image">
&lt;img
src="img/01.png"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;h3 id="загрузка-установочного-образа">Загрузка установочного образа&lt;/h3>
&lt;p>После создания учетной записи Red Hat вы можете приступать к загрузке RHEL 9. Чтобы загрузить Red Hat Enterprise Linux 9 &lt;strong>абсолютно бесплатно&lt;/strong>, зайдите на &lt;a href="https://developers.redhat.com/products/rhel/overview">Red Hat Developer Portal&lt;/a> и войдите в систему, используя учетные данные своей учетной записи.
&lt;p class="md__image">
&lt;img
src="img/01-01.png"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;p>Затем перейдите на страницу &lt;a href="https://developers.redhat.com/products/rhel/download">загрузки RHEL 9&lt;/a> и нажмите на кнопку загрузки, показанную ниже.&lt;/p>
&lt;p>Я использую MacBook M1, поэтому скачиваю образ RHEL 9 для M1 процессора aarch64
&lt;p class="md__image">
&lt;img
src="img/01-02.png"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;h3 id="виртуальная-машина">Виртуальная машина&lt;/h3>
&lt;p>В качестве вирутальной машины для установки RHEL 9 использую бесплатную &lt;a href="https://mac.getutm.app/">виртуальную машину UTM&lt;/a>. Установить можно с помощью &lt;a href="../mac-setup-development/#homebrew">Homebrew&lt;/a>, выполнив команду &lt;code>brew install --cask utm&lt;/code>.&lt;/p>
&lt;h2 id="установка-red-hat-enterprise-linux-9">Установка Red Hat Enterprise Linux 9&lt;/h2>
&lt;h3 id="настройка-виртуальной-машины-utm">Настройка виртуальной машины UTM&lt;/h3>
&lt;p>В UTM нажимаем &lt;code>Create a New Virtual Machine&lt;/code> -&amp;gt; Virtualize
&lt;p class="md__image">
&lt;img
src="img/02-02.png"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;p>Выбираем скачанный образ RHEL 9 и нажимаем &lt;code>Continue&lt;/code>
&lt;p class="md__image">
&lt;img
src="img/02-01.png"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;h3 id="главное-меню">Главное меню&lt;/h3>
&lt;p>&lt;p class="md__image">
&lt;img
src="img/02.png"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;p>Помеченные поля необходимо заполнить&lt;/p>
&lt;p>Создаем Root Password
&lt;p class="md__image">
&lt;img
src="img/03.png"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
&lt;strong>User Creation&lt;/strong>. Создаем пользователя, под которым будет осуществляться вход в систему.
&lt;p class="md__image">
&lt;img
src="img/04.png"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;p>&lt;strong>Connect to Red Hat&lt;/strong>. Здесь используем учетную запись, созданную выше.&lt;/p>
&lt;p>Вводим данные аккаунта, нажимаем Register
&lt;p class="md__image">
&lt;img
src="img/06.png"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
Нажимаем Done&lt;/p>
&lt;p>В разделе &lt;strong>Installation Destination&lt;/strong> выбираем диск по умолчанию&lt;/p>
&lt;p>Теперь можем продолижть установку. На главном экране появилась кнопка &lt;em>&lt;strong>Begin installation&lt;/strong>&lt;/em>&lt;br>
&lt;p class="md__image">
&lt;img
src="img/05.png"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;p>После завершения установки перезагружаем систему.
&lt;p class="md__image">
&lt;img
src="img/02-03.png"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
Иногда после перезагрузки запускается загрузка с установочного образа опять. Неоьбходимо либо отключить диск в настройка вирутальной машины либо перезагрузить UTM.&lt;/p>
&lt;h2 id="запуск-red-hat-enterprise-linux-9">Запуск Red Hat Enterprise Linux 9&lt;/h2>
&lt;p>&lt;p class="md__image">
&lt;img
src="img/07.png"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;p>Вводим пароль и видим рабочий стол RHEL 9
&lt;p class="md__image">
&lt;img
src="img/07-01.png"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;p>Для доступа к приложениям нажимаем кнопку &lt;strong>Activities&lt;/strong> в верхнем левом углу&lt;/p>
&lt;h2 id="настройка-red-hat-enterprise-linux-9">Настройка Red Hat Enterprise Linux 9&lt;/h2>
&lt;h3 id="проверка-пользователя-root">Проверка пользователя ROOT&lt;/h3>
&lt;p>В системе Linux пользователи относятся к разным группам, у которых есть определенные права. Если в процессе установки мы не поставили галку сделать пользователя администратором, то по умолчанию он не сможет устанавливать некоторые системные программы.&lt;/p>
&lt;p>Выходим из системы и заходим в систему под пользователем root (тем самым, которого создавали ранее на главном экране). Нажимаем &lt;em>&lt;strong>Log out&lt;/strong>&lt;/em>
&lt;p class="md__image">
&lt;img
src="img/07-03.png"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;p>Теперь входим под &lt;strong>root&lt;/strong>. Пользователя может не быть в списке. Жмем &lt;strong>Not listed&lt;/strong> и вводим данные аккаунта.
&lt;p class="md__image">
&lt;img
src="img/07-04.png"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;p>Открываем терминал и проверяем
&lt;p class="md__image">
&lt;img
src="img/07-05.png"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;h3 id="настройка-параметров-системы">Настройка параметров системы&lt;/h3>
&lt;h4 id="кнопки-сворачивания-приложения">Кнопки сворачивания приложения&lt;/h4>
&lt;p>Первое, что кажется непривычным при использовании GUI, отсутствие кнопок сворачивания окон
&lt;p class="md__image">
&lt;img
src="img/07-02.png"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;p>Устанавливаем необходимый пакет&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>yum install gnome-tweaks -y
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;p class="md__image">
&lt;img
src="img/07-06.png"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
После установки появится приложение Tweaks. Найдем его через поиск.
&lt;p class="md__image">
&lt;img
src="img/07-07.png"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
В приложении множество и других настроек. Мы отобразим кнопки сворачивания приложений.&lt;/p>
&lt;p>Идем в раздел &lt;strong>Windows titlebars&lt;/strong> и включаем параметры Maximize, Minimize
&lt;p class="md__image">
&lt;img
src="img/07-08.png"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;h4 id="доступ-пользователю-на-установку-приложений">Доступ пользователю на установку приложений&lt;/h4>
&lt;p>Чтобы постоянно не переключаться на root пользователя для устновки приложений, мы можем предоставить обычному пользвоателю доступ к установке приложений.
Действия продолжаем делать под пользователем &lt;em>&lt;strong>root&lt;/strong>&lt;/em>.
Открываем файл /etc/sudoers и добавляем пользователя&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>sudo vi /etc/sudoers
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Добавляем в конец файла данные пользователя. Имя моего пользователя: &lt;em>&lt;strong>rhel-user&lt;/strong>&lt;/em>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>rhel-user ALL= NOPASSWD: /usr/sbin/synaptic, /usr/bin/software-center, /usr/bin/apt-get, /usr/bin/dnf
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;p class="md__image">
&lt;img
src="img/07-09.png"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;p>Установим &lt;em>&lt;strong>Visual Studio Code&lt;/strong>&lt;/em> под обычным пользователем
Установка состоит из следующих шагов:&lt;/p>
&lt;ol>
&lt;li>добавление нужного репозитория. Права на добавление репозитория (изменение файлов в директории по прежнему только у &lt;em>&lt;strong>root&lt;/strong>&lt;/em> пользователя)&lt;/li>
&lt;li>загрузка и Установка&lt;/li>
&lt;/ol>
&lt;p>Первый шаг делаем под пользователем root
Идем на сайт &lt;a href="https://code.visualstudio.com/docs/setup/linux">https://code.visualstudio.com/docs/setup/linux&lt;/a>&lt;/p>
&lt;p>Копируем код и запускаем в терминале&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>sudo rpm --import https://packages.microsoft.com/keys/microsoft.asc
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo sh -c &amp;#39;echo -e &amp;#34;[code]\nname=Visual Studio Code\nbaseurl=https://packages.microsoft.com/yumrepos/vscode\nenabled=1\ngpgcheck=1\ngpgkey=https://packages.microsoft.com/keys/microsoft.asc&amp;#34; &amp;gt; /etc/yum.repos.d/vscode.repo&amp;#39;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>Переключаемся на пользователя &lt;em>&lt;strong>rhel-user&lt;/strong>&lt;/em>. Это можно сделать и в терминале.&lt;/li>
&lt;li>Обновим репозитории&lt;/li>
&lt;li>Установим VSCode&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>su rhel-user
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dnf check-update
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo dnf install code
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;p class="md__image">
&lt;img
src="img/07-10.png"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
&lt;p class="md__image">
&lt;img
src="img/07-11.png"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
&lt;p class="md__image">
&lt;img
src="img/07-12.png"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;h2 id="ссылки">Ссылки&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://developers.redhat.com/products/rhel/getting-started">https://developers.redhat.com/products/rhel/getting-started&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.redhat.com/sysadmin/install-linux-rhel-9">https://www.redhat.com/sysadmin/install-linux-rhel-9&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Сниппеты Python</title><link>https://romankurnovskii.com/ru/posts/python-snippets/</link><pubDate>Thu, 16 Jun 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/posts/python-snippets/</guid><description>&lt;h3 id="дата">Дата&lt;/h3>
&lt;h4 id="текущая">Текущая&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">import&lt;/span> &lt;span style="color:#0e84b5;font-weight:bold">datetime&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>x &lt;span style="color:#666">=&lt;/span> datetime&lt;span style="color:#666">.&lt;/span>datetime&lt;span style="color:#666">.&lt;/span>now() &lt;span style="color:#60a0b0;font-style:italic"># 2023-08-23 21:41:24.871910&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="формат-yyyy-mm-dd">Формат &lt;code>YYYY-MM-DD&lt;/code>&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">import&lt;/span> &lt;span style="color:#0e84b5;font-weight:bold">datetime&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>x &lt;span style="color:#666">=&lt;/span> datetime&lt;span style="color:#666">.&lt;/span>datetime&lt;span style="color:#666">.&lt;/span>now()&lt;span style="color:#666">.&lt;/span>strftime(&lt;span style="color:#4070a0">&amp;#34;%Y-%m-&lt;/span>&lt;span style="color:#70a0d0">%d&lt;/span>&lt;span style="color:#4070a0">&amp;#34;&lt;/span>) &lt;span style="color:#60a0b0;font-style:italic"># 2023-08-23&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="разница-в-секундах">Разница в секундах&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">import&lt;/span> &lt;span style="color:#0e84b5;font-weight:bold">datetime&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>date1 &lt;span style="color:#666">=&lt;/span> datetime&lt;span style="color:#666">.&lt;/span>datetime(&lt;span style="color:#40a070">2023&lt;/span>, &lt;span style="color:#40a070">3&lt;/span>, &lt;span style="color:#40a070">26&lt;/span>, &lt;span style="color:#40a070">0&lt;/span>, &lt;span style="color:#40a070">0&lt;/span>, &lt;span style="color:#40a070">0&lt;/span>) &lt;span style="color:#60a0b0;font-style:italic"># March 26, 2023 at midnight&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>date2 &lt;span style="color:#666">=&lt;/span> datetime&lt;span style="color:#666">.&lt;/span>datetime(&lt;span style="color:#40a070">2023&lt;/span>, &lt;span style="color:#40a070">3&lt;/span>, &lt;span style="color:#40a070">27&lt;/span>, &lt;span style="color:#40a070">0&lt;/span>, &lt;span style="color:#40a070">0&lt;/span>, &lt;span style="color:#40a070">0&lt;/span>) &lt;span style="color:#60a0b0;font-style:italic"># March 27, 2023 at midnight&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>difference_in_seconds &lt;span style="color:#666">=&lt;/span> (date2 &lt;span style="color:#666">-&lt;/span> date1)&lt;span style="color:#666">.&lt;/span>total_seconds()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">if&lt;/span> difference_in_seconds &lt;span style="color:#666">&amp;gt;&lt;/span> &lt;span style="color:#40a070">0&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020">print&lt;/span>(&lt;span style="color:#4070a0">&amp;#34;Date2 is later than Date1 by&amp;#34;&lt;/span>, difference_in_seconds, &lt;span style="color:#4070a0">&amp;#34;seconds.&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">elif&lt;/span> difference_in_seconds &lt;span style="color:#666">&amp;lt;&lt;/span> &lt;span style="color:#40a070">0&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020">print&lt;/span>(&lt;span style="color:#4070a0">&amp;#34;Date1 is later than Date2 by&amp;#34;&lt;/span>, &lt;span style="color:#007020">abs&lt;/span>(difference_in_seconds), &lt;span style="color:#4070a0">&amp;#34;seconds.&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">else&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020">print&lt;/span>(&lt;span style="color:#4070a0">&amp;#34;Date1 and Date2 are the same.&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">import&lt;/span> &lt;span style="color:#0e84b5;font-weight:bold">time&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># create two datetime objects to compare&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>date1 &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#4070a0">&amp;#34;2023-04-01 12:00:00&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>date2 &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#4070a0">&amp;#34;2023-04-02 12:00:00&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># convert the dates to seconds since epoch using time.mktime()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>seconds1 &lt;span style="color:#666">=&lt;/span> time&lt;span style="color:#666">.&lt;/span>mktime(time&lt;span style="color:#666">.&lt;/span>strptime(date1, &lt;span style="color:#4070a0">&amp;#34;%Y-%m-&lt;/span>&lt;span style="color:#70a0d0">%d&lt;/span>&lt;span style="color:#4070a0"> %H:%M:%S&amp;#34;&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>seconds2 &lt;span style="color:#666">=&lt;/span> time&lt;span style="color:#666">.&lt;/span>mktime(time&lt;span style="color:#666">.&lt;/span>strptime(date2, &lt;span style="color:#4070a0">&amp;#34;%Y-%m-&lt;/span>&lt;span style="color:#70a0d0">%d&lt;/span>&lt;span style="color:#4070a0"> %H:%M:%S&amp;#34;&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># compare the two dates in seconds&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">if&lt;/span> seconds1 &lt;span style="color:#666">&amp;lt;&lt;/span> seconds2:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020">print&lt;/span>(&lt;span style="color:#4070a0">&amp;#34;date1 is earlier than date2&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">elif&lt;/span> seconds1 &lt;span style="color:#666">&amp;gt;&lt;/span> seconds2:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020">print&lt;/span>(&lt;span style="color:#4070a0">&amp;#34;date1 is later than date2&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">else&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020">print&lt;/span>(&lt;span style="color:#4070a0">&amp;#34;date1 and date2 are the same&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="создать-папку">Создать папку&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">import&lt;/span> &lt;span style="color:#0e84b5;font-weight:bold">os&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">if&lt;/span> &lt;span style="color:#007020;font-weight:bold">not&lt;/span> os&lt;span style="color:#666">.&lt;/span>path&lt;span style="color:#666">.&lt;/span>exists(name):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> os&lt;span style="color:#666">.&lt;/span>makedirs(name)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="самое-часто-встречаемое-значение-в-списке">Самое часто встречаемое значение в списке&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">import&lt;/span> &lt;span style="color:#0e84b5;font-weight:bold">collections&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>x &lt;span style="color:#666">=&lt;/span> [&lt;span style="color:#40a070">1&lt;/span>, &lt;span style="color:#40a070">2&lt;/span>, &lt;span style="color:#40a070">7&lt;/span>, &lt;span style="color:#40a070">4&lt;/span>, &lt;span style="color:#40a070">5&lt;/span>, &lt;span style="color:#40a070">6&lt;/span>, &lt;span style="color:#40a070">7&lt;/span>, &lt;span style="color:#40a070">10&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020">print&lt;/span>(collections&lt;span style="color:#666">.&lt;/span>Counter(x)&lt;span style="color:#666">.&lt;/span>most_common(&lt;span style="color:#40a070">1&lt;/span>)[&lt;span style="color:#40a070">0&lt;/span>][&lt;span style="color:#40a070">0&lt;/span>]) &lt;span style="color:#60a0b0;font-style:italic"># 7&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">def&lt;/span> &lt;span style="color:#06287e">most_freq&lt;/span>(&lt;span style="color:#007020">list&lt;/span>):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> &lt;span style="color:#007020">max&lt;/span>(&lt;span style="color:#007020">set&lt;/span>(&lt;span style="color:#007020">list&lt;/span>), key&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#007020">list&lt;/span>&lt;span style="color:#666">.&lt;/span>count)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>test &lt;span style="color:#666">=&lt;/span> [&lt;span style="color:#40a070">10&lt;/span>, &lt;span style="color:#40a070">10&lt;/span>, &lt;span style="color:#40a070">20&lt;/span>, &lt;span style="color:#40a070">20&lt;/span>, &lt;span style="color:#40a070">10&lt;/span>, &lt;span style="color:#40a070">30&lt;/span>, &lt;span style="color:#40a070">30&lt;/span>, &lt;span style="color:#40a070">30&lt;/span>, &lt;span style="color:#40a070">20&lt;/span>, &lt;span style="color:#40a070">10&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020">print&lt;/span>(most_freq(test)) &lt;span style="color:#60a0b0;font-style:italic"># 10&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="случайное-целое-число">Случайное целое число&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">import&lt;/span> &lt;span style="color:#0e84b5;font-weight:bold">random&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>x &lt;span style="color:#666">=&lt;/span> random&lt;span style="color:#666">.&lt;/span>randint(&lt;span style="color:#40a070">1&lt;/span>, &lt;span style="color:#40a070">10&lt;/span>) &lt;span style="color:#60a0b0;font-style:italic"># 9&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="одновременная-проверка-нескольких-флагов-в-python">Одновременная проверка нескольких флагов в Python&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>x, y, z &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#40a070">0&lt;/span>, &lt;span style="color:#40a070">1&lt;/span>, &lt;span style="color:#40a070">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">if&lt;/span> x &lt;span style="color:#666">==&lt;/span> &lt;span style="color:#40a070">1&lt;/span> &lt;span style="color:#007020;font-weight:bold">or&lt;/span> y &lt;span style="color:#666">==&lt;/span> &lt;span style="color:#40a070">1&lt;/span> &lt;span style="color:#007020;font-weight:bold">or&lt;/span> z &lt;span style="color:#666">==&lt;/span> &lt;span style="color:#40a070">1&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020">print&lt;/span>(&lt;span style="color:#4070a0">&amp;#39;passed&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">if&lt;/span> &lt;span style="color:#40a070">1&lt;/span> &lt;span style="color:#007020;font-weight:bold">in&lt;/span> (x, y, z):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020">print&lt;/span>(&lt;span style="color:#4070a0">&amp;#39;passed&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># These only test for truthiness:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">if&lt;/span> x &lt;span style="color:#007020;font-weight:bold">or&lt;/span> y &lt;span style="color:#007020;font-weight:bold">or&lt;/span> z:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020">print&lt;/span>(&lt;span style="color:#4070a0">&amp;#39;passed&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">if&lt;/span> &lt;span style="color:#007020">any&lt;/span>((x, y, z)):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020">print&lt;/span>(&lt;span style="color:#4070a0">&amp;#39;passed&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="pdf---audio">Pdf -&amp;gt; Audio&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">import&lt;/span> &lt;span style="color:#0e84b5;font-weight:bold">PyPDF2&lt;/span>&lt;span style="color:#666">,&lt;/span> &lt;span style="color:#0e84b5;font-weight:bold">pyttsx3&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># PDF file&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>path &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#007020">open&lt;/span>(&lt;span style="color:#4070a0">&amp;#39;clcoding.pdf&amp;#39;&lt;/span>, &lt;span style="color:#4070a0">&amp;#39;rb&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># creating a PdfFileReader object&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>pdfReader &lt;span style="color:#666">=&lt;/span> PyPDF2&lt;span style="color:#666">.&lt;/span>PdfFileReader(path)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Get an engine instance for the speech synthesis&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>speak &lt;span style="color:#666">=&lt;/span> pyttsx3&lt;span style="color:#666">.&lt;/span>init()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">for&lt;/span> pages &lt;span style="color:#007020;font-weight:bold">in&lt;/span> &lt;span style="color:#007020">range&lt;/span>(pdfReader&lt;span style="color:#666">.&lt;/span>numPages):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> text &lt;span style="color:#666">=&lt;/span> pdfReader&lt;span style="color:#666">.&lt;/span>getPage(pages)&lt;span style="color:#666">.&lt;/span>extractText()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> speak&lt;span style="color:#666">.&lt;/span>say(text)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> speak&lt;span style="color:#666">.&lt;/span>runAndWait()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>speak&lt;span style="color:#666">.&lt;/span>stop()
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="полный-обзор">Полный обзор&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Однострочные комментарии начинаются с символа решётки.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4070a0">&amp;#34;&amp;#34;&amp;#34; Многострочный текст может быть
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4070a0"> записан, используя 3 знака &amp;#34; и обычно используется
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4070a0"> в качестве встроенной документации
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4070a0">&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic">####################################################&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic">## 1. Примитивные типы данных и операторы&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic">####################################################&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># У вас есть числа&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#40a070">3&lt;/span> &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; 3&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Математика работает вполне ожидаемо&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#40a070">1&lt;/span> &lt;span style="color:#666">+&lt;/span> &lt;span style="color:#40a070">1&lt;/span> &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; 2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#40a070">8&lt;/span> &lt;span style="color:#666">-&lt;/span> &lt;span style="color:#40a070">1&lt;/span> &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; 7&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#40a070">10&lt;/span> &lt;span style="color:#666">*&lt;/span> &lt;span style="color:#40a070">2&lt;/span> &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; 20&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#40a070">35&lt;/span> &lt;span style="color:#666">/&lt;/span> &lt;span style="color:#40a070">5&lt;/span> &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; 7.0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Результат целочисленного деления округляется в меньшую сторону&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># как для положительных, так и для отрицательных чисел.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#40a070">5&lt;/span> &lt;span style="color:#666">//&lt;/span> &lt;span style="color:#40a070">3&lt;/span> &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; 1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#666">-&lt;/span>&lt;span style="color:#40a070">5&lt;/span> &lt;span style="color:#666">//&lt;/span> &lt;span style="color:#40a070">3&lt;/span> &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; -2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#40a070">5.0&lt;/span> &lt;span style="color:#666">//&lt;/span> &lt;span style="color:#40a070">3.0&lt;/span> &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; 1.0 # работает и для чисел с плавающей запятой&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#666">-&lt;/span>&lt;span style="color:#40a070">5.0&lt;/span> &lt;span style="color:#666">//&lt;/span> &lt;span style="color:#40a070">3.0&lt;/span> &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; -2.0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># # Результат деления возвращает число с плавающей запятой&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#40a070">10.0&lt;/span> &lt;span style="color:#666">/&lt;/span> &lt;span style="color:#40a070">3&lt;/span> &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; 3.3333333333333335&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Остаток от деления&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#40a070">7&lt;/span> &lt;span style="color:#666">%&lt;/span> &lt;span style="color:#40a070">3&lt;/span> &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; 1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Возведение в степень&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#40a070">2&lt;/span>&lt;span style="color:#666">**&lt;/span>&lt;span style="color:#40a070">3&lt;/span> &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; 8&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Приоритет операций указывается скобками&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#40a070">1&lt;/span> &lt;span style="color:#666">+&lt;/span> &lt;span style="color:#40a070">3&lt;/span> &lt;span style="color:#666">*&lt;/span> &lt;span style="color:#40a070">2&lt;/span> &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; 7&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>(&lt;span style="color:#40a070">1&lt;/span> &lt;span style="color:#666">+&lt;/span> &lt;span style="color:#40a070">3&lt;/span>) &lt;span style="color:#666">*&lt;/span> &lt;span style="color:#40a070">2&lt;/span> &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; 8&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Булевы значения - примитивы (Обратите внимание на заглавную букву)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">True&lt;/span> &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; True&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">False&lt;/span> &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; False&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Для отрицания используется ключевое слово not&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">not&lt;/span> &lt;span style="color:#007020;font-weight:bold">True&lt;/span> &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; False&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">not&lt;/span> &lt;span style="color:#007020;font-weight:bold">False&lt;/span> &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; True&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Булевы операторы&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Обратите внимание: ключевые слова &amp;#34;and&amp;#34; и &amp;#34;or&amp;#34; чувствительны к регистру букв&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">True&lt;/span> &lt;span style="color:#007020;font-weight:bold">and&lt;/span> &lt;span style="color:#007020;font-weight:bold">False&lt;/span> &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; False&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">False&lt;/span> &lt;span style="color:#007020;font-weight:bold">or&lt;/span> &lt;span style="color:#007020;font-weight:bold">True&lt;/span> &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; True&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># True и False на самом деле 1 и 0, но с разными ключевыми словами&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">True&lt;/span> &lt;span style="color:#666">+&lt;/span> &lt;span style="color:#007020;font-weight:bold">True&lt;/span> &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; 2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">True&lt;/span> &lt;span style="color:#666">*&lt;/span> &lt;span style="color:#40a070">8&lt;/span> &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; 8&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">False&lt;/span> &lt;span style="color:#666">-&lt;/span> &lt;span style="color:#40a070">5&lt;/span> &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; -5&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Операторы сравнения обращают внимание на числовое значение True и False&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#40a070">0&lt;/span> &lt;span style="color:#666">==&lt;/span> &lt;span style="color:#007020;font-weight:bold">False&lt;/span> &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; True&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#40a070">1&lt;/span> &lt;span style="color:#666">==&lt;/span> &lt;span style="color:#007020;font-weight:bold">True&lt;/span> &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; True&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#40a070">2&lt;/span> &lt;span style="color:#666">==&lt;/span> &lt;span style="color:#007020;font-weight:bold">True&lt;/span> &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; False&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#666">-&lt;/span>&lt;span style="color:#40a070">5&lt;/span> &lt;span style="color:#666">!=&lt;/span> &lt;span style="color:#007020;font-weight:bold">False&lt;/span> &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; True&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Использование булевых логических операторов на типах int превращает их в булевы значения, но возвращаются оригинальные значения&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Не путайте с bool(ints) и bitwise and/or (&amp;amp;,|)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020">bool&lt;/span>(&lt;span style="color:#40a070">0&lt;/span>) &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; False&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020">bool&lt;/span>(&lt;span style="color:#40a070">4&lt;/span>) &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; True&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020">bool&lt;/span>(&lt;span style="color:#666">-&lt;/span>&lt;span style="color:#40a070">6&lt;/span>) &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; True&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#40a070">0&lt;/span> &lt;span style="color:#007020;font-weight:bold">and&lt;/span> &lt;span style="color:#40a070">2&lt;/span> &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; 0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#666">-&lt;/span>&lt;span style="color:#40a070">5&lt;/span> &lt;span style="color:#007020;font-weight:bold">or&lt;/span> &lt;span style="color:#40a070">0&lt;/span> &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; -5&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Равенство — это ==&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#40a070">1&lt;/span> &lt;span style="color:#666">==&lt;/span> &lt;span style="color:#40a070">1&lt;/span> &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; True&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#40a070">2&lt;/span> &lt;span style="color:#666">==&lt;/span> &lt;span style="color:#40a070">1&lt;/span> &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; False&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Неравенство — это !=&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#40a070">1&lt;/span> &lt;span style="color:#666">!=&lt;/span> &lt;span style="color:#40a070">1&lt;/span> &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; False&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#40a070">2&lt;/span> &lt;span style="color:#666">!=&lt;/span> &lt;span style="color:#40a070">1&lt;/span> &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; True&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Ещё немного сравнений&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#40a070">1&lt;/span> &lt;span style="color:#666">&amp;lt;&lt;/span> &lt;span style="color:#40a070">10&lt;/span> &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; True&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#40a070">1&lt;/span> &lt;span style="color:#666">&amp;gt;&lt;/span> &lt;span style="color:#40a070">10&lt;/span> &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; False&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#40a070">2&lt;/span> &lt;span style="color:#666">&amp;lt;=&lt;/span> &lt;span style="color:#40a070">2&lt;/span> &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; True&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#40a070">2&lt;/span> &lt;span style="color:#666">&amp;gt;=&lt;/span> &lt;span style="color:#40a070">2&lt;/span> &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; True&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Проверка, находится ли значение в диапазоне&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#40a070">1&lt;/span> &lt;span style="color:#666">&amp;lt;&lt;/span> &lt;span style="color:#40a070">2&lt;/span> &lt;span style="color:#007020;font-weight:bold">and&lt;/span> &lt;span style="color:#40a070">2&lt;/span> &lt;span style="color:#666">&amp;lt;&lt;/span> &lt;span style="color:#40a070">3&lt;/span> &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; True&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#40a070">2&lt;/span> &lt;span style="color:#666">&amp;lt;&lt;/span> &lt;span style="color:#40a070">3&lt;/span> &lt;span style="color:#007020;font-weight:bold">and&lt;/span> &lt;span style="color:#40a070">3&lt;/span> &lt;span style="color:#666">&amp;lt;&lt;/span> &lt;span style="color:#40a070">2&lt;/span> &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; False&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Сравнения могут быть записаны цепочкой&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#40a070">1&lt;/span> &lt;span style="color:#666">&amp;lt;&lt;/span> &lt;span style="color:#40a070">2&lt;/span> &lt;span style="color:#666">&amp;lt;&lt;/span> &lt;span style="color:#40a070">3&lt;/span> &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; True&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#40a070">2&lt;/span> &lt;span style="color:#666">&amp;lt;&lt;/span> &lt;span style="color:#40a070">3&lt;/span> &lt;span style="color:#666">&amp;lt;&lt;/span> &lt;span style="color:#40a070">2&lt;/span> &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; False&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># (is vs. ==) ключевое слово is проверяет, относятся ли две переменные к одному и тому же объекту, но == проверяет если указанные объекты имеют одинаковые значения.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>a &lt;span style="color:#666">=&lt;/span> [&lt;span style="color:#40a070">1&lt;/span>, &lt;span style="color:#40a070">2&lt;/span>, &lt;span style="color:#40a070">3&lt;/span>, &lt;span style="color:#40a070">4&lt;/span>] &lt;span style="color:#60a0b0;font-style:italic"># a указывает на новый список, [1, 2, 3, 4]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>b &lt;span style="color:#666">=&lt;/span> a &lt;span style="color:#60a0b0;font-style:italic"># b указывает на то, что указывает a&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>b &lt;span style="color:#007020;font-weight:bold">is&lt;/span> a &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; True, a и b относятся к одному и тому же объекту&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>b &lt;span style="color:#666">==&lt;/span> a &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; True, Объекты a и b равны&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>b &lt;span style="color:#666">=&lt;/span> [&lt;span style="color:#40a070">1&lt;/span>, &lt;span style="color:#40a070">2&lt;/span>, &lt;span style="color:#40a070">3&lt;/span>, &lt;span style="color:#40a070">4&lt;/span>] &lt;span style="color:#60a0b0;font-style:italic"># b указывает на новый список, [1, 2, 3, 4]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>b &lt;span style="color:#007020;font-weight:bold">is&lt;/span> a &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; False, a и b не относятся к одному и тому же объекту&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>b &lt;span style="color:#666">==&lt;/span> a &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; True, Объекты a и b равны&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Строки определяются символом &amp;#34; или &amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4070a0">&amp;#34;Это строка.&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4070a0">&amp;#39;Это тоже строка.&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># И строки тоже могут складываться! Хотя лучше не злоупотребляйте этим.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4070a0">&amp;#34;Привет &amp;#34;&lt;/span> &lt;span style="color:#666">+&lt;/span> &lt;span style="color:#4070a0">&amp;#34;мир!&amp;#34;&lt;/span> &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; &amp;#34;Привет мир!&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Строки (но не переменные) могут быть объединены без использования &amp;#39;+&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4070a0">&amp;#34;Привет &amp;#34;&lt;/span> &lt;span style="color:#4070a0">&amp;#34;мир!&amp;#34;&lt;/span> &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; &amp;#34;Привет мир!&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Со строкой можно работать, как со списком символов&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4070a0">&amp;#34;Привет мир!&amp;#34;&lt;/span>[&lt;span style="color:#40a070">0&lt;/span>] &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; &amp;#39;П&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Вы можете найти длину строки&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020">len&lt;/span>(&lt;span style="color:#4070a0">&amp;#34;Это строка&amp;#34;&lt;/span>) &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; 10&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Вы также можете форматировать, используя f-строки (в Python 3.6+)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>name &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#4070a0">&amp;#34;Рейко&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4070a0">f&lt;/span>&lt;span style="color:#4070a0">&amp;#34;Она сказала, что ее зовут &lt;/span>&lt;span style="color:#70a0d0">{&lt;/span>name&lt;span style="color:#70a0d0">}&lt;/span>&lt;span style="color:#4070a0">.&amp;#34;&lt;/span> &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; &amp;#34;Она сказала, что ее зовут Рейко&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Вы можете поместить любой оператор Python в фигурные скобки, и он будет выведен в строке.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4070a0">f&lt;/span>&lt;span style="color:#4070a0">&amp;#34;&lt;/span>&lt;span style="color:#70a0d0">{&lt;/span>name&lt;span style="color:#70a0d0">}&lt;/span>&lt;span style="color:#4070a0"> состоит из &lt;/span>&lt;span style="color:#70a0d0">{&lt;/span>&lt;span style="color:#007020">len&lt;/span>(name)&lt;span style="color:#70a0d0">}&lt;/span>&lt;span style="color:#4070a0"> символов.&amp;#34;&lt;/span> &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; &amp;#34;Рэйко состоит из 5 символов.&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># None является объектом&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">None&lt;/span> &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; None&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Не используйте оператор равенства &amp;#34;==&amp;#34; для сравнения&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># объектов с None. Используйте для этого &amp;#34;is&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4070a0">&amp;#34;etc&amp;#34;&lt;/span> &lt;span style="color:#007020;font-weight:bold">is&lt;/span> &lt;span style="color:#007020;font-weight:bold">None&lt;/span> &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; False&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">None&lt;/span> &lt;span style="color:#007020;font-weight:bold">is&lt;/span> &lt;span style="color:#007020;font-weight:bold">None&lt;/span> &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; True&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># None, 0 и пустые строки/списки/словари/кортежи приводятся к False.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Все остальные значения равны True&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020">bool&lt;/span>(&lt;span style="color:#40a070">0&lt;/span>) &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; False&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020">bool&lt;/span>(&lt;span style="color:#4070a0">&amp;#34;&amp;#34;&lt;/span>) &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; False&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020">bool&lt;/span>([]) &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; False&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020">bool&lt;/span>({}) &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; False&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020">bool&lt;/span>(()) &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; False&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic">####################################################&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic">## 2. Переменные и Коллекции&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic">####################################################&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># В Python есть функция Print&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020">print&lt;/span>(&lt;span style="color:#4070a0">&amp;#34;Я Python. Приятно познакомиться!&amp;#34;&lt;/span>) &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; Я Python. Приятно познакомиться!&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># По умолчанию функция, print() также выводит новую строку в конце.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Используйте необязательный аргумент end, чтобы изменить последнюю строку.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020">print&lt;/span>(&lt;span style="color:#4070a0">&amp;#34;Привет мир&amp;#34;&lt;/span>, end&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#4070a0">&amp;#34;!&amp;#34;&lt;/span>) &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; Привет мир!&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Простой способ получить входные данные из консоли&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>input_string_var &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#007020">input&lt;/span>(&lt;span style="color:#4070a0">&amp;#34;Введите данные: &amp;#34;&lt;/span>) &lt;span style="color:#60a0b0;font-style:italic"># Возвращает данные в виде строки&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Примечание: в более ранних версиях Python метод inp() назывался raw_input()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Объявлять переменные перед инициализацией не нужно.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># По соглашению используется нижний_регистр_с_подчёркиваниями&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>some_var &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#40a070">5&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>some_var &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; 5&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># При попытке доступа к неинициализированной переменной выбрасывается исключение.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Об исключениях см. раздел &amp;#34;Поток управления и итерируемые объекты&amp;#34;.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>some_unknown_var &lt;span style="color:#60a0b0;font-style:italic"># Выбрасывает ошибку NameError&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># if можно использовать как выражение&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Эквивалент тернарного оператора &amp;#39;?:&amp;#39; в C&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4070a0">&amp;#34;да!&amp;#34;&lt;/span> &lt;span style="color:#007020;font-weight:bold">if&lt;/span> &lt;span style="color:#40a070">0&lt;/span> &lt;span style="color:#666">&amp;gt;&lt;/span> &lt;span style="color:#40a070">1&lt;/span> &lt;span style="color:#007020;font-weight:bold">else&lt;/span> &lt;span style="color:#4070a0">&amp;#34;нет!&amp;#34;&lt;/span> &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; &amp;#34;нет!&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Списки хранят последовательности&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>li &lt;span style="color:#666">=&lt;/span> []
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Можно сразу начать с заполненного списка&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>other_li &lt;span style="color:#666">=&lt;/span> [&lt;span style="color:#40a070">4&lt;/span>, &lt;span style="color:#40a070">5&lt;/span>, &lt;span style="color:#40a070">6&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Объекты добавляются в конец списка методом append()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>li&lt;span style="color:#666">.&lt;/span>append(&lt;span style="color:#40a070">1&lt;/span>) &lt;span style="color:#60a0b0;font-style:italic"># [1]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>li&lt;span style="color:#666">.&lt;/span>append(&lt;span style="color:#40a070">2&lt;/span>) &lt;span style="color:#60a0b0;font-style:italic"># [1, 2]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>li&lt;span style="color:#666">.&lt;/span>append(&lt;span style="color:#40a070">4&lt;/span>) &lt;span style="color:#60a0b0;font-style:italic"># [1, 2, 4]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>li&lt;span style="color:#666">.&lt;/span>append(&lt;span style="color:#40a070">3&lt;/span>) &lt;span style="color:#60a0b0;font-style:italic"># [1, 2, 4, 3]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># И удаляются с конца методом pop()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>li&lt;span style="color:#666">.&lt;/span>pop() &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; возвращает 3 и li становится равен [1, 2, 4]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Положим элемент обратно&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>li&lt;span style="color:#666">.&lt;/span>append(&lt;span style="color:#40a070">3&lt;/span>) &lt;span style="color:#60a0b0;font-style:italic"># [1, 2, 4, 3].&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Обращайтесь со списком, как с обычным массивом&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>li[&lt;span style="color:#40a070">0&lt;/span>] &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; 1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Обратимся к последнему элементу&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>li[&lt;span style="color:#666">-&lt;/span>&lt;span style="color:#40a070">1&lt;/span>] &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; 3&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Попытка выйти за границы массива приведёт к ошибке индекса&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>li[&lt;span style="color:#40a070">4&lt;/span>] &lt;span style="color:#60a0b0;font-style:italic"># Выбрасывает ошибку IndexError&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Можно обращаться к диапазону, используя так называемые срезы&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># (Для тех, кто любит математику, это называется замкнуто-открытый интервал).&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>li[&lt;span style="color:#40a070">1&lt;/span>:&lt;span style="color:#40a070">3&lt;/span>] &lt;span style="color:#60a0b0;font-style:italic"># Вернуть список из индекса с 1 по 3 =&amp;gt; [2, 4]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>li[&lt;span style="color:#40a070">2&lt;/span>:] &lt;span style="color:#60a0b0;font-style:italic"># Вернуть список, начиная с индекса 2 =&amp;gt; [4, 3]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>li[:&lt;span style="color:#40a070">3&lt;/span>] &lt;span style="color:#60a0b0;font-style:italic"># Вернуть список с начала до индекса 3 =&amp;gt; [1, 2, 4]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>li[::&lt;span style="color:#40a070">2&lt;/span>] &lt;span style="color:#60a0b0;font-style:italic"># Вернуть список, выбирая каждую вторую запись =&amp;gt; [1, 4]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>li[::&lt;span style="color:#666">-&lt;/span>&lt;span style="color:#40a070">1&lt;/span>] &lt;span style="color:#60a0b0;font-style:italic"># Вернуть список в обратном порядке =&amp;gt; [3, 4, 2, 1]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Используйте сочетания всего вышеназванного для выделения более сложных срезов&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># li[начало:конец:шаг]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Сделать однослойную глубокую копию, используя срезы&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>li2 &lt;span style="color:#666">=&lt;/span> li[:] &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; li2 = [1, 2, 4, 3], но (li2 is li) вернет False.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Удаляем произвольные элементы из списка оператором del&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">del&lt;/span> li[&lt;span style="color:#40a070">2&lt;/span>] &lt;span style="color:#60a0b0;font-style:italic"># [1, 2, 3]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Удалить первое вхождение значения&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>li&lt;span style="color:#666">.&lt;/span>remove(&lt;span style="color:#40a070">2&lt;/span>) &lt;span style="color:#60a0b0;font-style:italic"># [1, 3]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>li&lt;span style="color:#666">.&lt;/span>remove(&lt;span style="color:#40a070">2&lt;/span>) &lt;span style="color:#60a0b0;font-style:italic"># Выбрасывает ошибку ValueError поскольку 2 нет в списке&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Вставить элемент по определенному индексу&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>li&lt;span style="color:#666">.&lt;/span>insert(&lt;span style="color:#40a070">1&lt;/span>, &lt;span style="color:#40a070">2&lt;/span>) &lt;span style="color:#60a0b0;font-style:italic"># [1, 2, 3]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Получить индекс первого найденного элемента, соответствующего аргументу&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>li&lt;span style="color:#666">.&lt;/span>index(&lt;span style="color:#40a070">2&lt;/span>) &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; 1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>li&lt;span style="color:#666">.&lt;/span>index(&lt;span style="color:#40a070">4&lt;/span>) &lt;span style="color:#60a0b0;font-style:italic"># Выбрасывает ошибку ValueError поскольку 4 нет в списке&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Вы можете складывать, или, как ещё говорят, конкатенировать списки&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Обратите внимание: значения li и other_li при этом не изменились.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>li &lt;span style="color:#666">+&lt;/span> other_li &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; [1, 2, 3, 4, 5, 6]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Объединять списки можно методом extend()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>li&lt;span style="color:#666">.&lt;/span>extend(other_li) &lt;span style="color:#60a0b0;font-style:italic"># Теперь li содержит [1, 2, 3, 4, 5, 6]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Проверить элемент на наличие в списке можно оператором in&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#40a070">1&lt;/span> &lt;span style="color:#007020;font-weight:bold">in&lt;/span> li &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; True&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Длина списка вычисляется функцией len&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020">len&lt;/span>(li) &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; 6&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Кортежи похожи на списки, только неизменяемые&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>tup &lt;span style="color:#666">=&lt;/span> (&lt;span style="color:#40a070">1&lt;/span>, &lt;span style="color:#40a070">2&lt;/span>, &lt;span style="color:#40a070">3&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>tup[&lt;span style="color:#40a070">0&lt;/span>] &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; 1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>tup[&lt;span style="color:#40a070">0&lt;/span>] &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#40a070">3&lt;/span> &lt;span style="color:#60a0b0;font-style:italic"># Выбрасывает ошибку TypeError&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Обратите внимание, что кортеж длины 1 должен иметь запятую после последнего элемента, но кортежи другой длины, даже 0, не должны.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020">type&lt;/span>((&lt;span style="color:#40a070">1&lt;/span>)) &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; &amp;lt;class &amp;#39;int&amp;#39;&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020">type&lt;/span>((&lt;span style="color:#40a070">1&lt;/span>,)) &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; &amp;lt;class &amp;#39;tuple&amp;#39;&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020">type&lt;/span>(()) &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; &amp;lt;class &amp;#39;tuple&amp;#39;&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Всё то же самое можно делать и с кортежами&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020">len&lt;/span>(tup) &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; 3&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>tup &lt;span style="color:#666">+&lt;/span> (&lt;span style="color:#40a070">4&lt;/span>, &lt;span style="color:#40a070">5&lt;/span>, &lt;span style="color:#40a070">6&lt;/span>) &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; (1, 2, 3, 4, 5, 6)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>tup[:&lt;span style="color:#40a070">2&lt;/span>] &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; (1, 2)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#40a070">2&lt;/span> &lt;span style="color:#007020;font-weight:bold">in&lt;/span> tup &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; True&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Вы можете распаковывать кортежи (или списки) в переменные&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>a, b, c &lt;span style="color:#666">=&lt;/span> (&lt;span style="color:#40a070">1&lt;/span>, &lt;span style="color:#40a070">2&lt;/span>, &lt;span style="color:#40a070">3&lt;/span>) &lt;span style="color:#60a0b0;font-style:italic"># a == 1, b == 2 и c == 3&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Вы также можете сделать расширенную распаковку&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>a, &lt;span style="color:#666">*&lt;/span>b, c &lt;span style="color:#666">=&lt;/span> (&lt;span style="color:#40a070">1&lt;/span>, &lt;span style="color:#40a070">2&lt;/span>, &lt;span style="color:#40a070">3&lt;/span>, &lt;span style="color:#40a070">4&lt;/span>) &lt;span style="color:#60a0b0;font-style:italic"># a теперь 1, b теперь [2, 3] и c теперь 4&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Кортежи создаются по умолчанию, если опущены скобки&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>d, e, f &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#40a070">4&lt;/span>, &lt;span style="color:#40a070">5&lt;/span>, &lt;span style="color:#40a070">6&lt;/span> &lt;span style="color:#60a0b0;font-style:italic"># кортеж 4, 5, 6 распаковывается в переменные d, e и f&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># соответственно, d = 4, e = 5 и f = 6&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Обратите внимание, как легко поменять местами значения двух переменных&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>e, d &lt;span style="color:#666">=&lt;/span> d, e &lt;span style="color:#60a0b0;font-style:italic"># теперь d == 5, а e == 4&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Словари содержат ассоциативные массивы&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>empty_dict &lt;span style="color:#666">=&lt;/span> {}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Вот так описывается предзаполненный словарь&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>filled_dict &lt;span style="color:#666">=&lt;/span> {&lt;span style="color:#4070a0">&amp;#34;one&amp;#34;&lt;/span>: &lt;span style="color:#40a070">1&lt;/span>, &lt;span style="color:#4070a0">&amp;#34;two&amp;#34;&lt;/span>: &lt;span style="color:#40a070">2&lt;/span>, &lt;span style="color:#4070a0">&amp;#34;three&amp;#34;&lt;/span>: &lt;span style="color:#40a070">3&lt;/span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Обратите внимание, что ключи для словарей должны быть неизменяемыми типами. Это&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># сделано для того, чтобы ключ может быть преобразован в хеш для быстрого поиска.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Неизменяемые типы включают целые числа, числа с плавающей запятой, строки, кортежи.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>invalid_dict &lt;span style="color:#666">=&lt;/span> {[&lt;span style="color:#40a070">1&lt;/span>,&lt;span style="color:#40a070">2&lt;/span>,&lt;span style="color:#40a070">3&lt;/span>]: &lt;span style="color:#4070a0">&amp;#34;123&amp;#34;&lt;/span>} &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; Выбрасывает ошибку TypeError: unhashable type: &amp;#39;list&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>valid_dict &lt;span style="color:#666">=&lt;/span> {(&lt;span style="color:#40a070">1&lt;/span>,&lt;span style="color:#40a070">2&lt;/span>,&lt;span style="color:#40a070">3&lt;/span>):[&lt;span style="color:#40a070">1&lt;/span>,&lt;span style="color:#40a070">2&lt;/span>,&lt;span style="color:#40a070">3&lt;/span>]} &lt;span style="color:#60a0b0;font-style:italic"># Однако значения могут быть любого типа.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Поиск значений с помощью []&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>filled_dict[&lt;span style="color:#4070a0">&amp;#34;one&amp;#34;&lt;/span>] &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; 1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Все ключи в виде списка получаются с помощью метода keys().&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Его вызов нужно обернуть в list(), так как обратно мы получаем&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># итерируемый объект, о которых поговорим позднее. Примечание - для Python&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># версии &amp;lt;3.7, порядок словарных ключей не гарантируется. Ваши результаты могут&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># не точно соответствовать приведенному ниже примеру. Однако, начиная с Python 3.7&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># элементы в словаре сохраняют порядок, в котором они вставляются в словарь.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020">list&lt;/span>(filled_dict&lt;span style="color:#666">.&lt;/span>keys()) &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; [&amp;#34;three&amp;#34;, &amp;#34;two&amp;#34;, &amp;#34;one&amp;#34;] в Python &amp;lt;3.7&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020">list&lt;/span>(filled_dict&lt;span style="color:#666">.&lt;/span>keys()) &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; [&amp;#34;one&amp;#34;, &amp;#34;two&amp;#34;, &amp;#34;three&amp;#34;] в Python 3.7+&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Все значения в виде списка можно получить с помощью values().&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># И снова нам нужно обернуть вызов в list(), чтобы превратить&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># итерируемый объект в список.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># То же самое замечание насчёт порядка ключей справедливо и здесь&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020">list&lt;/span>(filled_dict&lt;span style="color:#666">.&lt;/span>values()) &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; [3, 2, 1] в Python &amp;lt;3.7&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020">list&lt;/span>(filled_dict&lt;span style="color:#666">.&lt;/span>values()) &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; [1, 2, 3] в Python 3.7+&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># При помощи ключевого слова in можно проверять наличие ключей в словаре&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4070a0">&amp;#34;one&amp;#34;&lt;/span> &lt;span style="color:#007020;font-weight:bold">in&lt;/span> filled_dict &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; True&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#40a070">1&lt;/span> &lt;span style="color:#007020;font-weight:bold">in&lt;/span> filled_dict &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; False&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Попытка получить значение по несуществующему ключу выбросит ошибку KeyError&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>filled_dict[&lt;span style="color:#4070a0">&amp;#34;four&amp;#34;&lt;/span>] &lt;span style="color:#60a0b0;font-style:italic"># Выбрасывает ошибку KeyError&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Чтобы избежать этого, используйте метод get()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>filled_dict&lt;span style="color:#666">.&lt;/span>get(&lt;span style="color:#4070a0">&amp;#34;one&amp;#34;&lt;/span>) &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; 1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>filled_dict&lt;span style="color:#666">.&lt;/span>get(&lt;span style="color:#4070a0">&amp;#34;four&amp;#34;&lt;/span>) &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; None&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Метод get поддерживает аргумент по умолчанию, когда значение отсутствует&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>filled_dict&lt;span style="color:#666">.&lt;/span>get(&lt;span style="color:#4070a0">&amp;#34;one&amp;#34;&lt;/span>, &lt;span style="color:#40a070">4&lt;/span>) &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; 1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>filled_dict&lt;span style="color:#666">.&lt;/span>get(&lt;span style="color:#4070a0">&amp;#34;four&amp;#34;&lt;/span>, &lt;span style="color:#40a070">4&lt;/span>) &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; 4&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Метод setdefault() вставляет пару ключ-значение, только если такого ключа нет&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>filled_dict&lt;span style="color:#666">.&lt;/span>setdefault(&lt;span style="color:#4070a0">&amp;#34;five&amp;#34;&lt;/span>, &lt;span style="color:#40a070">5&lt;/span>) &lt;span style="color:#60a0b0;font-style:italic"># filled_dict[&amp;#34;five&amp;#34;] возвращает 5&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>filled_dict&lt;span style="color:#666">.&lt;/span>setdefault(&lt;span style="color:#4070a0">&amp;#34;five&amp;#34;&lt;/span>, &lt;span style="color:#40a070">6&lt;/span>) &lt;span style="color:#60a0b0;font-style:italic"># filled_dict[&amp;#34;five&amp;#34;] по-прежнему возвращает 5&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Добавление элементов в словарь&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>filled_dict&lt;span style="color:#666">.&lt;/span>update({&lt;span style="color:#4070a0">&amp;#34;four&amp;#34;&lt;/span>:&lt;span style="color:#40a070">4&lt;/span>}) &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; {&amp;#34;one&amp;#34;: 1, &amp;#34;two&amp;#34;: 2, &amp;#34;three&amp;#34;: 3, &amp;#34;four&amp;#34;: 4}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>filled_dict[&lt;span style="color:#4070a0">&amp;#34;four&amp;#34;&lt;/span>] &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#40a070">4&lt;/span> &lt;span style="color:#60a0b0;font-style:italic"># Другой способ добавления элементов&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Удаляйте ключи из словаря с помощью ключевого слова del&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">del&lt;/span> filled_dict[&lt;span style="color:#4070a0">&amp;#34;one&amp;#34;&lt;/span>] &lt;span style="color:#60a0b0;font-style:italic"># Удаляет ключ &amp;#34;one&amp;#34; из словаря&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># После Python 3.5 вы также можете использовать дополнительные параметры распаковки&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{&lt;span style="color:#4070a0">&amp;#39;a&amp;#39;&lt;/span>: &lt;span style="color:#40a070">1&lt;/span>, &lt;span style="color:#666">**&lt;/span>{&lt;span style="color:#4070a0">&amp;#39;b&amp;#39;&lt;/span>: &lt;span style="color:#40a070">2&lt;/span>}} &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; {&amp;#39;a&amp;#39;: 1, &amp;#39;b&amp;#39;: 2}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{&lt;span style="color:#4070a0">&amp;#39;a&amp;#39;&lt;/span>: &lt;span style="color:#40a070">1&lt;/span>, &lt;span style="color:#666">**&lt;/span>{&lt;span style="color:#4070a0">&amp;#39;a&amp;#39;&lt;/span>: &lt;span style="color:#40a070">2&lt;/span>}} &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; {&amp;#39;a&amp;#39;: 2}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Множества содержат... ну, в общем, множества&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>empty_set &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#007020">set&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Инициализация множества набором значений.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Да, оно выглядит примерно как словарь. Ну извините, так уж вышло.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>filled_set &lt;span style="color:#666">=&lt;/span> {&lt;span style="color:#40a070">1&lt;/span>, &lt;span style="color:#40a070">2&lt;/span>, &lt;span style="color:#40a070">2&lt;/span>, &lt;span style="color:#40a070">3&lt;/span>, &lt;span style="color:#40a070">4&lt;/span>} &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; {1, 2, 3, 4}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Similar to keys of a dictionary, elements of a set have to be immutable.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Как и ключи словаря, элементы множества должны быть неизменяемыми.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>invalid_set &lt;span style="color:#666">=&lt;/span> {[&lt;span style="color:#40a070">1&lt;/span>], &lt;span style="color:#40a070">1&lt;/span>} &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; Выбрасывает ошибку TypeError: unhashable type: &amp;#39;list&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>valid_set &lt;span style="color:#666">=&lt;/span> {(&lt;span style="color:#40a070">1&lt;/span>,), &lt;span style="color:#40a070">1&lt;/span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Множеству можно назначать новую переменную&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>filled_set &lt;span style="color:#666">=&lt;/span> some_set
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>filled_set&lt;span style="color:#666">.&lt;/span>add(&lt;span style="color:#40a070">5&lt;/span>) &lt;span style="color:#60a0b0;font-style:italic"># {1, 2, 3, 4, 5}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># В множествах нет повторяющихся элементов&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>filled_set&lt;span style="color:#666">.&lt;/span>add(&lt;span style="color:#40a070">5&lt;/span>) &lt;span style="color:#60a0b0;font-style:italic"># {1, 2, 3, 4, 5}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Пересечение множеств: &amp;amp;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>other_set &lt;span style="color:#666">=&lt;/span> {&lt;span style="color:#40a070">3&lt;/span>, &lt;span style="color:#40a070">4&lt;/span>, &lt;span style="color:#40a070">5&lt;/span>, &lt;span style="color:#40a070">6&lt;/span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>filled_set &lt;span style="color:#666">&amp;amp;&lt;/span> other_set &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; {3, 4, 5}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Объединение множеств: |&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>filled_set &lt;span style="color:#666">|&lt;/span> other_set &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; {1, 2, 3, 4, 5, 6}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Разность множеств: -&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{&lt;span style="color:#40a070">1&lt;/span>, &lt;span style="color:#40a070">2&lt;/span>, &lt;span style="color:#40a070">3&lt;/span>, &lt;span style="color:#40a070">4&lt;/span>} &lt;span style="color:#666">-&lt;/span> {&lt;span style="color:#40a070">2&lt;/span>, &lt;span style="color:#40a070">3&lt;/span>, &lt;span style="color:#40a070">5&lt;/span>} &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; {1, 4}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Симметричная разница: ^&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{&lt;span style="color:#40a070">1&lt;/span>, &lt;span style="color:#40a070">2&lt;/span>, &lt;span style="color:#40a070">3&lt;/span>, &lt;span style="color:#40a070">4&lt;/span>} &lt;span style="color:#666">^&lt;/span> {&lt;span style="color:#40a070">2&lt;/span>, &lt;span style="color:#40a070">3&lt;/span>, &lt;span style="color:#40a070">5&lt;/span>} &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; {1, 4, 5}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Проверить, является ли множество слева надмножеством множества справа&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{&lt;span style="color:#40a070">1&lt;/span>, &lt;span style="color:#40a070">2&lt;/span>} &lt;span style="color:#666">&amp;gt;=&lt;/span> {&lt;span style="color:#40a070">1&lt;/span>, &lt;span style="color:#40a070">2&lt;/span>, &lt;span style="color:#40a070">3&lt;/span>} &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; False&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Проверить, является ли множество слева подмножеством множества справа&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{&lt;span style="color:#40a070">1&lt;/span>, &lt;span style="color:#40a070">2&lt;/span>} &lt;span style="color:#666">&amp;lt;=&lt;/span> {&lt;span style="color:#40a070">1&lt;/span>, &lt;span style="color:#40a070">2&lt;/span>, &lt;span style="color:#40a070">3&lt;/span>} &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; True&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Проверка на наличие в множестве: in&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#40a070">2&lt;/span> &lt;span style="color:#007020;font-weight:bold">in&lt;/span> filled_set &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; True&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#40a070">10&lt;/span> &lt;span style="color:#007020;font-weight:bold">in&lt;/span> filled_set &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; False&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Сделать однослойную глубокую копию&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>filled_set &lt;span style="color:#666">=&lt;/span> some_set&lt;span style="color:#666">.&lt;/span>copy() &lt;span style="color:#60a0b0;font-style:italic"># {1, 2, 3, 4, 5}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>filled_set &lt;span style="color:#007020;font-weight:bold">is&lt;/span> some_set &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; False&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic">####################################################&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic">## 3. Поток управления и итерируемые объекты&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic">####################################################&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Для начала создадим переменную&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>some_var &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#40a070">5&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Так выглядит выражение if. Отступы в python очень важны!&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Конвенция заключается в использовании четырех пробелов, а не табуляции.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Pезультат: &amp;#34;some_var меньше, чем 10&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">if&lt;/span> some_var &lt;span style="color:#666">&amp;gt;&lt;/span> &lt;span style="color:#40a070">10&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020">print&lt;/span>(&lt;span style="color:#4070a0">&amp;#34;some_var точно больше, чем 10.&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">elif&lt;/span> some_var &lt;span style="color:#666">&amp;lt;&lt;/span> &lt;span style="color:#40a070">10&lt;/span>: &lt;span style="color:#60a0b0;font-style:italic"># Выражение elif необязательно.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020">print&lt;/span>(&lt;span style="color:#4070a0">&amp;#34;some_var меньше, чем 10.&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">else&lt;/span>: &lt;span style="color:#60a0b0;font-style:italic"># Это тоже необязательно.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020">print&lt;/span>(&lt;span style="color:#4070a0">&amp;#34;some_var равно 10.&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4070a0">&amp;#34;&amp;#34;&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4070a0">Циклы For проходят по спискам.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4070a0">Выводит:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4070a0"> собака — это млекопитающее
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4070a0"> кошка — это млекопитающее
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4070a0"> мышь — это млекопитающее
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4070a0">&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">for&lt;/span> animal &lt;span style="color:#007020;font-weight:bold">in&lt;/span> [&lt;span style="color:#4070a0">&amp;#34;собака&amp;#34;&lt;/span>, &lt;span style="color:#4070a0">&amp;#34;кошка&amp;#34;&lt;/span>, &lt;span style="color:#4070a0">&amp;#34;мышь&amp;#34;&lt;/span>]:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#60a0b0;font-style:italic"># Можете использовать format() для интерполяции форматированных строк&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020">print&lt;/span>(&lt;span style="color:#4070a0">&amp;#34;&lt;/span>&lt;span style="color:#70a0d0">{}&lt;/span>&lt;span style="color:#4070a0"> — это млекопитающее&amp;#34;&lt;/span>&lt;span style="color:#666">.&lt;/span>format(animal))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4070a0">&amp;#34;&amp;#34;&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4070a0">&amp;#34;range(число)&amp;#34; возвращает список чисел
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4070a0">от нуля до заданного числа
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4070a0">Выводит:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4070a0"> 0
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4070a0"> 1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4070a0"> 2
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4070a0"> 3
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4070a0">&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">for&lt;/span> i &lt;span style="color:#007020;font-weight:bold">in&lt;/span> &lt;span style="color:#007020">range&lt;/span>(&lt;span style="color:#40a070">4&lt;/span>):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020">print&lt;/span>(i)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4070a0">&amp;#34;&amp;#34;&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4070a0">&amp;#34;range(нижнее, верхнее)&amp;#34; возвращает список чисел
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4070a0">от нижнего числа к верхнему
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4070a0">Выводит:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4070a0"> 4
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4070a0"> 5
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4070a0"> 6
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4070a0"> 7
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4070a0">&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">for&lt;/span> i &lt;span style="color:#007020;font-weight:bold">in&lt;/span> &lt;span style="color:#007020">range&lt;/span>(&lt;span style="color:#40a070">4&lt;/span>, &lt;span style="color:#40a070">8&lt;/span>):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020">print&lt;/span>(i)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4070a0">&amp;#34;&amp;#34;&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4070a0">&amp;#34;range(нижнее, верхнее, шаг)&amp;#34; возвращает список чисел
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4070a0">от нижнего числа к верхнему, от нижнего числа к верхнему, увеличивая
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4070a0">шаг за шагом. Если шаг не указан, значение по умолчанию - 1.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4070a0">Выводит:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4070a0"> 4
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4070a0"> 6
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4070a0">&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">for&lt;/span> i &lt;span style="color:#007020;font-weight:bold">in&lt;/span> &lt;span style="color:#007020">range&lt;/span>(&lt;span style="color:#40a070">4&lt;/span>, &lt;span style="color:#40a070">8&lt;/span>, &lt;span style="color:#40a070">2&lt;/span>):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020">print&lt;/span>(i)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4070a0">&amp;#34;&amp;#34;&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4070a0">Чтобы перебрать список и получить индекс и значение каждого элемента в списке
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4070a0">Выводит:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4070a0"> 0 собака
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4070a0"> 1 кошка
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4070a0"> 2 мышь
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4070a0">&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>animals &lt;span style="color:#666">=&lt;/span> [&lt;span style="color:#4070a0">&amp;#34;собака&amp;#34;&lt;/span>, &lt;span style="color:#4070a0">&amp;#34;кошка&amp;#34;&lt;/span>, &lt;span style="color:#4070a0">&amp;#34;мышь&amp;#34;&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">for&lt;/span> i, value &lt;span style="color:#007020;font-weight:bold">in&lt;/span> &lt;span style="color:#007020">enumerate&lt;/span>(animals):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020">print&lt;/span>(i, value)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4070a0">&amp;#34;&amp;#34;&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4070a0">Циклы while продолжаются до тех пор, пока указанное условие не станет ложным.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4070a0">Выводит:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4070a0"> 0
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4070a0"> 1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4070a0"> 2
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4070a0"> 3
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4070a0">&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>x &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#40a070">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">while&lt;/span> x &lt;span style="color:#666">&amp;lt;&lt;/span> &lt;span style="color:#40a070">4&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020">print&lt;/span>(x)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> x &lt;span style="color:#666">+=&lt;/span> &lt;span style="color:#40a070">1&lt;/span> &lt;span style="color:#60a0b0;font-style:italic"># Краткая запись для x = x + 1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Обрабатывайте исключения блоками try/except&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">try&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#60a0b0;font-style:italic"># Чтобы выбросить ошибку, используется raise&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">raise&lt;/span> &lt;span style="color:#007020">IndexError&lt;/span>(&lt;span style="color:#4070a0">&amp;#34;Это ошибка индекса&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">except&lt;/span> &lt;span style="color:#007020">IndexError&lt;/span> &lt;span style="color:#007020;font-weight:bold">as&lt;/span> e:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">pass&lt;/span> &lt;span style="color:#60a0b0;font-style:italic"># pass — это просто отсутствие оператора. Обычно здесь происходит восстановление после ошибки.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">except&lt;/span> (&lt;span style="color:#007020">TypeError&lt;/span>, &lt;span style="color:#007020">NameError&lt;/span>):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">pass&lt;/span> &lt;span style="color:#60a0b0;font-style:italic"># Несколько исключений можно обработать вместе, если нужно.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">else&lt;/span>: &lt;span style="color:#60a0b0;font-style:italic"># Необязательное выражение. Должно следовать за последним блоком except&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020">print&lt;/span>(&lt;span style="color:#4070a0">&amp;#34;Всё хорошо!&amp;#34;&lt;/span>) &lt;span style="color:#60a0b0;font-style:italic"># Выполнится, только если не было никаких исключений&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">finally&lt;/span>: &lt;span style="color:#60a0b0;font-style:italic"># Выполнить при любых обстоятельствах&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020">print&lt;/span>(&lt;span style="color:#4070a0">&amp;#34;Мы можем очистить ресурсы здесь&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Вместо try/finally чтобы очистить ресурсы, можно использовать оператор with&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">with&lt;/span> &lt;span style="color:#007020">open&lt;/span>(&lt;span style="color:#4070a0">&amp;#34;myfile.txt&amp;#34;&lt;/span>) &lt;span style="color:#007020;font-weight:bold">as&lt;/span> f:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">for&lt;/span> line &lt;span style="color:#007020;font-weight:bold">in&lt;/span> f:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020">print&lt;/span>(line)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Запись в файл&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>contents &lt;span style="color:#666">=&lt;/span> {&lt;span style="color:#4070a0">&amp;#34;aa&amp;#34;&lt;/span>: &lt;span style="color:#40a070">12&lt;/span>, &lt;span style="color:#4070a0">&amp;#34;bb&amp;#34;&lt;/span>: &lt;span style="color:#40a070">21&lt;/span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">with&lt;/span> &lt;span style="color:#007020">open&lt;/span>(&lt;span style="color:#4070a0">&amp;#34;myfile1.txt&amp;#34;&lt;/span>, &lt;span style="color:#4070a0">&amp;#34;w+&amp;#34;&lt;/span>) &lt;span style="color:#007020;font-weight:bold">as&lt;/span> file:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> file&lt;span style="color:#666">.&lt;/span>write(&lt;span style="color:#007020">str&lt;/span>(contents)) &lt;span style="color:#60a0b0;font-style:italic"># Записывает строку в файл&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">with&lt;/span> &lt;span style="color:#007020">open&lt;/span>(&lt;span style="color:#4070a0">&amp;#34;myfile2.txt&amp;#34;&lt;/span>, &lt;span style="color:#4070a0">&amp;#34;w+&amp;#34;&lt;/span>) &lt;span style="color:#007020;font-weight:bold">as&lt;/span> file:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> file&lt;span style="color:#666">.&lt;/span>write(json&lt;span style="color:#666">.&lt;/span>dumps(contents)) &lt;span style="color:#60a0b0;font-style:italic"># Записывает объект в файл&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Чтение из файла&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">with&lt;/span> &lt;span style="color:#007020">open&lt;/span>(&lt;span style="color:#4070a0">&amp;#39;myfile1.txt&amp;#39;&lt;/span>, &lt;span style="color:#4070a0">&amp;#34;r+&amp;#34;&lt;/span>) &lt;span style="color:#007020;font-weight:bold">as&lt;/span> file:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> contents &lt;span style="color:#666">=&lt;/span> file&lt;span style="color:#666">.&lt;/span>read() &lt;span style="color:#60a0b0;font-style:italic"># Читает строку из файла&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020">print&lt;/span>(contents)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># print: {&amp;#34;aa&amp;#34;: 12, &amp;#34;bb&amp;#34;: 21}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">with&lt;/span> &lt;span style="color:#007020">open&lt;/span>(&lt;span style="color:#4070a0">&amp;#39;myfile2.txt&amp;#39;&lt;/span>, &lt;span style="color:#4070a0">&amp;#34;r+&amp;#34;&lt;/span>) &lt;span style="color:#007020;font-weight:bold">as&lt;/span> file:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> contents &lt;span style="color:#666">=&lt;/span> json&lt;span style="color:#666">.&lt;/span>load(file) &lt;span style="color:#60a0b0;font-style:italic"># Читает объект json из файла&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020">print&lt;/span>(contents)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># print: {&amp;#34;aa&amp;#34;: 12, &amp;#34;bb&amp;#34;: 21}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Python предоставляет фундаментальную абстракцию,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># которая называется итерируемым объектом (Iterable).&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Итерируемый объект — это объект, который воспринимается как последовательность.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Объект, который возвратила функция range(), итерируемый.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>filled_dict &lt;span style="color:#666">=&lt;/span> {&lt;span style="color:#4070a0">&amp;#34;one&amp;#34;&lt;/span>: &lt;span style="color:#40a070">1&lt;/span>, &lt;span style="color:#4070a0">&amp;#34;two&amp;#34;&lt;/span>: &lt;span style="color:#40a070">2&lt;/span>, &lt;span style="color:#4070a0">&amp;#34;three&amp;#34;&lt;/span>: &lt;span style="color:#40a070">3&lt;/span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>our_iterable &lt;span style="color:#666">=&lt;/span> filled_dict&lt;span style="color:#666">.&lt;/span>keys()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020">print&lt;/span>(our_iterable) &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; dict_keys([&amp;#39;one&amp;#39;, &amp;#39;two&amp;#39;, &amp;#39;three&amp;#39;]). Это объект, реализующий интерфейс Iterable&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Мы можем проходить по нему циклом.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">for&lt;/span> i &lt;span style="color:#007020;font-weight:bold">in&lt;/span> our_iterable:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020">print&lt;/span>(i) &lt;span style="color:#60a0b0;font-style:italic"># Выводит one, two, three&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Но мы не можем обращаться к элементу по индексу.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>our_iterable[&lt;span style="color:#40a070">1&lt;/span>] &lt;span style="color:#60a0b0;font-style:italic"># Выбрасывает ошибку TypeError&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Итерируемый объект знает, как создавать итератор.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>our_iterator &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#007020">iter&lt;/span>(our_iterable)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Итератор может запоминать состояние при проходе по объекту.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Мы получаем следующий объект, вызывая функцию next().&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020">next&lt;/span>(our_iterator) &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; &amp;#34;one&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Он сохраняет состояние при вызове next().&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020">next&lt;/span>(our_iterator) &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; &amp;#34;two&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020">next&lt;/span>(our_iterator) &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; &amp;#34;three&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Возвратив все данные, итератор выбрасывает исключение StopIterator&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020">next&lt;/span>(our_iterator) &lt;span style="color:#60a0b0;font-style:italic"># Выбрасывает исключение StopIteration&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Мы можем проходить по нему циклом.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>our_iterator &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#007020">iter&lt;/span>(our_iterable)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">for&lt;/span> i &lt;span style="color:#007020;font-weight:bold">in&lt;/span> our_iterator:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020">print&lt;/span>(i) &lt;span style="color:#60a0b0;font-style:italic"># Выводит one, two, three&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Вы можете получить сразу все элементы итератора, вызвав на нём функцию list().&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020">list&lt;/span>(our_iterable) &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; Возвращает [&amp;#34;one&amp;#34;, &amp;#34;two&amp;#34;, &amp;#34;three&amp;#34;]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020">list&lt;/span>(our_iterator) &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; Возвращает [] потому что состояние сохраняется&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic">####################################################&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic">## 4. Функции&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic">####################################################&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Используйте def для создания новых функций&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">def&lt;/span> &lt;span style="color:#06287e">add&lt;/span>(x, y):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020">print&lt;/span>(&lt;span style="color:#4070a0">&amp;#34;x равен &lt;/span>&lt;span style="color:#70a0d0">%s&lt;/span>&lt;span style="color:#4070a0">, а y равен &lt;/span>&lt;span style="color:#70a0d0">%s&lt;/span>&lt;span style="color:#4070a0">&amp;#34;&lt;/span> &lt;span style="color:#666">%&lt;/span> (x, y))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> x &lt;span style="color:#666">+&lt;/span> y &lt;span style="color:#60a0b0;font-style:italic"># Возвращайте результат с помощью ключевого слова return&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Вызов функции с аргументами&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>add(&lt;span style="color:#40a070">5&lt;/span>, &lt;span style="color:#40a070">6&lt;/span>) &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; Выводит &amp;#34;x равен 5, а y равен 6&amp;#34; и возвращает 11&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Другой способ вызова функции — вызов с именованными аргументами&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>add(y&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#40a070">6&lt;/span>, x&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#40a070">5&lt;/span>) &lt;span style="color:#60a0b0;font-style:italic"># Именованные аргументы можно указывать в любом порядке.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Вы можете определить функцию, принимающую переменное число аргументов&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">def&lt;/span> &lt;span style="color:#06287e">varargs&lt;/span>(&lt;span style="color:#666">*&lt;/span>args):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> args
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>varargs(&lt;span style="color:#40a070">1&lt;/span>, &lt;span style="color:#40a070">2&lt;/span>, &lt;span style="color:#40a070">3&lt;/span>) &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; (1,2,3)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># А также можете определить функцию, принимающую переменное число&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># именованных аргументов&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">def&lt;/span> &lt;span style="color:#06287e">keyword_args&lt;/span>(&lt;span style="color:#666">**&lt;/span>kwargs):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> kwargs
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Вызовем эту функцию и посмотрим, что из этого получится&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>keyword_args(big&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#4070a0">&amp;#34;foot&amp;#34;&lt;/span>, loch&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#4070a0">&amp;#34;ness&amp;#34;&lt;/span>) &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; {&amp;#34;big&amp;#34;: &amp;#34;foot&amp;#34;, &amp;#34;loch&amp;#34;: &amp;#34;ness&amp;#34;}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Если хотите, можете использовать оба способа одновременно&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">def&lt;/span> &lt;span style="color:#06287e">all_the_args&lt;/span>(&lt;span style="color:#666">*&lt;/span>args, &lt;span style="color:#666">**&lt;/span>kwargs):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020">print&lt;/span>(args)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020">print&lt;/span>(kwargs)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4070a0">&amp;#34;&amp;#34;&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4070a0">all_the_args(1, 2, a=3, b=4) выводит:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4070a0"> (1, 2)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4070a0"> {&amp;#34;a&amp;#34;: 3, &amp;#34;b&amp;#34;: 4}
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4070a0">&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Вызывая функции, можете сделать наоборот!&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Используйте символ * для распаковки кортежей и ** для распаковки словарей&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>args &lt;span style="color:#666">=&lt;/span> (&lt;span style="color:#40a070">1&lt;/span>, &lt;span style="color:#40a070">2&lt;/span>, &lt;span style="color:#40a070">3&lt;/span>, &lt;span style="color:#40a070">4&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kwargs &lt;span style="color:#666">=&lt;/span> {&lt;span style="color:#4070a0">&amp;#34;a&amp;#34;&lt;/span>: &lt;span style="color:#40a070">3&lt;/span>, &lt;span style="color:#4070a0">&amp;#34;b&amp;#34;&lt;/span>: &lt;span style="color:#40a070">4&lt;/span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>all_the_args(&lt;span style="color:#666">*&lt;/span>args) &lt;span style="color:#60a0b0;font-style:italic"># эквивалентно all_the_args(1, 2, 3, 4)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>all_the_args(&lt;span style="color:#666">**&lt;/span>kwargs) &lt;span style="color:#60a0b0;font-style:italic"># эквивалентно all_the_args(a=3, b=4)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>all_the_args(&lt;span style="color:#666">*&lt;/span>args, &lt;span style="color:#666">**&lt;/span>kwargs) &lt;span style="color:#60a0b0;font-style:italic"># эквивалентно all_the_args(1, 2, 3, 4, a=3, b=4)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Возврат нескольких значений (с назначением кортежей)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">def&lt;/span> &lt;span style="color:#06287e">swap&lt;/span>(x, y):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> y, x &lt;span style="color:#60a0b0;font-style:italic"># Возвращает несколько значений в виде кортежа без скобок.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#60a0b0;font-style:italic"># (Примечание: скобки исключены, но могут быть включены)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>x &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#40a070">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>y &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#40a070">2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>x, y &lt;span style="color:#666">=&lt;/span> swap(x, y) &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; x = 2, y = 1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># (x, y) = swap(x,y) # Снова, скобки были исключены, но могут быть включены.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Область определения функций&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>x &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#40a070">5&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">def&lt;/span> &lt;span style="color:#06287e">set_x&lt;/span>(num):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#60a0b0;font-style:italic"># Локальная переменная x — это не то же самое, что глобальная переменная x&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> x &lt;span style="color:#666">=&lt;/span> num &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; 43&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020">print&lt;/span>(x) &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; 43&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">def&lt;/span> &lt;span style="color:#06287e">set_global_x&lt;/span>(num):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">global&lt;/span> x
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020">print&lt;/span>(x) &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; 5&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> x &lt;span style="color:#666">=&lt;/span> num &lt;span style="color:#60a0b0;font-style:italic"># Глобальная переменная x теперь равна 6&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020">print&lt;/span>(x) &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; 6&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>set_x(&lt;span style="color:#40a070">43&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>set_global_x(&lt;span style="color:#40a070">6&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Python имеет функции первого класса&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">def&lt;/span> &lt;span style="color:#06287e">create_adder&lt;/span>(x):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">def&lt;/span> &lt;span style="color:#06287e">adder&lt;/span>(y):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> x &lt;span style="color:#666">+&lt;/span> y
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> adder
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>add_10 &lt;span style="color:#666">=&lt;/span> create_adder(&lt;span style="color:#40a070">10&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>add_10(&lt;span style="color:#40a070">3&lt;/span>) &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; 13&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Также есть и анонимные функции&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>(&lt;span style="color:#007020;font-weight:bold">lambda&lt;/span> x: x &lt;span style="color:#666">&amp;gt;&lt;/span> &lt;span style="color:#40a070">2&lt;/span>)(&lt;span style="color:#40a070">3&lt;/span>) &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; True&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>(&lt;span style="color:#007020;font-weight:bold">lambda&lt;/span> x, y: x &lt;span style="color:#666">**&lt;/span> &lt;span style="color:#40a070">2&lt;/span> &lt;span style="color:#666">+&lt;/span> y &lt;span style="color:#666">**&lt;/span> &lt;span style="color:#40a070">2&lt;/span>)(&lt;span style="color:#40a070">2&lt;/span>, &lt;span style="color:#40a070">1&lt;/span>) &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; 5&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Есть встроенные функции высшего порядка&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020">list&lt;/span>(&lt;span style="color:#007020">map&lt;/span>(add_10, [&lt;span style="color:#40a070">1&lt;/span>, &lt;span style="color:#40a070">2&lt;/span>, &lt;span style="color:#40a070">3&lt;/span>])) &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; [11, 12, 13]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020">list&lt;/span>(&lt;span style="color:#007020">map&lt;/span>(&lt;span style="color:#007020">max&lt;/span>, [&lt;span style="color:#40a070">1&lt;/span>, &lt;span style="color:#40a070">2&lt;/span>, &lt;span style="color:#40a070">3&lt;/span>], [&lt;span style="color:#40a070">4&lt;/span>, &lt;span style="color:#40a070">2&lt;/span>, &lt;span style="color:#40a070">1&lt;/span>])) &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; [4, 2, 3]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020">list&lt;/span>(&lt;span style="color:#007020">filter&lt;/span>(&lt;span style="color:#007020;font-weight:bold">lambda&lt;/span> x: x &lt;span style="color:#666">&amp;gt;&lt;/span> &lt;span style="color:#40a070">5&lt;/span>, [&lt;span style="color:#40a070">3&lt;/span>, &lt;span style="color:#40a070">4&lt;/span>, &lt;span style="color:#40a070">5&lt;/span>, &lt;span style="color:#40a070">6&lt;/span>, &lt;span style="color:#40a070">7&lt;/span>])) &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; [6, 7]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Для удобного отображения и фильтрации можно использовать списочные интерпретации&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Интерпретация списка сохраняет вывод в виде списка, который сам может быть вложенным списком&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[add_10(i) &lt;span style="color:#007020;font-weight:bold">for&lt;/span> i &lt;span style="color:#007020;font-weight:bold">in&lt;/span> [&lt;span style="color:#40a070">1&lt;/span>, &lt;span style="color:#40a070">2&lt;/span>, &lt;span style="color:#40a070">3&lt;/span>]] &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; [11, 12, 13]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[x &lt;span style="color:#007020;font-weight:bold">for&lt;/span> x &lt;span style="color:#007020;font-weight:bold">in&lt;/span> [&lt;span style="color:#40a070">3&lt;/span>, &lt;span style="color:#40a070">4&lt;/span>, &lt;span style="color:#40a070">5&lt;/span>, &lt;span style="color:#40a070">6&lt;/span>, &lt;span style="color:#40a070">7&lt;/span>] &lt;span style="color:#007020;font-weight:bold">if&lt;/span> x &lt;span style="color:#666">&amp;gt;&lt;/span> &lt;span style="color:#40a070">5&lt;/span>] &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; [6, 7]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Вы также можете создавать интерпретации множеств и словарей.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{x &lt;span style="color:#007020;font-weight:bold">for&lt;/span> x &lt;span style="color:#007020;font-weight:bold">in&lt;/span> &lt;span style="color:#4070a0">&amp;#39;abcddeef&amp;#39;&lt;/span> &lt;span style="color:#007020;font-weight:bold">if&lt;/span> x &lt;span style="color:#007020;font-weight:bold">not&lt;/span> &lt;span style="color:#007020;font-weight:bold">in&lt;/span> &lt;span style="color:#4070a0">&amp;#39;abc&amp;#39;&lt;/span>} &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; {&amp;#39;d&amp;#39;, &amp;#39;e&amp;#39;, &amp;#39;f&amp;#39;}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{x: x&lt;span style="color:#666">**&lt;/span>&lt;span style="color:#40a070">2&lt;/span> &lt;span style="color:#007020;font-weight:bold">for&lt;/span> x &lt;span style="color:#007020;font-weight:bold">in&lt;/span> &lt;span style="color:#007020">range&lt;/span>(&lt;span style="color:#40a070">5&lt;/span>)} &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; {0: 0, 1: 1, 2: 4, 3: 9, 4: 16}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic">####################################################&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic">## 5. Модули&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic">####################################################&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Вы можете импортировать модули&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">import&lt;/span> &lt;span style="color:#0e84b5;font-weight:bold">math&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020">print&lt;/span>(math&lt;span style="color:#666">.&lt;/span>sqrt(&lt;span style="color:#40a070">16&lt;/span>)) &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; 4.0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Вы можете получить определенные функции из модуля&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">from&lt;/span> &lt;span style="color:#0e84b5;font-weight:bold">math&lt;/span> &lt;span style="color:#007020;font-weight:bold">import&lt;/span> ceil, floor
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020">print&lt;/span>(ceil(&lt;span style="color:#40a070">3.7&lt;/span>)) &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; 4.0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020">print&lt;/span>(floor(&lt;span style="color:#40a070">3.7&lt;/span>)) &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; 3.0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Вы можете импортировать все функции из модуля.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Предупреждение: это не рекомендуется&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">from&lt;/span> &lt;span style="color:#0e84b5;font-weight:bold">math&lt;/span> &lt;span style="color:#007020;font-weight:bold">import&lt;/span> &lt;span style="color:#666">*&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Вы можете сократить имена модулей&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">import&lt;/span> &lt;span style="color:#0e84b5;font-weight:bold">math&lt;/span> &lt;span style="color:#007020;font-weight:bold">as&lt;/span> &lt;span style="color:#0e84b5;font-weight:bold">m&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>math&lt;span style="color:#666">.&lt;/span>sqrt(&lt;span style="color:#40a070">16&lt;/span>) &lt;span style="color:#666">==&lt;/span> m&lt;span style="color:#666">.&lt;/span>sqrt(&lt;span style="color:#40a070">16&lt;/span>) &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; True&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Модули Python - это обычные файлы Python. Вы&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># можете писать свои собственные и импортировать их. Имя&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># модуля совпадает с именем файла.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Вы можете узнать, какие функции и атрибуты&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># определены в модуле.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">import&lt;/span> &lt;span style="color:#0e84b5;font-weight:bold">math&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020">dir&lt;/span>(math)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Если у вас есть скрипт Python с именем math.py в той же папке,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># что и ваш текущий скрипт, файл math.py будет&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># будет загружен вместо встроенного модуля Python.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Это происходит потому, что локальная папка имеет приоритет&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># над встроенными библиотеками Python.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic">####################################################&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic">## 6. Классы&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic">####################################################&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Мы используем оператор class для создания класса&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">class&lt;/span> &lt;span style="color:#0e84b5;font-weight:bold">Human&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#60a0b0;font-style:italic"># Атрибут класса. Он используется всеми экземплярами этого класса&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> species &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#4070a0">&amp;#34;Гомосапиенс&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#60a0b0;font-style:italic"># Обычный конструктор, вызывается при инициализации экземпляра класса&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#60a0b0;font-style:italic"># Обратите внимание, что двойное подчёркивание в начале и в конце имени&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#60a0b0;font-style:italic"># означает объекты и атрибуты, которые используются Python, но находятся&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#60a0b0;font-style:italic"># в пространствах имён, управляемых пользователем.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#60a0b0;font-style:italic"># Методы (или объекты или атрибуты), например:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#60a0b0;font-style:italic"># __init__, __str__, __repr__ и т. д. называются специальными методами.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#60a0b0;font-style:italic"># Не придумывайте им имена самостоятельно.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">def&lt;/span> __init__(self, name):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#60a0b0;font-style:italic"># Присваивание значения аргумента атрибуту&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#666">.&lt;/span>name &lt;span style="color:#666">=&lt;/span> name
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#60a0b0;font-style:italic"># Инициализация свойства&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#666">.&lt;/span>_age &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#40a070">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#60a0b0;font-style:italic"># Метод экземпляра. Все методы принимают self в качестве первого аргумента&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">def&lt;/span> &lt;span style="color:#06287e">say&lt;/span>(self, msg):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> &lt;span style="color:#4070a0">&amp;#34;&lt;/span>&lt;span style="color:#70a0d0">{name}&lt;/span>&lt;span style="color:#4070a0">: &lt;/span>&lt;span style="color:#70a0d0">{message}&lt;/span>&lt;span style="color:#4070a0">&amp;#34;&lt;/span>&lt;span style="color:#666">.&lt;/span>format(name&lt;span style="color:#666">=&lt;/span>self&lt;span style="color:#666">.&lt;/span>name, message&lt;span style="color:#666">=&lt;/span>msg)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#60a0b0;font-style:italic"># Другой метод экземпляра&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">def&lt;/span> &lt;span style="color:#06287e">sing&lt;/span>(self):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> &lt;span style="color:#4070a0">&amp;#39;йо... йо... проверка микрофона... раз, два... раз, два...&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#60a0b0;font-style:italic"># Метод класса разделяется между всеми экземплярами&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#60a0b0;font-style:italic"># Они вызываются с указыванием вызывающего класса в качестве первого аргумента&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#555;font-weight:bold">@classmethod&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">def&lt;/span> &lt;span style="color:#06287e">get_species&lt;/span>(cls):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> cls&lt;span style="color:#666">.&lt;/span>species
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#60a0b0;font-style:italic"># Статический метод вызывается без ссылки на класс или экземпляр&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#555;font-weight:bold">@staticmethod&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">def&lt;/span> &lt;span style="color:#06287e">grunt&lt;/span>():
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> &lt;span style="color:#4070a0">&amp;#34;*grunt*&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#60a0b0;font-style:italic"># property похоже на геттер.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#60a0b0;font-style:italic"># Оно превращает метод age() в одноименный атрибут только для чтения.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#60a0b0;font-style:italic"># Однако нет необходимости писать тривиальные геттеры и сеттеры в Python.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#555;font-weight:bold">@property&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">def&lt;/span> &lt;span style="color:#06287e">age&lt;/span>(self):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> self&lt;span style="color:#666">.&lt;/span>_age
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#60a0b0;font-style:italic"># Это позволяет установить свойство&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#555;font-weight:bold">@age.setter&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">def&lt;/span> &lt;span style="color:#06287e">age&lt;/span>(self, age):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#666">.&lt;/span>_age &lt;span style="color:#666">=&lt;/span> age
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#60a0b0;font-style:italic"># Это позволяет удалить свойство&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#555;font-weight:bold">@age.deleter&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">def&lt;/span> &lt;span style="color:#06287e">age&lt;/span>(self):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">del&lt;/span> self&lt;span style="color:#666">.&lt;/span>_age
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Когда интерпретатор Python читает исходный файл, он выполняет весь его код.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Проверка __name__ гарантирует, что этот блок кода выполняется только тогда, когда&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># этот модуль - это основная программа.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">if&lt;/span> __name__ &lt;span style="color:#666">==&lt;/span> &lt;span style="color:#4070a0">&amp;#39;__main__&amp;#39;&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#60a0b0;font-style:italic"># Инициализация экземпляра класса&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> i &lt;span style="color:#666">=&lt;/span> Human(name&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#4070a0">&amp;#34;Иван&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> i&lt;span style="color:#666">.&lt;/span>say(&lt;span style="color:#4070a0">&amp;#34;привет&amp;#34;&lt;/span>) &lt;span style="color:#60a0b0;font-style:italic"># Выводит: &amp;#34;Иван: привет&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> j &lt;span style="color:#666">=&lt;/span> Human(&lt;span style="color:#4070a0">&amp;#34;Пётр&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> j&lt;span style="color:#666">.&lt;/span>say(&lt;span style="color:#4070a0">&amp;#34;привет&amp;#34;&lt;/span>) &lt;span style="color:#60a0b0;font-style:italic"># Выводит: &amp;#34;Пётр: привет&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#60a0b0;font-style:italic"># i и j являются экземплярами типа Human, или другими словами: они являются объектами Human&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#60a0b0;font-style:italic"># Вызов метода класса&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> i&lt;span style="color:#666">.&lt;/span>say(i&lt;span style="color:#666">.&lt;/span>get_species()) &lt;span style="color:#60a0b0;font-style:italic"># &amp;#34;Иван: Гомосапиенс&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#60a0b0;font-style:italic"># Изменение разделяемого атрибута&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Human&lt;span style="color:#666">.&lt;/span>species &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#4070a0">&amp;#34;Неандертальец&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> i&lt;span style="color:#666">.&lt;/span>say(i&lt;span style="color:#666">.&lt;/span>get_species()) &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; &amp;#34;Иван: Неандертальец&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> j&lt;span style="color:#666">.&lt;/span>say(j&lt;span style="color:#666">.&lt;/span>get_species()) &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; &amp;#34;Пётр: Неандертальец&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#60a0b0;font-style:italic"># Вызов статического метода&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020">print&lt;/span>(Human&lt;span style="color:#666">.&lt;/span>grunt()) &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; &amp;#34;*grunt*&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#60a0b0;font-style:italic"># Невозможно вызвать статический метод с экземпляром объекта&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#60a0b0;font-style:italic"># потому что i.grunt() автоматически поместит &amp;#34;self&amp;#34; (объект i) в качестве аргумента&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020">print&lt;/span>(i&lt;span style="color:#666">.&lt;/span>grunt()) &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; TypeError: grunt() takes 0 positional arguments but 1 was given&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#60a0b0;font-style:italic"># Обновить свойство для этого экземпляра&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> i&lt;span style="color:#666">.&lt;/span>age &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#40a070">42&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#60a0b0;font-style:italic"># Получить свойство&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> i&lt;span style="color:#666">.&lt;/span>say(i&lt;span style="color:#666">.&lt;/span>age) &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; &amp;#34;Иван: 42&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> j&lt;span style="color:#666">.&lt;/span>say(j&lt;span style="color:#666">.&lt;/span>age) &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; &amp;#34;Пётр: 0&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#60a0b0;font-style:italic"># Удалить свойство&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">del&lt;/span> i&lt;span style="color:#666">.&lt;/span>age
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#60a0b0;font-style:italic"># i.age # =&amp;gt; это выбрасило бы ошибку AttributeError&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic">####################################################&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic">## 6.1 Наследование&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic">####################################################&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Наследование позволяет определять новые дочерние классы, которые наследуют методы и&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># переменные от своего родительского класса.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Используя класс Human, определенный выше как базовый или родительский класс, мы можем&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># определить дочерний класс Superhero, который наследует переменные класса, такие как&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># &amp;#34;species&amp;#34;, &amp;#34;name&amp;#34; и &amp;#34;age&amp;#34;, а также методы, такие как &amp;#34;sing&amp;#34; и &amp;#34;grunt&amp;#34; из класса Human,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># но также может иметь свои уникальные свойства.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Чтобы воспользоваться преимуществами модульности по файлам, вы можете поместить&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># вышеперечисленные классы в их собственные файлы, например, human.py&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Чтобы импортировать функции из других файлов, используйте следующий формат&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># from &amp;#34;имя-файла-без-расширения&amp;#34; import &amp;#34;функция-или-класс&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">from&lt;/span> &lt;span style="color:#0e84b5;font-weight:bold">human&lt;/span> &lt;span style="color:#007020;font-weight:bold">import&lt;/span> Human
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Укажите родительский класс(ы) как параметры определения класса&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">class&lt;/span> &lt;span style="color:#0e84b5;font-weight:bold">Superhero&lt;/span>(Human):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#60a0b0;font-style:italic"># Если дочерний класс должен наследовать все определения родителя без каких-либо&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#60a0b0;font-style:italic"># изменений, вы можете просто использовать ключевое слово pass (и ничего больше),&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#60a0b0;font-style:italic"># но в этом случае оно закомментировано, чтобы разрешить уникальный дочерний класс:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#60a0b0;font-style:italic"># pass&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#60a0b0;font-style:italic"># Дочерние классы могут переопределять атрибуты своих родителей&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> species &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#4070a0">&amp;#39;Сверхчеловек&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#60a0b0;font-style:italic"># Дочерние классы автоматически наследуют конструктор родительского класса, включая&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#60a0b0;font-style:italic"># его аргументы, но также могут определять дополнительные аргументы или определения&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#60a0b0;font-style:italic"># и переопределять его методы, такие как конструктор класса.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#60a0b0;font-style:italic"># Этот конструктор наследует аргумент &amp;#34;name&amp;#34; от класса &amp;#34;Human&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#60a0b0;font-style:italic"># и добавляет аргументы &amp;#34;superpower&amp;#34; и &amp;#34;movie&amp;#34;:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">def&lt;/span> __init__(self, name, movie&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#007020;font-weight:bold">False&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> superpowers&lt;span style="color:#666">=&lt;/span>[&lt;span style="color:#4070a0">&amp;#34;сверхсила&amp;#34;&lt;/span>, &lt;span style="color:#4070a0">&amp;#34;пуленепробиваемость&amp;#34;&lt;/span>]):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#60a0b0;font-style:italic"># добавить дополнительные атрибуты класса:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#666">.&lt;/span>fictional &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#007020;font-weight:bold">True&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#666">.&lt;/span>movie &lt;span style="color:#666">=&lt;/span> movie
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#60a0b0;font-style:italic"># помните об изменяемых значениях по умолчанию,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#60a0b0;font-style:italic"># поскольку значения по умолчанию являются общими&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#666">.&lt;/span>superpowers &lt;span style="color:#666">=&lt;/span> superpowers
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#60a0b0;font-style:italic"># Функция &amp;#34;super&amp;#34; позволяет вам получить доступ к методам родительского класса,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#60a0b0;font-style:italic"># которые переопределяются дочерним, в данном случае, методом __init__.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#60a0b0;font-style:italic"># Это вызывает конструктор родительского класса:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020">super&lt;/span>()&lt;span style="color:#666">.&lt;/span>__init__(name)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#60a0b0;font-style:italic"># переопределить метод sing&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">def&lt;/span> &lt;span style="color:#06287e">sing&lt;/span>(self):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> &lt;span style="color:#4070a0">&amp;#39;Бам, бам, БАМ!&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#60a0b0;font-style:italic"># добавить дополнительный метод экземпляра&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">def&lt;/span> &lt;span style="color:#06287e">boast&lt;/span>(self):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">for&lt;/span> power &lt;span style="color:#007020;font-weight:bold">in&lt;/span> self&lt;span style="color:#666">.&lt;/span>superpowers:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020">print&lt;/span>(&lt;span style="color:#4070a0">&amp;#34;Я обладаю силой &amp;#39;&lt;/span>&lt;span style="color:#70a0d0">{pow}&lt;/span>&lt;span style="color:#4070a0">&amp;#39;!&amp;#34;&lt;/span>&lt;span style="color:#666">.&lt;/span>format(&lt;span style="color:#007020">pow&lt;/span>&lt;span style="color:#666">=&lt;/span>power))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">if&lt;/span> __name__ &lt;span style="color:#666">==&lt;/span> &lt;span style="color:#4070a0">&amp;#39;__main__&amp;#39;&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sup &lt;span style="color:#666">=&lt;/span> Superhero(name&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#4070a0">&amp;#34;Тик&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#60a0b0;font-style:italic"># Проверка типа экземпляра&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">if&lt;/span> &lt;span style="color:#007020">isinstance&lt;/span>(sup, Human):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020">print&lt;/span>(&lt;span style="color:#4070a0">&amp;#39;Я человек&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">if&lt;/span> &lt;span style="color:#007020">type&lt;/span>(sup) &lt;span style="color:#007020;font-weight:bold">is&lt;/span> Superhero:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020">print&lt;/span>(&lt;span style="color:#4070a0">&amp;#39;Я супергерой&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#60a0b0;font-style:italic"># Получить порядок поиска разрешения метода (MRO),&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#60a0b0;font-style:italic"># используемый как getattr(), так и super()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#60a0b0;font-style:italic"># Этот атрибут является динамическим и может быть обновлен&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020">print&lt;/span>(Superhero&lt;span style="color:#666">.&lt;/span>__mro__) &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; (&amp;lt;class &amp;#39;__main__.Superhero&amp;#39;&amp;gt;,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; &amp;lt;class &amp;#39;human.Human&amp;#39;&amp;gt;, &amp;lt;class &amp;#39;object&amp;#39;&amp;gt;)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#60a0b0;font-style:italic"># Вызывает родительский метод, но использует свой собственный атрибут класса&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020">print&lt;/span>(sup&lt;span style="color:#666">.&lt;/span>get_species()) &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; Сверхчеловек&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#60a0b0;font-style:italic"># Вызов переопределенного метода&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020">print&lt;/span>(sup&lt;span style="color:#666">.&lt;/span>sing()) &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; Бам, бам, БАМ!&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#60a0b0;font-style:italic"># Вызывает метод из Human&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sup&lt;span style="color:#666">.&lt;/span>say(&lt;span style="color:#4070a0">&amp;#39;Ложка&amp;#39;&lt;/span>) &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; Тик: Ложка&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#60a0b0;font-style:italic"># Метод вызова, существующий только в Superhero&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sup&lt;span style="color:#666">.&lt;/span>boast() &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; Я обладаю силой &amp;#39;сверхсила&amp;#39;!&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; Я обладаю силой &amp;#39;пуленепробиваемость&amp;#39;!&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#60a0b0;font-style:italic"># Атрибут унаследованного класса&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sup&lt;span style="color:#666">.&lt;/span>age &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#40a070">31&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020">print&lt;/span>(sup&lt;span style="color:#666">.&lt;/span>age) &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; 31&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#60a0b0;font-style:italic"># Атрибут, который существует только в Superhero&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020">print&lt;/span>(&lt;span style="color:#4070a0">&amp;#39;Достоин ли я Оскара? &amp;#39;&lt;/span> &lt;span style="color:#666">+&lt;/span> &lt;span style="color:#007020">str&lt;/span>(sup&lt;span style="color:#666">.&lt;/span>movie))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic">####################################################&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic">## 6.2 Множественное наследование&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic">####################################################&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Eще одно определение класса&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># bat.py&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">class&lt;/span> &lt;span style="color:#0e84b5;font-weight:bold">Bat&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> species &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#4070a0">&amp;#39;Летучая мышь&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">def&lt;/span> __init__(self, can_fly&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#007020;font-weight:bold">True&lt;/span>):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#666">.&lt;/span>fly &lt;span style="color:#666">=&lt;/span> can_fly
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#60a0b0;font-style:italic"># В этом классе также есть метод say&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">def&lt;/span> &lt;span style="color:#06287e">say&lt;/span>(self, msg):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> msg &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#4070a0">&amp;#39;... ... ...&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> msg
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#60a0b0;font-style:italic"># И свой метод тоже&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">def&lt;/span> &lt;span style="color:#06287e">sonar&lt;/span>(self):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> &lt;span style="color:#4070a0">&amp;#39;))) ... (((&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">if&lt;/span> __name__ &lt;span style="color:#666">==&lt;/span> &lt;span style="color:#4070a0">&amp;#39;__main__&amp;#39;&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> b &lt;span style="color:#666">=&lt;/span> Bat()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020">print&lt;/span>(b&lt;span style="color:#666">.&lt;/span>say(&lt;span style="color:#4070a0">&amp;#39;привет&amp;#39;&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020">print&lt;/span>(b&lt;span style="color:#666">.&lt;/span>fly)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># И еще одно определение класса, унаследованное от Superhero и Bat&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># superhero.py&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">from&lt;/span> &lt;span style="color:#0e84b5;font-weight:bold">superhero&lt;/span> &lt;span style="color:#007020;font-weight:bold">import&lt;/span> Superhero
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">from&lt;/span> &lt;span style="color:#0e84b5;font-weight:bold">bat&lt;/span> &lt;span style="color:#007020;font-weight:bold">import&lt;/span> Bat
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Определите Batman как дочерний класс, унаследованный от Superhero и Bat&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">class&lt;/span> &lt;span style="color:#0e84b5;font-weight:bold">Batman&lt;/span>(Superhero, Bat):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">def&lt;/span> __init__(self, &lt;span style="color:#666">*&lt;/span>args, &lt;span style="color:#666">**&lt;/span>kwargs):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#60a0b0;font-style:italic"># Обычно для наследования атрибутов необходимо вызывать super:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#60a0b0;font-style:italic"># super(Batman, self).__init__(*args, **kwargs)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#60a0b0;font-style:italic"># Однако здесь мы имеем дело с множественным наследованием, а super()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#60a0b0;font-style:italic"># работает только со следующим базовым классом в списке MRO.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#60a0b0;font-style:italic"># Поэтому вместо этого мы вызываем __init__ для всех родителей.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#60a0b0;font-style:italic"># Использование *args и **kwargs обеспечивает чистый способ передачи&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#60a0b0;font-style:italic"># аргументов, когда каждый родитель &amp;#34;очищает слой луковицы&amp;#34;.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Superhero&lt;span style="color:#666">.&lt;/span>__init__(self, &lt;span style="color:#4070a0">&amp;#39;анонимный&amp;#39;&lt;/span>, movie&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#007020;font-weight:bold">True&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> superpowers&lt;span style="color:#666">=&lt;/span>[&lt;span style="color:#4070a0">&amp;#39;Богатый&amp;#39;&lt;/span>], &lt;span style="color:#666">*&lt;/span>args, &lt;span style="color:#666">**&lt;/span>kwargs)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Bat&lt;span style="color:#666">.&lt;/span>__init__(self, &lt;span style="color:#666">*&lt;/span>args, can_fly&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#007020;font-weight:bold">False&lt;/span>, &lt;span style="color:#666">**&lt;/span>kwargs)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#60a0b0;font-style:italic"># переопределить значение атрибута name&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#666">.&lt;/span>name &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#4070a0">&amp;#39;Грустный Бен Аффлек&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">def&lt;/span> &lt;span style="color:#06287e">sing&lt;/span>(self):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> &lt;span style="color:#4070a0">&amp;#39;на на на на на бэтмен!&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">if&lt;/span> __name__ &lt;span style="color:#666">==&lt;/span> &lt;span style="color:#4070a0">&amp;#39;__main__&amp;#39;&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sup &lt;span style="color:#666">=&lt;/span> Batman()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#60a0b0;font-style:italic"># Получить порядок поиска разрешения метода (MRO),&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#60a0b0;font-style:italic"># используемый как getattr(), так и super()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#60a0b0;font-style:italic"># Этот атрибут является динамическим и может быть обновлен&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020">print&lt;/span>(Batman&lt;span style="color:#666">.&lt;/span>__mro__) &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; (&amp;lt;class &amp;#39;__main__.Batman&amp;#39;&amp;gt;,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; &amp;lt;class &amp;#39;superhero.Superhero&amp;#39;&amp;gt;,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; &amp;lt;class &amp;#39;human.Human&amp;#39;&amp;gt;,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; &amp;lt;class &amp;#39;bat.Bat&amp;#39;&amp;gt;, &amp;lt;class &amp;#39;object&amp;#39;&amp;gt;)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#60a0b0;font-style:italic"># Вызывает родительский метод, но использует свой собственный атрибут класса&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020">print&lt;/span>(sup&lt;span style="color:#666">.&lt;/span>get_species()) &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; Сверхчеловек&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#60a0b0;font-style:italic"># Вызов переопределенного метода&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020">print&lt;/span>(sup&lt;span style="color:#666">.&lt;/span>sing()) &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; на на на на на бэтмен!&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#60a0b0;font-style:italic"># Вызывает метод из Human, потому что порядок наследования имеет значение&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sup&lt;span style="color:#666">.&lt;/span>say(&lt;span style="color:#4070a0">&amp;#39;Я согласен&amp;#39;&lt;/span>) &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; Грустный Бен Аффлек: Я согласен&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#60a0b0;font-style:italic"># Вызов метода, существующий только во втором родителе&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020">print&lt;/span>(sup&lt;span style="color:#666">.&lt;/span>sonar()) &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; ))) ... (((&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#60a0b0;font-style:italic"># Атрибут унаследованного класса&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sup&lt;span style="color:#666">.&lt;/span>age &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#40a070">100&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020">print&lt;/span>(sup&lt;span style="color:#666">.&lt;/span>age) &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; 100&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#60a0b0;font-style:italic"># Унаследованный атрибут от второго родителя,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#60a0b0;font-style:italic"># значение по умолчанию которого было переопределено.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020">print&lt;/span>(&lt;span style="color:#4070a0">&amp;#39;Могу ли я летать? &amp;#39;&lt;/span> &lt;span style="color:#666">+&lt;/span> &lt;span style="color:#007020">str&lt;/span>(sup&lt;span style="color:#666">.&lt;/span>fly)) &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; Могу ли я летать? False&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic">####################################################&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic">## 7. Дополнительно&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic">####################################################&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Генераторы помогут выполнить ленивые вычисления&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">def&lt;/span> &lt;span style="color:#06287e">double_numbers&lt;/span>(iterable):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">for&lt;/span> i &lt;span style="color:#007020;font-weight:bold">in&lt;/span> iterable:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">yield&lt;/span> i &lt;span style="color:#666">+&lt;/span> i
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Генераторы эффективны с точки зрения памяти, потому что они загружают только данные,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># необходимые для обработки следующего значения в итерации.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Это позволяет им выполнять операции с недопустимо большими диапазонами значений.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># ПРИМЕЧАНИЕ: &amp;#34;range&amp;#34; заменяет &amp;#34;xrange&amp;#34; в Python 3.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">for&lt;/span> i &lt;span style="color:#007020;font-weight:bold">in&lt;/span> double_numbers(&lt;span style="color:#007020">range&lt;/span>(&lt;span style="color:#40a070">1&lt;/span>, &lt;span style="color:#40a070">900000000&lt;/span>)): &lt;span style="color:#60a0b0;font-style:italic"># &amp;#34;range&amp;#34; - генератор.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020">print&lt;/span>(i)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">if&lt;/span> i &lt;span style="color:#666">&amp;gt;=&lt;/span> &lt;span style="color:#40a070">30&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">break&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Так же, как вы можете создать интерпретации списков, вы можете создать и&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># интерпретации генераторов.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>values &lt;span style="color:#666">=&lt;/span> (&lt;span style="color:#666">-&lt;/span>x &lt;span style="color:#007020;font-weight:bold">for&lt;/span> x &lt;span style="color:#007020;font-weight:bold">in&lt;/span> [&lt;span style="color:#40a070">1&lt;/span>,&lt;span style="color:#40a070">2&lt;/span>,&lt;span style="color:#40a070">3&lt;/span>,&lt;span style="color:#40a070">4&lt;/span>,&lt;span style="color:#40a070">5&lt;/span>])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">for&lt;/span> x &lt;span style="color:#007020;font-weight:bold">in&lt;/span> values:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020">print&lt;/span>(x) &lt;span style="color:#60a0b0;font-style:italic"># Выводит -1 -2 -3 -4 -5&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Вы также можете преобразовать интерпретацию генератора непосредственно в список.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>values &lt;span style="color:#666">=&lt;/span> (&lt;span style="color:#666">-&lt;/span>x &lt;span style="color:#007020;font-weight:bold">for&lt;/span> x &lt;span style="color:#007020;font-weight:bold">in&lt;/span> [&lt;span style="color:#40a070">1&lt;/span>,&lt;span style="color:#40a070">2&lt;/span>,&lt;span style="color:#40a070">3&lt;/span>,&lt;span style="color:#40a070">4&lt;/span>,&lt;span style="color:#40a070">5&lt;/span>])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>gen_to_list &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#007020">list&lt;/span>(values)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020">print&lt;/span>(gen_to_list) &lt;span style="color:#60a0b0;font-style:italic"># =&amp;gt; [-1, -2, -3, -4, -5]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Декораторы&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># В этом примере &amp;#34;beg&amp;#34; оборачивает &amp;#34;say&amp;#34;.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Если say_please равно True, он изменит возвращаемое сообщение.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">from&lt;/span> &lt;span style="color:#0e84b5;font-weight:bold">functools&lt;/span> &lt;span style="color:#007020;font-weight:bold">import&lt;/span> wraps
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">def&lt;/span> &lt;span style="color:#06287e">beg&lt;/span>(target_function):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#555;font-weight:bold">@wraps&lt;/span>(target_function)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">def&lt;/span> &lt;span style="color:#06287e">wrapper&lt;/span>(&lt;span style="color:#666">*&lt;/span>args, &lt;span style="color:#666">**&lt;/span>kwargs):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> msg, say_please &lt;span style="color:#666">=&lt;/span> target_function(&lt;span style="color:#666">*&lt;/span>args, &lt;span style="color:#666">**&lt;/span>kwargs)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">if&lt;/span> say_please:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> &lt;span style="color:#4070a0">&amp;#34;&lt;/span>&lt;span style="color:#70a0d0">{}&lt;/span>&lt;span style="color:#4070a0"> &lt;/span>&lt;span style="color:#70a0d0">{}&lt;/span>&lt;span style="color:#4070a0">&amp;#34;&lt;/span>&lt;span style="color:#666">.&lt;/span>format(msg, &lt;span style="color:#4070a0">&amp;#34;Пожалуйста! Спасибо :)&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> msg
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> wrapper
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#555;font-weight:bold">@beg&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">def&lt;/span> &lt;span style="color:#06287e">say&lt;/span>(say_please&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#007020;font-weight:bold">False&lt;/span>):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> msg &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#4070a0">&amp;#34;Вы не купите мне сока?&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> msg, say_please
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020">print&lt;/span>(say()) &lt;span style="color:#60a0b0;font-style:italic"># Вы не купите мне сока?&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020">print&lt;/span>(say(say_please&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#007020;font-weight:bold">True&lt;/span>)) &lt;span style="color:#60a0b0;font-style:italic"># Вы не купите мне сока? Пожалуйста! Спасибо :)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Популярные команды Docker</title><link>https://romankurnovskii.com/ru/posts/docker-commands/</link><pubDate>Tue, 07 Jun 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/posts/docker-commands/</guid><description>&lt;p>&lt;em>&lt;a href="http://localhost:1313/en/posts/docker-commands/">Full in english&lt;/a>&lt;/em>&lt;/p>
&lt;h2 id="топ-10-комманд-docker">Топ 10 комманд Docker&lt;/h2>
&lt;ol>
&lt;li>docker ps — смотрим список запущенных контейнеров&lt;/li>
&lt;li>docker pull — загрузка образа&lt;/li>
&lt;li>docker build — собирает образ&lt;/li>
&lt;li>docker logs — смотрим логи&lt;/li>
&lt;li>docker run — запускаем контейнер&lt;/li>
&lt;li>docker stop — останавливает контейнер&lt;/li>
&lt;li>docker kill — «убивает» контейнер&lt;/li>
&lt;li>docker rm — удаляет контейнер&lt;/li>
&lt;li>docker rmi — удаляет образ&lt;/li>
&lt;li>docker volume ls — список томов&lt;/li>
&lt;/ol>
&lt;h2 id="docker-build">docker build&lt;/h2>
&lt;p>&lt;a href="https://docs.docker.com/engine/reference/commandline/build/">Документация&lt;/a>
Построить образ из Dockerfile.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>docker build &lt;span style="color:#666">[&lt;/span>DOCKERFILE PATH&lt;span style="color:#666">]&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>Флаги&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;code>--file -f&lt;/code> Путь, где находится Dockerfile&lt;/li>
&lt;li>&lt;code>--force-rm&lt;/code> Всегда удалять временные контейнеры.&lt;/li>
&lt;li>&lt;code>--no-cache&lt;/code> Не использовать кэш при построении образа.&lt;/li>
&lt;li>&lt;code>--rm&lt;/code> Удалить временные контейнеры после успешного построения.&lt;/li>
&lt;li>&lt;code>--tag -t&lt;/code> Название и возможный тег в формате &lt;code>name:tag&lt;/code> или просто тег &lt;code>my_tag&lt;/code> (опционально)&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Примеры&lt;/strong>&lt;/p>
&lt;p>Построить образ с меткой &lt;code>my-org/my-image&lt;/code>, используя Dockerfile в &lt;code>/tmp/Dockerfile&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>docker build -t my-org:my-image -f /tmp/Dockerfile
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="docker-run">docker run&lt;/h2>
&lt;p>&lt;a href="https://docs.docker.com/engine/reference/commandline/run/">Документация&lt;/a>&lt;/p>
&lt;p>Создает и запускает контейнер за один операционный шаг&lt;/p>
&lt;p>&lt;strong>Примеры&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>docker run -it ubuntu:latest /bin/bash
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Данная команда запустит контейнер ubuntu и при старте сразу запустит &lt;code>/bin/bash&lt;/code>. Если образ ubuntu не был загружен ранее, он загрузится перед запуском.&lt;/p>
&lt;p>&lt;strong>Флаги&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;code>-it&lt;/code> This will not make the container you started shut down immediately, as
it will create a pseudo-TTY session (&lt;code>-t&lt;/code>) and keep STDIN open (&lt;code>-i&lt;/code>)&lt;/li>
&lt;li>&lt;code>--rm&lt;/code> Automatically remove the container when it exit. Otherwise it will be
stored and visible running &lt;code>docker ps -a&lt;/code>.&lt;/li>
&lt;li>&lt;code>--detach -d&lt;/code> Run container in background and print container ID&lt;/li>
&lt;li>&lt;code>--volume -v&lt;/code> Bind mount a volume. Useful for accessing folders on your local
disk inside your docker container, like configuration files or storage that
should be persisted (database, logs etc.).&lt;/li>
&lt;/ul>
&lt;h2 id="docker-exec">docker exec&lt;/h2>
&lt;p>&lt;a href="https://docs.docker.com/engine/reference/commandline/exec/">Документация&lt;/a>
Выполнить команду внутри &lt;strong>запущенного&lt;/strong> контейнера.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>docker &lt;span style="color:#007020">exec&lt;/span> &lt;span style="color:#666">[&lt;/span>CONTAINER ID&lt;span style="color:#666">]&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>Флаги&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;code>--detach -d&lt;/code> Detached mode: запуск в фоновом режиме&lt;/li>
&lt;li>&lt;code>-it&lt;/code> запуск в интерактивном режиме. запуск псевдотерминала pseudo-TTY (&lt;code>-t&lt;/code>) и перенаправление ввода-вывода (STDIN) (&lt;code>-i&lt;/code>). Даёт доступ к выполнению команд в терминале контейнера.&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Примеры&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>docker &lt;span style="color:#007020">exec&lt;/span> &lt;span style="color:#666">[&lt;/span>CONTAINER ID&lt;span style="color:#666">]&lt;/span> touch /tmp/exec_works
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="docker-images">docker images&lt;/h2>
&lt;p>&lt;a href="https://docs.docker.com/engine/reference/commandline/images/">Документация&lt;/a>
Вывести список всех загруженных/созданных образов&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>docker images
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>Флаги&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;code>-q&lt;/code> показать только ID образов&lt;/li>
&lt;/ul>
&lt;h2 id="docker-inspect">docker inspect&lt;/h2>
&lt;p>&lt;a href="https://docs.docker.com/engine/reference/commandline/inspect">Документация&lt;/a>&lt;/p>
&lt;p>Показать всю информацию о контейнере.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>docker inspect &lt;span style="color:#666">[&lt;/span>CONTAINER ID&lt;span style="color:#666">]&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="docker-logs">docker logs&lt;/h2>
&lt;p>&lt;a href="https://docs.docker.com/engine/reference/commandline/logs/">Документация&lt;/a>&lt;/p>
&lt;p>Вывести логи контейнера.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>docker logs &lt;span style="color:#666">[&lt;/span>CONTAINER ID&lt;span style="color:#666">]&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>Флаги&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;code>--details&lt;/code> Показывает дополнительную информацию в логе.&lt;/li>
&lt;li>&lt;code>--follow -f&lt;/code> Следить за выводом журнала&lt;/li>
&lt;li>&lt;code>--timestamps -t&lt;/code> Показать журналы с меткой времени&lt;/li>
&lt;/ul>
&lt;h2 id="docker-ps">docker ps&lt;/h2>
&lt;p>&lt;a href="https://docs.docker.com/engine/reference/commandline/ps/">Документация&lt;/a>&lt;/p>
&lt;p>Показывает информацию о всех запущенных контейнерах.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>docker ps
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>Флаги&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;code>--all -a&lt;/code> Show all containers (default shows just running)&lt;/li>
&lt;li>&lt;code>--filter -f&lt;/code> Filter output based on conditions provided, &lt;code>docker ps -f=&amp;quot;name=&amp;quot;example&amp;quot;&lt;/code>&lt;/li>
&lt;li>&lt;code>--quiet -q&lt;/code> Only display numeric IDs&lt;/li>
&lt;/ul>
&lt;h2 id="docker-rmi">docker rmi&lt;/h2>
&lt;p>&lt;a href="https://docs.docker.com/engine/reference/commandline/rmi/">Документация&lt;/a>&lt;/p>
&lt;p>Удалить один или несколько образов.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>docker rmi &lt;span style="color:#666">[&lt;/span>IMAGE ID&lt;span style="color:#666">]&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>Флаги&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;code>--force -f&lt;/code> Force removal of the image&lt;/li>
&lt;/ul>
&lt;h2 id="советы-и-рекомендации-по-докеру">Советы и рекомендации по докеру&lt;/h2>
&lt;p>Сборник полезных советов по Docker.&lt;/p>
&lt;h3 id="удалить-все-контейнеры">Удалить все контейнеры&lt;/h3>
&lt;p>&lt;strong>NOTE:&lt;/strong> Удалить ВСЕ контенеры.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>docker container prune
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>или&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>docker rm &lt;span style="color:#007020;font-weight:bold">$(&lt;/span>docker ps -a -q&lt;span style="color:#007020;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="удалить-все-непомеченные-контейнеры">Удалить все непомеченные контейнеры&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>docker image prune
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="вывести-сколько-памяти-занимает-docker">Вывести сколько памяти занимает Docker&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>docker system df
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="получить-ip-адрес-работающего-контейнера">Получить IP-адрес работающего контейнера&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>docker inspect &lt;span style="color:#666">[&lt;/span>CONTAINER ID&lt;span style="color:#666">]&lt;/span> | grep -wm1 IPAddress | cut -d &lt;span style="color:#4070a0">&amp;#39;&amp;#34;&amp;#39;&lt;/span> -f &lt;span style="color:#40a070">4&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="сгенерировать-образ-на-основе-файла-dockerfile-и-добавить-этому-образу-имя-и-версию">Сгенерировать образ на основе файла Dockerfile и добавить этому образу имя и версию&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>docker build -t new_image_name:v1 .
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>.&lt;/code> означает текущую директорию, где расположен файл Dockerfile.&lt;/p>
&lt;h3 id="сгенерировать-из-запущенного-контейнера-новый-образ">Сгенерировать из запущенного контейнера новый образ&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>docker commit &lt;span style="color:#666">[&lt;/span>CONTAINER ID&lt;span style="color:#666">]&lt;/span> &lt;span style="color:#666">[&lt;/span>NEW IMAGE NAME&lt;span style="color:#666">]&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="убить-все-запущенные-контейнеры">&amp;ldquo;Убить&amp;rdquo; все запущенные контейнеры&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>docker &lt;span style="color:#007020">kill&lt;/span> &lt;span style="color:#007020;font-weight:bold">$(&lt;/span>docker ps -q&lt;span style="color:#007020;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="ссылки">Ссылки&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://docs.docker.com/engine/reference/run/">docs.docker.com&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/wsargent/docker-cheat-sheet">docker-cheat-sheet&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://sourabhbajaj.com/mac-setup/Docker/">https://sourabhbajaj.com/mac-setup/Docker/&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Как сделать редирект на другой URL в JavaScript</title><link>https://romankurnovskii.com/ru/posts/howto-redirect-to-url/</link><pubDate>Mon, 06 Jun 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/posts/howto-redirect-to-url/</guid><description>&lt;p>Пользователя можно перенаправлять с одной веб-страницы на любую другую несколькими способами.&lt;/p>
&lt;ul>
&lt;li>с помощью обновления мета-данных HTML. Перенаправления на стороне сервера. Например, используя файл &lt;em>.htaccess&lt;/em>, PHP&lt;/li>
&lt;li>с помощью перенаправления на стороне клиента через JavaScript.&lt;/li>
&lt;/ul>
&lt;p>Для перенаправления на другой URL с помощью JavaScript используем &lt;code>window.location.href&lt;/code> или &lt;code>window.location.replace()&lt;/code>.
Передать второй аргумент, чтобы произвести клик по ссылке (true - по умолчанию) или перенаправление по HTTP (false).&lt;/p>
&lt;h2 id="javascript-функции">JavaScript функции&lt;/h2>
&lt;h3 id="логика">Логика&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">const&lt;/span> newUrl &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#4070a0">&amp;#39;https://www.google.com/&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020">window&lt;/span>.location.href &lt;span style="color:#666">=&lt;/span> newUrl; &lt;span style="color:#60a0b0;font-style:italic">// 1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic">&lt;/span>&lt;span style="color:#007020">window&lt;/span>.location.replace(newUrl); &lt;span style="color:#60a0b0;font-style:italic">// 2
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic">&lt;/span>&lt;span style="color:#007020">window&lt;/span>.location.assign(newUrl) &lt;span style="color:#60a0b0;font-style:italic">// 3
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="пример-функции">Пример функции&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">const&lt;/span> redirect &lt;span style="color:#666">=&lt;/span> (url, asLink &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#007020;font-weight:bold">true&lt;/span>) =&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> asLink &lt;span style="color:#666">?&lt;/span> (&lt;span style="color:#007020">window&lt;/span>.location.href &lt;span style="color:#666">=&lt;/span> url) &lt;span style="color:#666">:&lt;/span> &lt;span style="color:#007020">window&lt;/span>.location.replace(url);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="javascript-в-html">JavaScript в html&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-html" data-lang="html">&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#062873;font-weight:bold">html&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#062873;font-weight:bold">head&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#062873;font-weight:bold">script&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">const&lt;/span> newUrl &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#4070a0">&amp;#39;https://www.google.com/&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020">window&lt;/span>.location.href &lt;span style="color:#666">=&lt;/span> newUrl;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;/&lt;span style="color:#062873;font-weight:bold">script&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#60a0b0;font-style:italic">&amp;lt;!--...--&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="display:flex;">&lt;span>redirect(&lt;span style="color:#4070a0">&amp;#39;https://google.com&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="метатег-html">метатег HTML&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-html" data-lang="html">&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#062873;font-weight:bold">html&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#062873;font-weight:bold">head&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#062873;font-weight:bold">meta&lt;/span> &lt;span style="color:#4070a0">http-equiv&lt;/span>&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#4070a0">&amp;#34;refresh&amp;#34;&lt;/span> &lt;span style="color:#4070a0">content&lt;/span>&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#4070a0">&amp;#34;0; url=https://example.com/newlocation&amp;#34;&lt;/span> /&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#062873;font-weight:bold">head&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;/&lt;span style="color:#062873;font-weight:bold">html&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>После того как загрузится ткущая страница, браузер перенаправит на новую страницу, ожидая при этом 0 &lt;code>content=&amp;quot;0&lt;/code> секунд.&lt;/p>
&lt;p>Чтобы выполнялась отложенная переадресация, укажите нужное количество секунд в атрибуте content:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-html" data-lang="html">&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#062873;font-weight:bold">html&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#062873;font-weight:bold">head&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#062873;font-weight:bold">meta&lt;/span> &lt;span style="color:#4070a0">http-equiv&lt;/span>&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#4070a0">&amp;#34;refresh&amp;#34;&lt;/span> &lt;span style="color:#4070a0">content&lt;/span>&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#4070a0">&amp;#34;10; url=https://example.com/newlocation&amp;#34;&lt;/span> /&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#062873;font-weight:bold">head&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;/&lt;span style="color:#062873;font-weight:bold">html&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Шпаргалка tar архиватор</title><link>https://romankurnovskii.com/ru/posts/cheat-sheet-command-tar/</link><pubDate>Sun, 05 Jun 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/posts/cheat-sheet-command-tar/</guid><description>&lt;h2 id="кратко">Кратко&lt;/h2>
&lt;p>Создать:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>tar cf archive.tar directory
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Распаковать:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>tar xf archive.tar
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="создание">Создание&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>mkdir my_dir &lt;span style="color:#60a0b0;font-style:italic"># Создаем папку&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>tar cf dir_archive.tar my_dir &lt;span style="color:#60a0b0;font-style:italic"># Создаем архив с папкой&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ll &lt;span style="color:#60a0b0;font-style:italic"># Проверяем содержимое текущего каталога&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># -rw-r--r-- 1 r staff 1.5K Jun 4 14:42 dir_archive.tar&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># drwxr-xr-x 2 r staff 64B Jun 4 14:42 my_dir&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="распаковка">Распаковка&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>tar xf dir_archive.tar
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="сжатие">Сжатие&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>tar czf dir_archive.tar.gz dir_archive.tar
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="распаковка-сжатого-файла">Распаковка сжатого файла&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>tar xzf dir_archive.tar.gz
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="сжатие-с-помощью-bzip2">Сжатие с помощью bzip2&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>tar cjf dir_archive.tar.bz2 my_dir
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="распаковка-с-помощью-bzip2">Распаковка с помощью bzip2&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>tar xjf dir_archive.tar.bz2
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="просмотр-содержимого-архива">Просмотр содержимого архива&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>tar -tvf dir_archive.tar
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Как переименовать файлы в Python</title><link>https://romankurnovskii.com/ru/posts/howto-rename-files-in-python/</link><pubDate>Sat, 04 Jun 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/posts/howto-rename-files-in-python/</guid><description>&lt;h2 id="osrename">os.rename&lt;/h2>
&lt;p>Если имеется весь путь до пути файла:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>old_source &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#4070a0">&amp;#39;/Users/r/Desktop/old_source.txt&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>new_source &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#4070a0">&amp;#39;/Users/r/Desktop/new_source.txt&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>os&lt;span style="color:#666">.&lt;/span>rename(&lt;span style="color:#4070a0">&amp;#34;old_source&amp;#34;&lt;/span>, &lt;span style="color:#4070a0">&amp;#34;new_source&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Если имеется только имя файла, воспользуемся &lt;code>os.path.splitext()&lt;/code>, который возвращает кортеж из имени файла и расширения:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">import&lt;/span> &lt;span style="color:#0e84b5;font-weight:bold">os&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">for&lt;/span> file &lt;span style="color:#007020;font-weight:bold">in&lt;/span> os&lt;span style="color:#666">.&lt;/span>listdir():
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name, ext &lt;span style="color:#666">=&lt;/span> os&lt;span style="color:#666">.&lt;/span>path&lt;span style="color:#666">.&lt;/span>splitext(file) &lt;span style="color:#60a0b0;font-style:italic"># return (&amp;#39;путь до файла без расщирения&amp;#39;, &amp;#39;.txt&amp;#39;)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> new_name &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#4070a0">f&lt;/span>&lt;span style="color:#4070a0">&amp;#34;&lt;/span>&lt;span style="color:#70a0d0">{&lt;/span>name&lt;span style="color:#70a0d0">}&lt;/span>&lt;span style="color:#4070a0">_new&lt;/span>&lt;span style="color:#70a0d0">{&lt;/span>ext&lt;span style="color:#70a0d0">}&lt;/span>&lt;span style="color:#4070a0">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> os&lt;span style="color:#666">.&lt;/span>rename(file, new_name)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="pathlib">pathlib&lt;/h2>
&lt;p>С помощью встроенного модуля &lt;a href="https://docs.python.org/3/library/pathlib.html">pathlib&lt;/a>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>Path&lt;span style="color:#666">.&lt;/span>rename(new_name)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">from&lt;/span> &lt;span style="color:#0e84b5;font-weight:bold">pathlib&lt;/span> &lt;span style="color:#007020;font-weight:bold">import&lt;/span> Path
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">for&lt;/span> file &lt;span style="color:#007020;font-weight:bold">in&lt;/span> os&lt;span style="color:#666">.&lt;/span>listdir():
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> f &lt;span style="color:#666">=&lt;/span> Path(file)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> new_name &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#4070a0">f&lt;/span>&lt;span style="color:#4070a0">&amp;#34;&lt;/span>&lt;span style="color:#70a0d0">{&lt;/span>f&lt;span style="color:#666">.&lt;/span>stem&lt;span style="color:#70a0d0">}&lt;/span>&lt;span style="color:#4070a0">_new&lt;/span>&lt;span style="color:#70a0d0">{&lt;/span>f&lt;span style="color:#666">.&lt;/span>suffix&lt;span style="color:#70a0d0">}&lt;/span>&lt;span style="color:#4070a0">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> f&lt;span style="color:#666">.&lt;/span>rename(new_name)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="shutilmove">shutil.move&lt;/h2>
&lt;p>Модуль &lt;a href="https://docs.python.org/3/library/shutil.html">Shutil&lt;/a> предлагает ряд высокоуровневых операций с файлами и коллекциями файлов. В частности, предусмотрены функции, поддерживающие копирование и удаление файлов.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">import&lt;/span> &lt;span style="color:#0e84b5;font-weight:bold">shutil&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>old_source &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#4070a0">&amp;#39;/Users/r/Desktop/old_source.txt&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>new_source &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#4070a0">&amp;#39;/Users/r/Desktop/new_source.txt&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>newFileName &lt;span style="color:#666">=&lt;/span> shutil&lt;span style="color:#666">.&lt;/span>move(old_source, new_source)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020">print&lt;/span>(&lt;span style="color:#4070a0">&amp;#34;Новый файл:&amp;#34;&lt;/span>, newFileName)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Новый файл: /Users/r/Desktop/new_source.txt&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Как сделать глубокое клонирование объекта в JavaScript</title><link>https://romankurnovskii.com/ru/posts/howto-create-deepclone-js/</link><pubDate>Thu, 02 Jun 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/posts/howto-create-deepclone-js/</guid><description>&lt;p>В JavaScript объекты копируются по ссылке. Это означает, что фактически две(или более) ссылок ссылается на &lt;em>один&lt;/em> объект
Для глубокого клонирования мы можем воспользоваться рекурсией&lt;/p>
&lt;p>Воспользуемся методом &lt;code>Object.assign()&lt;/code> и возьмем пустой объект &lt;code>({})&lt;/code>, чтобы создать клон оригинального объекта.
Используем &lt;code>Object.keys()&lt;/code> и &lt;code>Array.prototype.forEach()&lt;/code> для определения ключей-значений, которые нужно полностью клонировать (не ссылаться на них).&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">const&lt;/span> deepClone &lt;span style="color:#666">=&lt;/span> obj =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">let&lt;/span> clone &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#007020">Object&lt;/span>.assign({}, obj);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020">Object&lt;/span>.keys(clone).forEach(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> key =&amp;gt; (clone[key] &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#007020;font-weight:bold">typeof&lt;/span> obj[key] &lt;span style="color:#666">===&lt;/span> &lt;span style="color:#4070a0">&amp;#39;object&amp;#39;&lt;/span> &lt;span style="color:#666">?&lt;/span> deepClone(obj[key]) &lt;span style="color:#666">:&lt;/span> obj[key])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> );
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> &lt;span style="color:#007020">Array&lt;/span>.isArray(obj) &lt;span style="color:#666">&amp;amp;&amp;amp;&lt;/span> obj.length
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#666">?&lt;/span> (clone.length &lt;span style="color:#666">=&lt;/span> obj.length) &lt;span style="color:#666">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#007020">Array&lt;/span>.from(clone)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#666">:&lt;/span> &lt;span style="color:#007020">Array&lt;/span>.isArray(obj)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#666">?&lt;/span> &lt;span style="color:#007020">Array&lt;/span>.from(obj)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#666">:&lt;/span> clone;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>};
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">const&lt;/span> a &lt;span style="color:#666">=&lt;/span> { foo&lt;span style="color:#666">:&lt;/span> &lt;span style="color:#4070a0">&amp;#39;bar&amp;#39;&lt;/span>, obj&lt;span style="color:#666">:&lt;/span> { a&lt;span style="color:#666">:&lt;/span> &lt;span style="color:#40a070">1&lt;/span>, b&lt;span style="color:#666">:&lt;/span> &lt;span style="color:#40a070">2&lt;/span> } };
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">const&lt;/span> b &lt;span style="color:#666">=&lt;/span> deepClone(a); &lt;span style="color:#60a0b0;font-style:italic">// a !== b, a.obj !== b.obj
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>PyScript - Python, встроенный в HTML</title><link>https://romankurnovskii.com/ru/posts/pyscript-python-embedded-in-html/</link><pubDate>Fri, 20 May 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/posts/pyscript-python-embedded-in-html/</guid><description>&lt;h2 id="pyscript">PyScript&lt;/h2>
&lt;p>&lt;a href="https://pyscript.net/">PyScript&lt;/a> - средство запуска Python в браузере, встроенное в HTML, был анонсирован на мероприятии PyCon в Солт-Лейк-Сити, США.
&lt;p class="md__image">
&lt;img
src="images/pyscript.jpeg"
id="zoom-default"
alt="PyScript"
loading="lazy"
/>
&lt;/p>
&lt;em>Кнопка &lt;code>Instl&lt;/code> здесь для шутки, так как установка не требуется&lt;/em>&lt;/p>
&lt;p>PyScript зависит от существующего проекта Pyodide, который является скомпилированным в WebAssembly интерпретатором CPython 3.8, позволяющим запускать Python в браузере, а также скомпилированных научных пакетов Python.&lt;/p>
&lt;p>Связывание с файлами библиотеки CSS и JavaScript PyScript позволяет разработчикам встраивать код Python с помощью тега &lt;code>&amp;lt;py-script&amp;gt;&lt;/code>, а также компонент &lt;code>&amp;lt;py-repl&amp;gt;&lt;/code> (Read, Evaluate, Print, Loop), который позволяет Python печатать и выполняться динамически.&lt;/p>
&lt;p>PyScript является открытым исходным кодом с использованием лицензии Apache 2.0.&lt;/p>
&lt;p>Согласно сайту проекта, цели включают в себя включение Python в браузере без настройки на стороне сервера, запуск популярных пакетов Python, двунаправленную связь между JavaScript и Python и визуальную разработку с использованием «легкодоступных контролируемых компонентов пользовательского интерфейса, таких как кнопки, контейнеры, текстовые поля и многое другое».&lt;/p>
&lt;p>Упрощение использования в браузере порадует не только ученых, разрабатывающих аналитические приложения, но и программистов любого профиля, ищущих альтернативу JavaScript — хотя разработчики проекта предупреждают, что это «чрезвычайно экспериментальный проект» и что он только проверен в веб-браузере Google Chrome.&lt;/p>
&lt;blockquote>
&lt;p>Please be advised that PyScript is very alpha and under heavy development. There are many known issues, from usability to loading times, and you should expect things to change often. We encourage people to play and explore with PyScript, but at this time we do not recommend using it for production.&lt;/p>&lt;/blockquote>
&lt;h2 id="туториал-pyscript">Туториал PyScript&lt;/h2>
&lt;p>Попробуем скачать, настроить и запустить приложение PyScript в браузере.&lt;/p>
&lt;h3 id="рабочая-среда">Рабочая среда&lt;/h3>
&lt;p>Разработчики PyScript пишут, что для работы не требуется никакой среды разработки, кроме веб-браузера. Попробуем запустить в Chrome.&lt;/p>
&lt;h3 id="установка">Установка&lt;/h3>
&lt;p>Можно скачать весь пакет с &lt;a href="https://pyscript.net/">сайта&lt;/a>, но будем использовать скрипт, с сервера pyscript.net&lt;/p>
&lt;h3 id="hello-world">Hello World&lt;/h3>
&lt;p>Создаем файл hello.html&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-html" data-lang="html">&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#062873;font-weight:bold">html&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#062873;font-weight:bold">head&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#062873;font-weight:bold">link&lt;/span> &lt;span style="color:#4070a0">rel&lt;/span>&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#4070a0">&amp;#34;stylesheet&amp;#34;&lt;/span> &lt;span style="color:#4070a0">href&lt;/span>&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#4070a0">&amp;#34;https://pyscript.net/latest/pyscript.css&amp;#34;&lt;/span> /&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#062873;font-weight:bold">script&lt;/span> &lt;span style="color:#4070a0">defer&lt;/span> &lt;span style="color:#4070a0">src&lt;/span>&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#4070a0">&amp;#34;https://pyscript.net/latest/pyscript.js&amp;#34;&lt;/span>&amp;gt;&amp;lt;/&lt;span style="color:#062873;font-weight:bold">script&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#062873;font-weight:bold">head&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#062873;font-weight:bold">body&lt;/span>&amp;gt; &amp;lt;&lt;span style="color:#062873;font-weight:bold">py-script&lt;/span>&amp;gt; print(&amp;#39;Hello, World!&amp;#39;) &amp;lt;/&lt;span style="color:#062873;font-weight:bold">py-script&lt;/span>&amp;gt; &amp;lt;/&lt;span style="color:#062873;font-weight:bold">body&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;/&lt;span style="color:#062873;font-weight:bold">html&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Тег &lt;code>&amp;lt;py-script&amp;gt;&lt;/code> расположен внутри HTML body. Внутри этого тега будем пиcать Python код.&lt;/p>
&lt;p>Откроем файл в браузере
&lt;p class="md__image">
&lt;img
src="images/pyscript-embedded.png"
id="zoom-default"
alt="PyScript"
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;p>Работает!&lt;/p>
&lt;h3 id="тег-py-script">Тег py-script&lt;/h3>
&lt;p>Тег &lt;code>&amp;lt;py-script&amp;gt;&lt;/code> позволяет писать многострочный код&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-html" data-lang="html">&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#062873;font-weight:bold">html&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#062873;font-weight:bold">head&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#062873;font-weight:bold">link&lt;/span> &lt;span style="color:#4070a0">rel&lt;/span>&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#4070a0">&amp;#34;stylesheet&amp;#34;&lt;/span> &lt;span style="color:#4070a0">href&lt;/span>&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#4070a0">&amp;#34;https://pyscript.net/latest/pyscript.css&amp;#34;&lt;/span> /&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#062873;font-weight:bold">script&lt;/span> &lt;span style="color:#4070a0">defer&lt;/span> &lt;span style="color:#4070a0">src&lt;/span>&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#4070a0">&amp;#34;https://pyscript.net/latest/pyscript.js&amp;#34;&lt;/span>&amp;gt;&amp;lt;/&lt;span style="color:#062873;font-weight:bold">script&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;/&lt;span style="color:#062873;font-weight:bold">head&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#062873;font-weight:bold">body&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#062873;font-weight:bold">py-script&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print(&amp;#34;Let&amp;#39;s compute π:&amp;#34;)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> def compute_pi(n):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> pi = 2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> for i in range(1,n):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> pi *= 4 * i ** 2 / (4 * i ** 2 - 1)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> return pi
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> pi = compute_pi(100000)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> s = f&amp;#34;π is approximately {pi:.3f}&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print(s)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#062873;font-weight:bold">py-script&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;/&lt;span style="color:#062873;font-weight:bold">body&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;/&lt;span style="color:#062873;font-weight:bold">html&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Важно соблюдать отступы в самом блоке Python. Но Начальную строку кода можно начинать и с начала строки&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-html" data-lang="html">&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#062873;font-weight:bold">html&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#062873;font-weight:bold">head&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#062873;font-weight:bold">link&lt;/span> &lt;span style="color:#4070a0">rel&lt;/span>&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#4070a0">&amp;#34;stylesheet&amp;#34;&lt;/span> &lt;span style="color:#4070a0">href&lt;/span>&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#4070a0">&amp;#34;https://pyscript.net/latest/pyscript.css&amp;#34;&lt;/span> /&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#062873;font-weight:bold">script&lt;/span> &lt;span style="color:#4070a0">defer&lt;/span> &lt;span style="color:#4070a0">src&lt;/span>&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#4070a0">&amp;#34;https://pyscript.net/latest/pyscript.js&amp;#34;&lt;/span>&amp;gt;&amp;lt;/&lt;span style="color:#062873;font-weight:bold">script&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;/&lt;span style="color:#062873;font-weight:bold">head&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#062873;font-weight:bold">body&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#062873;font-weight:bold">py-script&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print(&amp;#34;Let&amp;#39;s compute π:&amp;#34;)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>def compute_pi(n):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> pi = 2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> for i in range(1,n):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> pi *= 4 * i ** 2 / (4 * i ** 2 - 1)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> return pi
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>pi = compute_pi(100000)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>s = f&amp;#34;π is approximately {pi:.3f}&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print(s)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#062873;font-weight:bold">py-script&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;/&lt;span style="color:#062873;font-weight:bold">body&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;/&lt;span style="color:#062873;font-weight:bold">html&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="запись-внутри-html-элементов">Запись внутри HTML элементов&lt;/h4>
&lt;p>В приведенном выше примере у нас был один тег &lt;code>&amp;lt;py-script&amp;gt;&lt;/code>, выводящий одну или несколько строк на страницу по порядку.
Внутри &lt;code>&amp;lt;py-script&amp;gt;&lt;/code> есть доступ к модулю pyscript, который предоставляет метод .write() для отправки строк в помеченные элементы на странице.&lt;/p>
&lt;p>Например, мы добавим некоторые элементы стиля и предоставим заполнители для тега &lt;code>&amp;lt;py-script&amp;gt;&lt;/code> для записи.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-html" data-lang="html">&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#062873;font-weight:bold">html&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#062873;font-weight:bold">head&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#062873;font-weight:bold">link&lt;/span> &lt;span style="color:#4070a0">rel&lt;/span>&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#4070a0">&amp;#34;stylesheet&amp;#34;&lt;/span> &lt;span style="color:#4070a0">href&lt;/span>&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#4070a0">&amp;#34;https://pyscript.net/latest/pyscript.css&amp;#34;&lt;/span> /&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#062873;font-weight:bold">script&lt;/span> &lt;span style="color:#4070a0">defer&lt;/span> &lt;span style="color:#4070a0">src&lt;/span>&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#4070a0">&amp;#34;https://pyscript.net/latest/pyscript.js&amp;#34;&lt;/span>&amp;gt;&amp;lt;/&lt;span style="color:#062873;font-weight:bold">script&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#062873;font-weight:bold">link&lt;/span> &lt;span style="color:#4070a0">href&lt;/span>&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#4070a0">&amp;#34;https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css&amp;#34;&lt;/span> &lt;span style="color:#4070a0">rel&lt;/span>&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#4070a0">&amp;#34;stylesheet&amp;#34;&lt;/span> &lt;span style="color:#4070a0">crossorigin&lt;/span>&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#4070a0">&amp;#34;anonymous&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#062873;font-weight:bold">head&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#062873;font-weight:bold">body&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#062873;font-weight:bold">b&lt;/span>&amp;gt;&amp;lt;&lt;span style="color:#062873;font-weight:bold">p&lt;/span>&amp;gt;Today is &amp;lt;&lt;span style="color:#062873;font-weight:bold">u&lt;/span>&amp;gt;&amp;lt;&lt;span style="color:#062873;font-weight:bold">label&lt;/span> &lt;span style="color:#4070a0">id&lt;/span>&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#4070a0">&amp;#39;today&amp;#39;&lt;/span>&amp;gt;&amp;lt;/&lt;span style="color:#062873;font-weight:bold">label&lt;/span>&amp;gt;&amp;lt;/&lt;span style="color:#062873;font-weight:bold">u&lt;/span>&amp;gt;&amp;lt;/&lt;span style="color:#062873;font-weight:bold">p&lt;/span>&amp;gt;&amp;lt;/&lt;span style="color:#062873;font-weight:bold">b&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#062873;font-weight:bold">br&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#062873;font-weight:bold">div&lt;/span> &lt;span style="color:#4070a0">id&lt;/span>&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#4070a0">&amp;#34;my-custom-pi&amp;#34;&lt;/span> &lt;span style="color:#4070a0">class&lt;/span>&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#4070a0">&amp;#34;alert alert-primary&amp;#34;&lt;/span>&amp;gt;&amp;lt;/&lt;span style="color:#062873;font-weight:bold">div&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#062873;font-weight:bold">py-script&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>import datetime as dt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>pyscript.write(&amp;#39;today&amp;#39;, dt.date.today().strftime(&amp;#39;%A %B %d, %Y&amp;#39;))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>def compute_pi(n):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> pi = 2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> for i in range(1,n):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> pi *= 4 * i ** 2 / (4 * i ** 2 - 1)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> return pi
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>pi = compute_pi(100000)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>pyscript.write(&amp;#39;my-custom-pi&amp;#39;, f&amp;#39;π is approximately {pi:.3f}&amp;#39;)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#062873;font-weight:bold">py-script&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#062873;font-weight:bold">body&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;/&lt;span style="color:#062873;font-weight:bold">html&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;p class="md__image">
&lt;img
src="images/pyscript-embedded2.png"
id="zoom-default"
alt="PyScript"
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;h3 id="тег-py-env">Тег py-env&lt;/h3>
&lt;p>В дополнение к стандартной библиотеке Python и модулю pyscript, многие сторонние пакеты работают с PyScript. Чтобы их использовать, нужно объявить зависимости с помощью тега &lt;code>&amp;lt;py-env&amp;gt;&lt;/code> в заголовке HTML. Вы также можете ссылаться на файлы &lt;code>.whl&lt;/code> прямо на диске&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-html" data-lang="html">&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#062873;font-weight:bold">py-env&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &amp;#39;./static/wheels/travertino-0.1.3-py3-none-any.whl&amp;#39;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &amp;#39;./static/wheels/my-other-package-0.0.1-py3-none-any.whl&amp;#39;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;/&lt;span style="color:#062873;font-weight:bold">py-env&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#062873;font-weight:bold">py-script&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> #my python code ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;/&lt;span style="color:#062873;font-weight:bold">py-script&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>Пример с NumPy&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-html" data-lang="html">&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#062873;font-weight:bold">html&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#062873;font-weight:bold">head&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#062873;font-weight:bold">link&lt;/span> &lt;span style="color:#4070a0">rel&lt;/span>&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#4070a0">&amp;#34;stylesheet&amp;#34;&lt;/span> &lt;span style="color:#4070a0">href&lt;/span>&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#4070a0">&amp;#34;https://pyscript.net/latest/pyscript.css&amp;#34;&lt;/span> /&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#062873;font-weight:bold">script&lt;/span> &lt;span style="color:#4070a0">defer&lt;/span> &lt;span style="color:#4070a0">src&lt;/span>&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#4070a0">&amp;#34;https://pyscript.net/latest/pyscript.js&amp;#34;&lt;/span>&amp;gt;&amp;lt;/&lt;span style="color:#062873;font-weight:bold">script&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#062873;font-weight:bold">py-env&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - numpy
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - matplotlib
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#062873;font-weight:bold">py-env&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#062873;font-weight:bold">head&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#062873;font-weight:bold">body&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#062873;font-weight:bold">h1&lt;/span>&amp;gt;Let&amp;#39;s plot random numbers&amp;lt;/&lt;span style="color:#062873;font-weight:bold">h1&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#062873;font-weight:bold">div&lt;/span> &lt;span style="color:#4070a0">id&lt;/span>&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#4070a0">&amp;#34;plot&amp;#34;&lt;/span>&amp;gt;&amp;lt;/&lt;span style="color:#062873;font-weight:bold">div&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#062873;font-weight:bold">py-script&lt;/span> &lt;span style="color:#4070a0">output&lt;/span>&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#4070a0">&amp;#34;plot&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>import matplotlib.pyplot as plt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>import numpy as np
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>x = np.random.randn(1000)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>y = np.random.randn(1000)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>fig, ax = plt.subplots()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ax.scatter(x, y)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>fig
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#062873;font-weight:bold">py-script&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#062873;font-weight:bold">body&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;/&lt;span style="color:#062873;font-weight:bold">html&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="импорт-локальный-модулей">Импорт локальный модулей&lt;/h4>
&lt;p>Мы также можем использовать собсвтенные модули, которые импортируем внутри тега &lt;code>&amp;lt;py-script&amp;gt;&lt;/code>&lt;/p>
&lt;p>Например, создадим файл `data.py&amp;rsquo; и запишем в него собственную функцию&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># data.py&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">import&lt;/span> &lt;span style="color:#0e84b5;font-weight:bold">numpy&lt;/span> &lt;span style="color:#007020;font-weight:bold">as&lt;/span> &lt;span style="color:#0e84b5;font-weight:bold">np&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">def&lt;/span> &lt;span style="color:#06287e">make_x_and_y&lt;/span>(n):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> x &lt;span style="color:#666">=&lt;/span> np&lt;span style="color:#666">.&lt;/span>random&lt;span style="color:#666">.&lt;/span>randn(n)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> y &lt;span style="color:#666">=&lt;/span> np&lt;span style="color:#666">.&lt;/span>random&lt;span style="color:#666">.&lt;/span>randn(n)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> x, y
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Внутри тега &lt;code>&amp;lt;py-env&amp;gt;&lt;/code> добавим стандартные модули и путь до нашего локального модуля&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-html" data-lang="html">&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#062873;font-weight:bold">html&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#062873;font-weight:bold">head&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#062873;font-weight:bold">link&lt;/span> &lt;span style="color:#4070a0">rel&lt;/span>&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#4070a0">&amp;#34;stylesheet&amp;#34;&lt;/span> &lt;span style="color:#4070a0">href&lt;/span>&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#4070a0">&amp;#34;https://pyscript.net/latest/pyscript.css&amp;#34;&lt;/span> /&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#062873;font-weight:bold">script&lt;/span> &lt;span style="color:#4070a0">defer&lt;/span> &lt;span style="color:#4070a0">src&lt;/span>&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#4070a0">&amp;#34;https://pyscript.net/latest/pyscript.js&amp;#34;&lt;/span>&amp;gt;&amp;lt;/&lt;span style="color:#062873;font-weight:bold">script&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#062873;font-weight:bold">py-env&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - numpy
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - matplotlib
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - paths:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - /data.py
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#062873;font-weight:bold">py-env&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#062873;font-weight:bold">head&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#062873;font-weight:bold">body&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#062873;font-weight:bold">h1&lt;/span>&amp;gt;Let&amp;#39;s plot random numbers&amp;lt;/&lt;span style="color:#062873;font-weight:bold">h1&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#062873;font-weight:bold">div&lt;/span> &lt;span style="color:#4070a0">id&lt;/span>&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#4070a0">&amp;#34;plot&amp;#34;&lt;/span>&amp;gt;&amp;lt;/&lt;span style="color:#062873;font-weight:bold">div&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#062873;font-weight:bold">py-script&lt;/span> &lt;span style="color:#4070a0">output&lt;/span>&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#4070a0">&amp;#34;plot&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>import matplotlib.pyplot as plt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>from data import make_x_and_y
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>x, y = make_x_and_y(n=1000)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>fig, ax = plt.subplots()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ax.scatter(x, y)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>fig
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#062873;font-weight:bold">py-script&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#062873;font-weight:bold">body&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;/&lt;span style="color:#062873;font-weight:bold">html&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="тег-py-repl">Тег py-repl&lt;/h3>
&lt;p>Тег &lt;code>&amp;lt;py-repl&amp;gt;&lt;/code> создает компонент REPL(Read–eval–print loop), который отображается на странице как редактор кода, что позволяет писать исполняемый код в строке.&lt;/p>
&lt;h3 id="тег-py-config">Тег py-config&lt;/h3>
&lt;p>Тег &lt;code>&amp;lt;py-config&amp;gt;&lt;/code> используется для установки и настройки общих метаданных о вашем приложении PyScript в формате YAML.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-html" data-lang="html">&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#062873;font-weight:bold">py-config&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - autoclose_loader: false
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - runtimes:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> src: &amp;#34;https://cdn.jsdelivr.net/pyodide/v0.20.0/full/pyodide.js&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: pyodide-0.20
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> lang: python
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;/&lt;span style="color:#062873;font-weight:bold">py-config&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="тег-py-title">Тег py-title&lt;/h3>
&lt;p>Тег визуального отображения. Добавляет компонент заголовка статического текста, который стилизует текст внутри тега как заголовок страницы.&lt;/p>
&lt;h3 id="тег-py-box">Тег py-box&lt;/h3>
&lt;p>Создает объект-контейнер, который можно использовать для размещения одного или нескольких визуальных компонентов, определяющих, как элементы &lt;code>&amp;lt;py-box&amp;gt;&lt;/code> должны выравниваться и отображаться на странице.&lt;/p>
&lt;h3 id="тег-py-inputbox">Тег py-inputbox&lt;/h3>
&lt;p>Позволяет вставить окно с текстовым полем&lt;/p>
&lt;h3 id="тег-py-button">Тег py-button&lt;/h3>
&lt;p>Добавляет кнопку, к которой авторы могут добавлять метки и обработчики событий для действий на кнопке, таких как on_focus или on_click.&lt;/p>
&lt;h2 id="ресурсы">Ресурсы&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://pyscript.net/examples/">Примеры использования PyScript&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://community.anaconda.cloud/c/tech-topics/pyscript/">Вопросы по PyScript&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Руководство по оформлению Markdown файлов</title><link>https://romankurnovskii.com/ru/posts/markdown-syntax/</link><pubDate>Thu, 21 Apr 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/posts/markdown-syntax/</guid><description>&lt;p>Эта статья предлагает пример базового синтаксиса Markdown, который можно использовать в файлах содержимого Hugo, а также показывает, украшаются ли основные элементы HTML с помощью CSS в теме Hugo.&lt;/p>
&lt;p>&lt;a href="https://github.com/yandex-cloud/docs/blob/master/guides/how-to-write.md">Рекомендации по оформления статьи&lt;/a>&lt;/p>
&lt;h2 id="заголовки">Заголовки&lt;/h2>
&lt;p>Заголовки первого и второго уровней, выполненные с помощью подчеркивания, выглядят следующим образом:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>Заголовок первого уровня
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>========================
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Заголовок второго уровня
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-------------------------
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="заголовок-первого-уровня">Заголовок первого уровня&lt;/h1>
&lt;h2 id="заголовок-второго-уровня">Заголовок второго уровня&lt;/h2>
&lt;p>Заголовки всех шести уровней можно обозначать и с помощью символа («#»)&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span># H1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>## H2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>### H3
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>#### H4
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>##### H5
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>###### H6
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="h1">H1&lt;/h1>
&lt;h2 id="h2">H2&lt;/h2>
&lt;h3 id="h3">H3&lt;/h3>
&lt;h4 id="h4">H4&lt;/h4>
&lt;h5 id="h5">H5&lt;/h5>
&lt;h6 id="h6">H6&lt;/h6>
&lt;h2 id="параграфы">Параграфы&lt;/h2>
&lt;p>Для оформления абзацев в html используются теги &lt;code>&amp;lt;p&amp;gt;&amp;lt;/p&amp;gt;&lt;/code>, но в Markdown блок текста автоматически преобразуется в параграф.&lt;/p>
&lt;p>Для вставки пустой строки необходимо два раза поставить символ переноса строки (нажать на Enter)&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Consequuntur eius in labore quidem, sequi suscipit!
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Aliquam aut commodi debitis ipsam nobis perspiciatis sequi, sint unde vitae.
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="цитаты">Цитаты&lt;/h2>
&lt;p>Элемент blockquote представляет содержимое, которое цитируется из другого источника, по желанию с цитатой, которая должна находиться в элементе &lt;code>footer&lt;/code> или &lt;code>cite&lt;/code>, и по желанию с изменениями в строке, такими как аннотации и сокращения.&lt;/p>
&lt;h4 id="блок-цитата-без-указания-авторства">Блок-цитата без указания авторства&lt;/h4>
&lt;blockquote>
&lt;p>Tiam, ad mint andaepu dandae nostion secatur sequo quae.
&lt;strong>Обратите внимание&lt;/strong>, что вы можете использовать синтаксис &lt;em>Markdown&lt;/em> внутри блочной цитаты.&lt;/p>&lt;/blockquote>
&lt;h4 id="блок-цитата-с-указанием-авторства">Блок-цитата с указанием авторства&lt;/h4>
&lt;blockquote>
&lt;p>Don&amp;rsquo;t communicate by sharing memory, share memory by communicating.&lt;br>
— &lt;cite>Rob Pike&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>&lt;/cite>&lt;/p>&lt;/blockquote>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>&amp;gt;Это пример цитаты,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;gt;в которой перед каждой строкой
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;gt;ставится угловая скобка.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;gt;Это пример цитаты,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>в которой угловая скобка
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ставится только перед началом нового параграфа.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;gt;Второй параграф.
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;p>Это пример цитаты,
в которой перед каждой строкой
ставится угловая скобка.&lt;/p>&lt;/blockquote>
&lt;blockquote>
&lt;p>Это пример цитаты, в которой угловая скобка ставится только перед началом нового параграфа.
Второй параграф.&lt;/p>&lt;/blockquote>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>&amp;gt; Первый уровень цитирования
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;gt;&amp;gt; Второй уровень цитирования
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;gt;&amp;gt;&amp;gt; Третий уровень цитирования
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;gt;Первый уровень цитирования
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;p>Первый уровень цитирования&lt;/p>
&lt;blockquote>
&lt;p>Второй уровень цитирования&lt;/p>
&lt;blockquote>
&lt;p>Третий уровень цитирования&lt;/p>&lt;/blockquote>&lt;/blockquote>
&lt;p>Первый уровень цитирования&lt;/p>&lt;/blockquote>
&lt;h2 id="таблицы">Таблицы&lt;/h2>
&lt;p>Таблицы не являются частью основной спецификации Markdown, но Hugo поддерживает их из коробки.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span> | Name | Age |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> | ----- | --- |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> | Bob | 27 |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> | Alice | 23 |
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Name&lt;/th>
&lt;th>Age&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Bob&lt;/td>
&lt;td>27&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Alice&lt;/td>
&lt;td>23&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>В ячейках разделительной строки используются только символы - и :. Символ : ставится в начале, в конце или с обеих сторон содержимого ячейки разделительной строки, чтобы обозначить выравнивание текста в соответствующем столбце по левой стороне, по правой стороне или по центру.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>Колонка по левому краю | Колонка по правому краю | Колонка по центру
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>:--- | ---: | :---:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Текст | Текст | Текст
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align: left">Колонка по левому краю&lt;/th>
&lt;th style="text-align: right">Колонка по правому краю&lt;/th>
&lt;th style="text-align: center">Колонка по центру&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align: left">Текст&lt;/td>
&lt;td style="text-align: right">Текст&lt;/td>
&lt;td style="text-align: center">Текст&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4 id="markdown-внутри-таблицы">Markdown внутри таблицы&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-mysql" data-lang="mysql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#666">|&lt;/span>&lt;span style="color:#bbb"> &lt;/span>Italics&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#666">|&lt;/span>&lt;span style="color:#bbb"> &lt;/span>Bold&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#666">|&lt;/span>&lt;span style="color:#bbb"> &lt;/span>Code&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#666">|&lt;/span>&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb">&lt;/span>&lt;span style="color:#666">|&lt;/span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#666">-------&lt;/span>&lt;span style="color:#60a0b0;font-style:italic">-- | -------- | ------ |
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic">&lt;/span>&lt;span style="color:#666">|&lt;/span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#666">*&lt;/span>italics&lt;span style="color:#666">*&lt;/span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#666">|&lt;/span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#666">**&lt;/span>bold&lt;span style="color:#666">**&lt;/span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#666">|&lt;/span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#666">`&lt;/span>code&lt;span style="color:#666">`&lt;/span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#666">|&lt;/span>&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Italics&lt;/th>
&lt;th>Bold&lt;/th>
&lt;th>Code&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;em>italics&lt;/em>&lt;/td>
&lt;td>&lt;strong>bold&lt;/strong>&lt;/td>
&lt;td>&lt;code>code&lt;/code>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="блоки-кода">Блоки кода&lt;/h2>
&lt;h4 id="блок-кода-с-обратными-кавычками">Блок кода с обратными кавычками&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-html" data-lang="html">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020">&amp;lt;!doctype html&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#062873;font-weight:bold">html&lt;/span> &lt;span style="color:#4070a0">lang&lt;/span>&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#4070a0">&amp;#34;en&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#062873;font-weight:bold">head&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#062873;font-weight:bold">meta&lt;/span> &lt;span style="color:#4070a0">charset&lt;/span>&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#4070a0">&amp;#34;utf-8&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#062873;font-weight:bold">title&lt;/span>&amp;gt;Example HTML5 Document&amp;lt;/&lt;span style="color:#062873;font-weight:bold">title&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;/&lt;span style="color:#062873;font-weight:bold">head&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#062873;font-weight:bold">body&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#062873;font-weight:bold">p&lt;/span>&amp;gt;Test&amp;lt;/&lt;span style="color:#062873;font-weight:bold">p&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;/&lt;span style="color:#062873;font-weight:bold">body&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;/&lt;span style="color:#062873;font-weight:bold">html&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="блок-кода-с-отступом-в-четыре-пробела">Блок кода с отступом в четыре пробела&lt;/h4>
&lt;pre>&lt;code>&amp;lt;!doctype html&amp;gt;
&amp;lt;html lang=&amp;quot;en&amp;quot;&amp;gt;
&amp;lt;head&amp;gt;
&amp;lt;meta charset=&amp;quot;utf-8&amp;quot;&amp;gt;
&amp;lt;title&amp;gt;Example HTML5 Document&amp;lt;/title&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
&amp;lt;p&amp;gt;Test&amp;lt;/p&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code>&lt;/pre>
&lt;h4 id="блок-кода-с-внутренним-шорткодом-подсветки-hugo">Блок кода с внутренним шорткодом подсветки Hugo&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-html" data-lang="html">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020">&amp;lt;!doctype html&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#062873;font-weight:bold">html&lt;/span> &lt;span style="color:#4070a0">lang&lt;/span>&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#4070a0">&amp;#34;en&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#062873;font-weight:bold">head&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#062873;font-weight:bold">meta&lt;/span> &lt;span style="color:#4070a0">charset&lt;/span>&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#4070a0">&amp;#34;utf-8&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#062873;font-weight:bold">title&lt;/span>&amp;gt;Example HTML5 Document&amp;lt;/&lt;span style="color:#062873;font-weight:bold">title&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;/&lt;span style="color:#062873;font-weight:bold">head&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#062873;font-weight:bold">body&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#062873;font-weight:bold">p&lt;/span>&amp;gt;Test&amp;lt;/&lt;span style="color:#062873;font-weight:bold">p&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;/&lt;span style="color:#062873;font-weight:bold">body&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;/&lt;span style="color:#062873;font-weight:bold">html&lt;/span>&amp;gt;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h2 id="списки">Списки&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>Оформляйте заголовки единообразно. В конце заголовка точку не ставьте.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Правильно&lt;/th>
&lt;th>Неправильно&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Получение сертификата &lt;br/> Создание кластера&lt;/td>
&lt;td>Получить сертификат &lt;br/> Создание кластера&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Получить сертификат &lt;br/> Создать кластер&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;/li>
&lt;li>
&lt;p>Если требуется описать последовательность действий, используйте нумерованный список. В конце строк ставьте точку.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Если порядок пунктов неважен, используйте маркированный список. Оформляйте его одним из способов:&lt;/p>
&lt;ul>
&lt;li>Если элементы списка — отдельные предложения, начинайте их с заглавной буквы и ставьте точку в конце.&lt;/li>
&lt;li>Если вводная фраза и список составляют одно предложение, то элементы списка должны начинаться со строчной буквы и завершаться точкой с запятой. Последний элемент списка завершается точкой.&lt;/li>
&lt;li>Если список состоит из названий или значений параметров (без пояснений), знаки в конце строк не ставьте.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h4 id="упорядоченный-список">Упорядоченный список&lt;/h4>
&lt;ol>
&lt;li>First item&lt;/li>
&lt;li>Second item&lt;/li>
&lt;li>Third item&lt;/li>
&lt;/ol>
&lt;p>Чтобы оформить упорядоченный нумерованный список, используйте цифры с символом &lt;code>.&lt;/code> или &lt;code>)&lt;/code>. Рекомендованный формат разметки: цифра &lt;code>1&lt;/code> и символ &lt;code>.&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>1. Первый пункт
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>1. Второй пункт
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>1. Третий пункт
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>будет отображаться как:&lt;/p>
&lt;ol>
&lt;li>Первый пункт&lt;/li>
&lt;li>Второй пункт&lt;/li>
&lt;li>Третий пункт&lt;/li>
&lt;/ol>
&lt;p>Чтобы оформить вложенный упорядоченный список, добавьте отступ для элементов дочернего списка. Допустимый размер отступа — от двух до пяти пробелов. Рекомендуемый размер отступа — четыре пробела.&lt;/p>
&lt;p>Например, разметка:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>1. Первый пункт
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 1. Вложенный пункт
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 1. Вложенный пункт
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>1. Второй пункт
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>будет отображаться как:&lt;/p>
&lt;ol>
&lt;li>Первый пункт
&lt;ol>
&lt;li>Вложенный пункт&lt;/li>
&lt;li>Вложенный пункт&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>Второй пункт&lt;/li>
&lt;/ol>
&lt;h4 id="неупорядоченный-список">Неупорядоченный список&lt;/h4>
&lt;ul>
&lt;li>List item&lt;/li>
&lt;li>Another item&lt;/li>
&lt;li>And another item&lt;/li>
&lt;/ul>
&lt;h4 id="вложенный-список">Вложенный список&lt;/h4>
&lt;ul>
&lt;li>Fruit
&lt;ul>
&lt;li>Apple&lt;/li>
&lt;li>Orange&lt;/li>
&lt;li>Banana&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Dairy
&lt;ul>
&lt;li>Milk&lt;/li>
&lt;li>Cheese&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="другие-элементы---abbr-sub-sup-kbd-mark">Другие элементы - abbr, sub, sup, kbd, mark&lt;/h2>
&lt;p>&lt;abbr title="Graphics Interchange Format">GIF&lt;/abbr> is a bitmap image format.&lt;/p>
&lt;p>H&lt;sub>2&lt;/sub>O&lt;/p>
&lt;p>X&lt;sup>n&lt;/sup> + Y&lt;sup>n&lt;/sup> = Z&lt;sup>n&lt;/sup>&lt;/p>
&lt;p>Press &lt;kbd>&lt;kbd>CTRL&lt;/kbd>+&lt;kbd>ALT&lt;/kbd>+&lt;kbd>Delete&lt;/kbd>&lt;/kbd> to end the session.&lt;/p>
&lt;p>Most &lt;mark>salamanders&lt;/mark> are nocturnal, and hunt for insects, worms, and other small creatures.&lt;/p>
&lt;p>💡 &lt;em>Структура данных&lt;/em> — это контейнер, который хранит данные в определённом формате. Этот контейнер решает, каким образом внешний мир может эти данные считать или изменить.&lt;/p>
&lt;div class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1">
&lt;p>Приведенная выше цитата взята из книги Роба Пайка &lt;a href="https://www.youtube.com/watch?v=PAAkCSZUG1c">talk&lt;/a> during Gopherfest, November 18, 2015.&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description></item><item><title>Отображение таблицы Google Sheets в JSON</title><link>https://romankurnovskii.com/ru/posts/google-sheets-2-json/</link><pubDate>Sat, 12 Mar 2022 11:55:25 +0200</pubDate><guid>https://romankurnovskii.com/ru/posts/google-sheets-2-json/</guid><description>&lt;h2 id="задача">Задача&lt;/h2>
&lt;p>Есть таблица google. Необходимо конвертировать ее в JSON и не делать каждый раз ручной экспорт.&lt;/p>
&lt;h2 id="условия">&lt;strong>Условия&lt;/strong>&lt;/h2>
&lt;ul>
&lt;li>таблица закрыта для общего просмотра&lt;/li>
&lt;li>json отображение читать по ссылке&lt;/li>
&lt;/ul>
&lt;h2 id="план">План&lt;/h2>
&lt;p>Использовать &lt;a href="https://developers.google.com/apps-script/guides/web">webapps&lt;/a> от google. Парсить google таблицу и выдавать готовый url с json.&lt;/p>
&lt;h2 id="подготовка">Подготовка&lt;/h2>
&lt;ol>
&lt;li>Открываем Таблицу Google&lt;/li>
&lt;li>Extensions → Apps Script&lt;/li>
&lt;/ol>
&lt;p>&lt;p class="md__image">
&lt;img
src="01.png?v1"
id="zoom-default"
alt="Screen Shot 2022-03-12 at 12.26.28.png"
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;h2 id="создаем-скрипт">Создаем скрипт&lt;/h2>
&lt;p>Как работает endpoint. &lt;a href="https://developers.google.com/apps-script/guides/web?hl=en#request_parameters">Документация&lt;/a>&lt;/p>
&lt;p>Когда пользователь посещает приложение или программа отправляет приложению HTTP-запрос GET, Apps Script запускает функцию doGet(e).&lt;/p>
&lt;p>Когда отправляется приложению HTTP-запрос POST, вместо этого Apps Script запускает doPost(e).&lt;/p>
&lt;p>В обоих случаях аргумент e представляет собой параметр события, который может содержать информацию о любых параметрах запроса.&lt;/p>
&lt;p>Дополнительные условия в запрос сейчас посылать не буду.&lt;/p>
&lt;p>Итого функция с получением массива и функция с выдачей результата:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">const&lt;/span> sheetName &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#4070a0">&amp;#39;s1&amp;#39;&lt;/span> &lt;span style="color:#60a0b0;font-style:italic">// название листа
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic">&lt;/span>&lt;span style="color:#007020;font-weight:bold">const&lt;/span> sheetRange &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#4070a0">&amp;#39;A:J&amp;#39;&lt;/span> &lt;span style="color:#60a0b0;font-style:italic">// диапазон
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">const&lt;/span> sheet &lt;span style="color:#666">=&lt;/span> SpreadsheetApp.getActive().getSheetByName(sheetName)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">function&lt;/span> getData(){
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">const&lt;/span> result &lt;span style="color:#666">=&lt;/span> []
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">const&lt;/span> values &lt;span style="color:#666">=&lt;/span> sheet.getRange(sheetRange).getValues()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">const&lt;/span> lastRow &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#007020">parseInt&lt;/span>(sheet.getLastRow())
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">for&lt;/span> (&lt;span style="color:#007020;font-weight:bold">let&lt;/span> i &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#40a070">1&lt;/span>; i &lt;span style="color:#666">&amp;lt;&lt;/span> lastRow; i&lt;span style="color:#666">++&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> result.push(values[i])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> result
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">function&lt;/span> doGet() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">const&lt;/span> data &lt;span style="color:#666">=&lt;/span> getData()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> ContentService.createTextOutput(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> JSON.stringify(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {&lt;span style="color:#4070a0">&amp;#39;result&amp;#39;&lt;/span>&lt;span style="color:#666">:&lt;/span> data}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ).setMimeType(ContentService.MimeType.JSON)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="публикуем-приложение">Публикуем приложение&lt;/h2>
&lt;p>&lt;p class="md__image">
&lt;img
src="02.png?v1"
id="zoom-default"
alt="Google Sheets публикаиця приложения"
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;p>&lt;p class="md__image">
&lt;img
src="03.png?v1"
id="zoom-default"
alt="Google Sheets публикаиця приложения"
loading="lazy"
/>
&lt;/p>
&lt;p class="md__image">
&lt;img
src="04.png?v1"
id="zoom-default"
alt="Google Sheets публикаиця приложения"
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;h2 id="результат">Результат&lt;/h2>
&lt;p>&lt;p class="md__image">
&lt;img
src="05.png?v1"
id="zoom-default"
alt="Google Sheets api json"
loading="lazy"
/>
&lt;/p>
&lt;/p></description></item><item><title>Публикация next.js приложения на github pages</title><link>https://romankurnovskii.com/ru/posts/nextjs-to-github-pages-ations/</link><pubDate>Mon, 07 Mar 2022 15:31:25 +0200</pubDate><guid>https://romankurnovskii.com/ru/posts/nextjs-to-github-pages-ations/</guid><description>&lt;h2 id="подготовка">Подготовка&lt;/h2>
&lt;p>коммит все предыдущего состояния на случай вынужденного отката&lt;/p>
&lt;p>Для того чтобы Actions имели доступ к репозиторию нужно подключить ключи шифрования&lt;/p>
&lt;h2 id="настройка-репозитория">Настройка репозитория&lt;/h2>
&lt;p>Создаю ключи&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>ssh-keygen -t rsa -b &lt;span style="color:#40a070">4096&lt;/span> -C &lt;span style="color:#4070a0">&amp;#34;&lt;/span>&lt;span style="color:#007020;font-weight:bold">$(&lt;/span>git config user.email&lt;span style="color:#007020;font-weight:bold">)&lt;/span>&lt;span style="color:#4070a0">&amp;#34;&lt;/span> -f gh-pages -N &lt;span style="color:#4070a0">&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Создалось 2 файла с ключами:&lt;/p>
&lt;ul>
&lt;li>gh-pages - приватный&lt;/li>
&lt;li>gh-pages.pub - публичный&lt;/li>
&lt;/ul>
&lt;p>в Репозитории (не профиле)&lt;/p>
&lt;p>&lt;a href="https://github.com/romankurnovskii/notion-project/settings/keys">https://github.com/romankurnovskii/notion-project/settings/keys&lt;/a>&lt;/p>
&lt;p>Settings → Deploy keys →Add new&lt;/p>
&lt;p>из файла &lt;a href="http://gh-pages.pub">gh-pages.pub&lt;/a> вставляю текст публичного ключа&lt;/p>
&lt;p>&lt;p class="md__image">
&lt;img
src="Screen_Shot_2022-03-05_at_19.50.08.png?v1"
id="zoom-default"
alt="Screen Shot 2022-03-05 at 19.50.08.png"
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;p>Settings → Secrets&lt;/p>
&lt;p>Имя: &lt;code>ACTIONS_DEPLOY_KEY&lt;/code>&lt;/p>
&lt;p>Вставляю приватный ключ из приватного файла gh-pages&lt;/p>
&lt;p>&lt;a href="https://github.com/romankurnovskii/notion-project/settings/secrets/actions/new">https://github.com/romankurnovskii/notion-project/settings/secrets/actions/new&lt;/a>&lt;/p>
&lt;p>&lt;p class="md__image">
&lt;img
src="Screen_Shot_2022-03-05_at_19.52.04.png?v1"
id="zoom-default"
alt="Screen Shot 2022-03-05 at 19.52.04.png"
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;p>Удаляю ключи файлы чтобы случайно не закоммитить&lt;/p>
&lt;p>на гитхабе создаю экшн&lt;/p>
&lt;p>&lt;a href="https://github.com/romankurnovskii/notion-project/new/main?filename=.github%2Fworkflows%2Fmain.yml&amp;amp;workflow_template=blank">https://github.com/romankurnovskii/notion-project/new/main?filename=.github%2Fworkflows%2Fmain.yml&amp;amp;workflow_template=blank&lt;/a>&lt;/p>
&lt;p>Actions → Create&lt;/p>
&lt;h2 id="создание-actions">Создание Actions&lt;/h2>
&lt;p>Выбираю стандартный action (Deploy&amp;hellip;)&lt;/p>
&lt;p>Редактирую нижнюю часть кода&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>- &lt;span style="color:#062873;font-weight:bold">name&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>Build&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#062873;font-weight:bold">run&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>|&lt;span style="color:#4070a0;font-style:italic">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4070a0;font-style:italic"> npm i
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4070a0;font-style:italic"> npm run build
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4070a0;font-style:italic"> npm run export&lt;/span>&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb">&lt;/span>- &lt;span style="color:#062873;font-weight:bold">name&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>Deploy&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#062873;font-weight:bold">uses&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>peaceiris/actions-gh-pages@v3&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#062873;font-weight:bold">with&lt;/span>:&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#062873;font-weight:bold">deploy_key&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>${{ secrets.ACTIONS_DEPLOY_KEY }}&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#062873;font-weight:bold">publish_dir&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>./out&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>npm run export - для создания статических файлов (добавлю позже)&lt;/p>
&lt;p>ACTIONS_DEPLOY_KEY - название ключа, что создал ранее&lt;/p>
&lt;p>peaceiris/actions-gh-pages@v3 - action из другого популярного репозитория. Ссылаюсь на него.&lt;/p>
&lt;p>Итого код:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#062873;font-weight:bold">name&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>Deploy to Github Pages&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb">&lt;/span>&lt;span style="color:#062873;font-weight:bold">on&lt;/span>:&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#062873;font-weight:bold">push&lt;/span>:&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#062873;font-weight:bold">branches&lt;/span>:&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>- main&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#062873;font-weight:bold">workflow_dispatch&lt;/span>:&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb">&lt;/span>&lt;span style="color:#062873;font-weight:bold">jobs&lt;/span>:&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#062873;font-weight:bold">deployment&lt;/span>:&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#062873;font-weight:bold">runs-on&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>ubuntu-latest&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#062873;font-weight:bold">steps&lt;/span>:&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>- &lt;span style="color:#062873;font-weight:bold">uses&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>actions/checkout@v2&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>- &lt;span style="color:#062873;font-weight:bold">name&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>Setup Node&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#062873;font-weight:bold">uses&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>actions/setup-node@v3&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#062873;font-weight:bold">with&lt;/span>:&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#062873;font-weight:bold">node-version&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#4070a0">&amp;#34;lts/*&amp;#34;&lt;/span>&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#062873;font-weight:bold">cache&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#4070a0">&amp;#34;npm&amp;#34;&lt;/span>&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>- &lt;span style="color:#062873;font-weight:bold">name&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>Build&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#062873;font-weight:bold">run&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>|&lt;span style="color:#4070a0;font-style:italic">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4070a0;font-style:italic"> npm i
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4070a0;font-style:italic"> npm run build
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4070a0;font-style:italic"> npm run export&lt;/span>&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>- &lt;span style="color:#062873;font-weight:bold">name&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>Deploy&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#062873;font-weight:bold">uses&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>peaceiris/actions-gh-pages@v3&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#062873;font-weight:bold">with&lt;/span>:&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#062873;font-weight:bold">deploy_key&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>${{ secrets.ACTIONS_DEPLOY_KEY }}&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#062873;font-weight:bold">publish_dir&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>./out&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>открыть package.json&lt;/p>
&lt;p>найти поле scripts, если нет создать:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#666">...&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4070a0">&amp;#34;scripts&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4070a0">&amp;#34;dev&amp;#34;&lt;/span>: &lt;span style="color:#4070a0">&amp;#34;next dev&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4070a0">&amp;#34;build&amp;#34;&lt;/span>: &lt;span style="color:#4070a0">&amp;#34;next build&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4070a0">&amp;#34;start&amp;#34;&lt;/span>: &lt;span style="color:#4070a0">&amp;#34;next start&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4070a0">&amp;#34;deploy&amp;#34;&lt;/span>: &lt;span style="color:#4070a0">&amp;#34;vercel --prod&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4070a0">&amp;#34;export&amp;#34;&lt;/span>: &lt;span style="color:#4070a0">&amp;#34;next export&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>},
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#666">...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Если &lt;code>npm run build &amp;amp;&amp;amp; npm run export&lt;/code> отработала, то хорошо&lt;/p>
&lt;h2 id="отладка">Отладка&lt;/h2>
&lt;p>Не отработала, ошибка:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span style="display:flex;">&lt;span>info &lt;span style="color:#666">-&lt;/span> Copying &lt;span style="color:#4070a0">&amp;#34;static build&amp;#34;&lt;/span> directory
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>info &lt;span style="color:#666">-&lt;/span> No &lt;span style="color:#4070a0">&amp;#34;exportPathMap&amp;#34;&lt;/span> found &lt;span style="color:#007020;font-weight:bold">in&lt;/span> &lt;span style="color:#4070a0">&amp;#34;next.config.js&amp;#34;&lt;/span>&lt;span style="color:#666">.&lt;/span> Generating map from &lt;span style="color:#4070a0">&amp;#34;./pages&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Error: &lt;span style="color:#007020">Image&lt;/span> Optimization using Next&lt;span style="color:#666">.&lt;/span>js&lt;span style="color:#4070a0">&amp;#39; default loader is not compatible with `next export`.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Possible solutions:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#666">-&lt;/span> Use &lt;span style="">`&lt;/span>next start&lt;span style="">`&lt;/span> to run a server, which includes the &lt;span style="color:#007020">Image&lt;/span> Optimization API&lt;span style="color:#666">.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#666">-&lt;/span> Use any provider which supports &lt;span style="color:#007020">Image&lt;/span> Optimization (like Vercel)&lt;span style="color:#666">.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#666">-&lt;/span> Configure a third&lt;span style="color:#666">-&lt;/span>party loader &lt;span style="color:#007020;font-weight:bold">in&lt;/span> &lt;span style="">`&lt;/span>next&lt;span style="color:#666">.&lt;/span>config&lt;span style="color:#666">.&lt;/span>js&lt;span style="">`&lt;/span>&lt;span style="color:#666">.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#666">-&lt;/span> Use the &lt;span style="">`&lt;/span>loader&lt;span style="">`&lt;/span> prop &lt;span style="color:#007020;font-weight:bold">for&lt;/span> &lt;span style="">`&lt;/span>next&lt;span style="color:#666">/&lt;/span>image&lt;span style="">`&lt;/span>&lt;span style="color:#666">.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Read more: https:&lt;span style="color:#666">//&lt;/span>nextjs&lt;span style="color:#666">.&lt;/span>org&lt;span style="color:#666">/&lt;/span>docs&lt;span style="color:#666">/&lt;/span>messages&lt;span style="color:#666">/&lt;/span>&lt;span style="color:#007020;font-weight:bold">export&lt;/span>&lt;span style="color:#666">-&lt;/span>image&lt;span style="color:#666">-&lt;/span>api
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;a href="https://nextjs.org/docs/api-reference/next.config.js/exportPathMap">https://nextjs.org/docs/api-reference/next.config.js/exportPathMap&lt;/a>&lt;/p>
&lt;p>пример кода из документации&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span style="display:flex;">&lt;span>module&lt;span style="color:#666">.&lt;/span>exports &lt;span style="color:#666">=&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> exportPathMap: async function (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> defaultPathMap,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> { dev, dir, outDir, distDir, buildId }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4070a0">&amp;#34;/&amp;#34;&lt;/span>: { page: &lt;span style="color:#4070a0">&amp;#34;/&amp;#34;&lt;/span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4070a0">&amp;#34;/about&amp;#34;&lt;/span>: { page: &lt;span style="color:#4070a0">&amp;#34;/about&amp;#34;&lt;/span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4070a0">&amp;#34;/p/hello-nextjs&amp;#34;&lt;/span>: { page: &lt;span style="color:#4070a0">&amp;#34;/post&amp;#34;&lt;/span>, query: { title: &lt;span style="color:#4070a0">&amp;#34;hello-nextjs&amp;#34;&lt;/span> } },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4070a0">&amp;#34;/p/learn-nextjs&amp;#34;&lt;/span>: { page: &lt;span style="color:#4070a0">&amp;#34;/post&amp;#34;&lt;/span>, query: { title: &lt;span style="color:#4070a0">&amp;#34;learn-nextjs&amp;#34;&lt;/span> } },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4070a0">&amp;#34;/p/deploy-nextjs&amp;#34;&lt;/span>: { page: &lt;span style="color:#4070a0">&amp;#34;/post&amp;#34;&lt;/span>, query: { title: &lt;span style="color:#4070a0">&amp;#34;deploy-nextjs&amp;#34;&lt;/span> } },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> };
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>};
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>мой:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span style="display:flex;">&lt;span>module&lt;span style="color:#666">.&lt;/span>exports &lt;span style="color:#666">=&lt;/span> withBundleAnalyzer({
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> images: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> domains: [&lt;span style="color:#4070a0">&amp;#34;pbs.twimg.com&amp;#34;&lt;/span>],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>});
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;p class="md__image">
&lt;img
src="Screen_Shot_2022-03-05_at_19.35.50.png?v1"
id="zoom-default"
alt="Screen Shot 2022-03-05 at 19.35.50.png"
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;p>Редактирую *&lt;strong>*&lt;a href="https://github.com/romankurnovskii/notion-project">next.config.js&lt;/a>**&lt;/strong>&lt;/p>
&lt;p>Добавляю:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">const&lt;/span> repoName &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#4070a0">&amp;#39;/notion-project&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>module&lt;span style="color:#666">.&lt;/span>exports &lt;span style="color:#666">=&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> basePath: repoName,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> assetPrefix: repoName,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#666">...&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;a href="https://github.com/romankurnovskii/notion-project/blob/main/next.config.js">https://github.com/romankurnovskii/notion-project/blob/main/next.config.js&lt;/a>&lt;/p>
&lt;p>Проблема с установкой зависимости вовремя использованя npm установщика. Буду использовать yarn потому что он пропускает минорные уведомления для меня кажется более стабильным.&lt;/p>
&lt;p>Пока разбирался с проблемы запуска экшенов и настройками нашёл новые экшены и без использования ключа. Обновлю код&lt;/p>
&lt;p>После того как я редактирую данные нужен они не меняются на сайте. Не меняются потому что гитхаб создаёт статические файлы, то есть нужно заново сделать новый билд. Для меня моментальные изменения не критичны поэтому я поставлю задачу билда повторяться каждый день в 7:00 утра&lt;/p>
&lt;p>Добавляю код в yaml файл&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#062873;font-weight:bold">on&lt;/span>:&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb">&lt;/span>&lt;span style="color:#062873;font-weight:bold">push&lt;/span>:&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb">&lt;/span>&lt;span style="color:#062873;font-weight:bold">branches&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>[main]&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb">&lt;/span>&lt;span style="color:#062873;font-weight:bold">schedule&lt;/span>:&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>- &lt;span style="color:#062873;font-weight:bold">cron&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#4070a0">&amp;#34;0 7 * * *&amp;#34;&lt;/span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#60a0b0;font-style:italic">## every day 7 am&lt;/span>&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Итоговый результат&lt;/p>
&lt;p>&lt;a href="https://github.com/romankurnovskii/notion-project/blob/main/.github/workflows/main.yml">https://github.com/romankurnovskii/notion-project/blob/main/.github/workflows/main.yml&lt;/a>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>lines (32 sloc) 867 Bytes&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb">&lt;/span>&lt;span style="color:#062873;font-weight:bold">name&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>Deploy to GitHub Pages&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb">&lt;/span>&lt;span style="color:#062873;font-weight:bold">on&lt;/span>:&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#062873;font-weight:bold">push&lt;/span>:&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#062873;font-weight:bold">branches&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>[main]&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#062873;font-weight:bold">schedule&lt;/span>:&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>- &lt;span style="color:#062873;font-weight:bold">cron&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#4070a0">&amp;#34;0 7 * * *&amp;#34;&lt;/span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#60a0b0;font-style:italic">## every day 7 am&lt;/span>&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb">&lt;/span>&lt;span style="color:#062873;font-weight:bold">jobs&lt;/span>:&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#062873;font-weight:bold">build&lt;/span>:&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#062873;font-weight:bold">runs-on&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>ubuntu-latest&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#062873;font-weight:bold">strategy&lt;/span>:&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#062873;font-weight:bold">matrix&lt;/span>:&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#062873;font-weight:bold">node-version&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>[&lt;span style="color:#40a070">14.&lt;/span>x]&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#062873;font-weight:bold">steps&lt;/span>:&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>- &lt;span style="color:#062873;font-weight:bold">name&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>Get files&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#062873;font-weight:bold">uses&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>actions/checkout@v2&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>- &lt;span style="color:#062873;font-weight:bold">name&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>Use Node.js ${{ matrix.node-version }}&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#062873;font-weight:bold">uses&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>actions/setup-node@v2&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#062873;font-weight:bold">with&lt;/span>:&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#062873;font-weight:bold">node-version&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>${{ matrix.node-version }}&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>- &lt;span style="color:#062873;font-weight:bold">name&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>Install packages&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#062873;font-weight:bold">run&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>yarn install&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>- &lt;span style="color:#062873;font-weight:bold">name&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>Build project&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#062873;font-weight:bold">run&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>yarn run build&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>- &lt;span style="color:#062873;font-weight:bold">name&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>Export static files&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#062873;font-weight:bold">run&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>yarn run export&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>- &lt;span style="color:#062873;font-weight:bold">name&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>Add .nojekyll file&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#062873;font-weight:bold">run&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>touch ./out/.nojekyll&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>- &lt;span style="color:#062873;font-weight:bold">name&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>Deploy&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#062873;font-weight:bold">uses&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>JamesIves/github-pages-deploy-action@4.1.1&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#60a0b0;font-style:italic">#third party github actions / ok to use&lt;/span>&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#062873;font-weight:bold">with&lt;/span>:&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#062873;font-weight:bold">branch&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>gh-pages&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#062873;font-weight:bold">folder&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>out&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>После тестового комитета и билда получаю 2 проблемы:&lt;/p>
&lt;ul>
&lt;li>Стилей нет, картинки не подгружены&lt;/li>
&lt;li>Ссылки не работают&lt;/li>
&lt;/ul>
&lt;p>Next.js ожидает адрес вида &lt;a href="https://username.github.io/">https://username.github.io/&lt;/a>&lt;/p>
&lt;p>А у меня в конце ещё добавляется репозиторий. Т.е. добавился ещё один уровень в пути&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>- &lt;span style="color:#062873;font-weight:bold">name&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>Deploy&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#062873;font-weight:bold">uses&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>JamesIves/github-pages-deploy-action@4.1.1&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#60a0b0;font-style:italic">#third party github actions / ok to use&lt;/span>&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#062873;font-weight:bold">with&lt;/span>:&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#062873;font-weight:bold">branch&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>gh-pages&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#062873;font-weight:bold">folder&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>out&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb">&lt;/span>- &lt;span style="color:#062873;font-weight:bold">name&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>Add .nojekyll file&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#062873;font-weight:bold">run&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>touch ./out/.nojekyll&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="источники">Источники&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://wallis.dev/blog/deploying-a-next-js-app-to-github-pages" target="_blank">&lt;a href="https://wallis.dev/blog/deploying-a-next-js-app-to-github-pages">https://wallis.dev/blog/deploying-a-next-js-app-to-github-pages&lt;/a>&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://gregrickaby.blog/article/nextjs-github-pages" target="_blank">&lt;a href="https://gregrickaby.blog/article/nextjs-github-pages">https://gregrickaby.blog/article/nextjs-github-pages&lt;/a>&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://medium.com/@anotherplanet/git-tips-next-js-github-pages-2dbc9a819cb8" target="_blank">&lt;a href="https://medium.com/@anotherplanet/git-tips-next-js-github-pages-2dbc9a819cb8">https://medium.com/@anotherplanet/git-tips-next-js-github-pages-2dbc9a819cb8&lt;/a>&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.linkedin.com/pulse/deploy-nextjs-app-github-pages-federico-antu%C3%B1a" target="_blank">&lt;a href="https://www.linkedin.com/pulse/deploy-nextjs-app-github-pages-federico-antu%C3%B1a">https://www.linkedin.com/pulse/deploy-nextjs-app-github-pages-federico-antu%C3%B1a&lt;/a>&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Инструкция для фотографии на лотерею Green Card</title><link>https://romankurnovskii.com/ru/posts/green-card/</link><pubDate>Thu, 28 Oct 2021 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/posts/green-card/</guid><description>&lt;p>&lt;strong>Фотография&lt;/strong> - один из самых важных моментов участия в лотерее. Если ваша фотография не будет соответствовать всем критериям и правилам, то вам имеют право отказать в выдаче визы. Любые нарушения остаются на усмотрение консула.&lt;/p>
&lt;p>Поэтому, чтобы максимально избежать риска отказа в визе, когда вы выиграете, то нужно убедиться, что ваша фотография (и всех членов семьи) соответствует критериям, которые я описываю ниже.&lt;/p>
&lt;h2 id="1-общие-критерии">1. Общие критерии&lt;/h2>
&lt;p>— цветная фотография;&lt;/p>
&lt;p>— голова на фотографии должна занимать от 50% до 69% от общей высоты изображения, начиная с верхней части головы, включая волосы, до нижней части подбородка;&lt;/p>
&lt;p>— глаза должны находиться в промежутке от 56% до 69% от высоты изображения, то есть от нижней части изображения до уровня глаз;&lt;/p>
&lt;p>— фотография должна быть квадратная, размером только 600 пикселей (ширина) х 600 пикселей (высота);&lt;/p>
&lt;p>— фотография должна быть сделана &lt;strong>не позже 6-ти месяцев&lt;/strong> до подачи заявки;&lt;/p>
&lt;p>— фон фотографии должен быть хорошо освещен, белого или светло-желтоватого цвета (&lt;strong>без&lt;/strong> каких-либо узоров, объектов, рисунков и прочих);&lt;/p>
&lt;p>— ваш взгляд должен быть направлен прямо в камеру с обычным выражением лица и открытыми глазами;&lt;/p>
&lt;p>— на фотографии вы должны быть в обычной одежде, которую вы носите каждый день. Не в рабочей спец. форме, если только это не религиозная одежда, которую носят постоянно;&lt;/p>
&lt;p>— вы должны быть без головного убора, которое скрывает ваши волосы, за исключением религиозных головных уборов, которые носят каждый день;&lt;/p>
&lt;p>— фото делаем без очков;&lt;/p>
&lt;p>— фото должно быть без теней;&lt;/p>
&lt;p>— голова должна быть без наклонов;&lt;/p>
&lt;p>— &lt;strong>не использовать фотошоп ни в коем случае;&lt;/strong>&lt;/p>
&lt;h2 id="2-технические-характеристики">2. Технические характеристики&lt;/h2>
&lt;p>— формат JPEG (JPG);&lt;/p>
&lt;p>— размер файла равен или меньше 240 Кб (килобайт);&lt;/p>
&lt;p>— квадратная пропорция (высота должна быть равна ширине). Размеры 600px x 600px;&lt;/p>
&lt;p>— фотография должна быть цветная (24 бит на пиксель) в спектре sRGB;&lt;/p>
&lt;p>— возможно фотография у вас будет весить больше требуемого, поэтому вам нужно ее сжать. Степень сжатия должна быть меньше или равна 20:1;&lt;/p>
&lt;h2 id="3-примеры-фотографий">3. ✅ Примеры фотографий&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align: center">Basic Examples&lt;/th>
&lt;th style="text-align: center">Size and Position&lt;/th>
&lt;th style="text-align: center">Pose and Expression&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align: center">&lt;p class="md__image">
&lt;img
src="https://romankurnovskii.com/ru/posts/green-card/assets/basic-example.png"
id="zoom-default"
alt="Basic Examples"
loading="lazy"
/>
&lt;/p>
&lt;/td>
&lt;td style="text-align: center">&lt;p class="md__image">
&lt;img
src="https://romankurnovskii.com/ru/posts/green-card/assets/size-position.png"
id="zoom-default"
alt="Examples"
loading="lazy"
/>
&lt;/p>
&lt;/td>
&lt;td style="text-align: center">&lt;p class="md__image">
&lt;img
src="https://romankurnovskii.com/ru/posts/green-card/assets/pose-expression.png"
id="zoom-default"
alt="Examples"
loading="lazy"
/>
&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align: center">Glasses&lt;/th>
&lt;th style="text-align: center">Attire, Hats, Hair&lt;/th>
&lt;th style="text-align: center">Shadows and Lighting&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align: center">&lt;p class="md__image">
&lt;img
src="https://romankurnovskii.com/ru/posts/green-card/assets/glasses.png"
id="zoom-default"
alt="Basic Examples"
loading="lazy"
/>
&lt;/p>
&lt;/td>
&lt;td style="text-align: center">&lt;p class="md__image">
&lt;img
src="https://romankurnovskii.com/ru/posts/green-card/assets/hats-hair.png"
id="zoom-default"
alt="Examples"
loading="lazy"
/>
&lt;/p>
&lt;/td>
&lt;td style="text-align: center">&lt;p class="md__image">
&lt;img
src="https://romankurnovskii.com/ru/posts/green-card/assets/shadows.png"
id="zoom-default"
alt="Examples"
loading="lazy"
/>
&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align: center">Background&lt;/th>
&lt;th style="text-align: center">Resolution, Quality&lt;/th>
&lt;th style="text-align: center">Children&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align: center">&lt;p class="md__image">
&lt;img
src="https://romankurnovskii.com/ru/posts/green-card/assets/background.png"
id="zoom-default"
alt="Basic Examples"
loading="lazy"
/>
&lt;/p>
&lt;/td>
&lt;td style="text-align: center">&lt;p class="md__image">
&lt;img
src="https://romankurnovskii.com/ru/posts/green-card/assets/resolution.png"
id="zoom-default"
alt="Examples"
loading="lazy"
/>
&lt;/p>
&lt;/td>
&lt;td style="text-align: center">&lt;p class="md__image">
&lt;img
src="https://romankurnovskii.com/ru/posts/green-card/assets/children.png"
id="zoom-default"
alt="Examples"
loading="lazy"
/>
&lt;/p>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align: center">Face Obstruction&lt;/th>
&lt;th style="text-align: center">&lt;/th>
&lt;th style="text-align: center">&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align: center">&lt;p class="md__image">
&lt;img
src="https://romankurnovskii.com/ru/posts/green-card/assets/face.png"
id="zoom-default"
alt="Basic Examples"
loading="lazy"
/>
&lt;/p>
&lt;/td>
&lt;td style="text-align: center">&lt;/td>
&lt;td style="text-align: center">&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;aside>
💡 Если вы делаете фотографию **младенцу**, то его можно положить на спину на белую простынь и убедиться, что фон однотонный и на лице ребенка нет теней. Младенцу не обязательно смотреть прямо в камеру, достаточно того, чтобы его лицо полностью было видно и фотография не была смазана.
&lt;/aside>
&lt;h2 id="5-полезные-советы">5. Полезные советы&lt;/h2>
&lt;ul>
&lt;li>убедитесь, что фотограф знает правила для лотерейной фотографии&lt;/li>
&lt;li>напомните фотографу, что фотошоп использовать нельзя, особенно вставлять фейковый белый фон&lt;/li>
&lt;li>попросите фотографа выставить &lt;strong>сегодняшнюю&lt;/strong> дату в камере, иначе метаданные фотографии будут бракованные&lt;/li>
&lt;li>убедитесь, что на фотографии нигде нет теней - ни на лице, ни за спиной, ни под подбородком, ни на шее&lt;/li>
&lt;li>убедитесь, что задний фон НЕ засвечен. Он должен быть обычного белого цвета, а не искусственного&lt;/li>
&lt;li>чтобы избежать засветов, можно попросить фотографа сделать фотографию на очень светло-светло сером фоне, который близкий к белому&lt;/li>
&lt;li>если вы делаете фотографию самостоятельно, то настройте правильно освещение, чтобы не было теней&lt;/li>
&lt;li>заправьте волосы за уши и убедитесь, что волосы не закрывают никакую часть лица&lt;/li>
&lt;li>сразу просите фотографа присылать вам оригинал фотографии&lt;/li>
&lt;/ul></description></item><item><title>IT курсы 2020</title><link>https://romankurnovskii.com/ru/posts/diploma/</link><pubDate>Fri, 01 Jan 2021 15:31:25 +0200</pubDate><guid>https://romankurnovskii.com/ru/posts/diploma/</guid><description>&lt;p>Промежуточные метрики еще в процессе расчетов&lt;/p>
&lt;p>За 2020 год:&lt;/p>
&lt;ul>
&lt;li>Затрачено времени на учебу/практику: ~5500 часов&lt;/li>
&lt;/ul>
&lt;!--
![](05.jpg)
![](13.jpg)
![](14.jpg)
![](06.jpg)
![](02.jpg)
![](03.jpg)
![](04.jpg)
![](07.jpg)
![](08.jpg)
![](09.jpg)
![](10.jpg)
![](23.jpg)
![](11.jpg)
![](12.jpg)
![](17.jpg)
![](18.jpg)
![](19.jpg)
![](20.jpg)
![](21.jpg)
![](22.jpg)
![](24.jpg)
![](25.jpg)
![](15.jpg)
![](16.jpg)
![](01.jpg) --></description></item><item><title>Posts Archive</title><link>https://romankurnovskii.com/ru/posts/archive/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/posts/archive/</guid><description>&lt;ul>
&lt;li>Docs &lt;a href="https://romankurnovskii.com/en/tracks/archive">EN&lt;/a> | &lt;a href="https://romankurnovskii.com/ru/tracks/archive">RU&lt;/a>&lt;/li>
&lt;li>Posts &lt;a href="https://romankurnovskii.com/en/posts/archive">EN&lt;/a> | &lt;a href="https://romankurnovskii.com/ru/posts/archive">RU&lt;/a>&lt;/li>
&lt;/ul></description></item></channel></rss>