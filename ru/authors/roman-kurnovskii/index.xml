<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Роман Курновский on Roman Kurnovskii</title><link>https://romankurnovskii.com/ru/authors/roman-kurnovskii/</link><description>Recent content in Роман Курновский on Roman Kurnovskii</description><generator>Hugo -- gohugo.io</generator><language>ru</language><copyright>&amp;copy; 2023 Personal page</copyright><atom:link href="https://romankurnovskii.com/ru/authors/roman-kurnovskii/index.xml" rel="self" type="application/rss+xml"/><item><title>1. Two Sum</title><link>https://romankurnovskii.com/ru/tracks/algorithms-101/leetcode/easy/1/</link><pubDate>Sun, 16 Oct 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/tracks/algorithms-101/leetcode/easy/1/</guid><description>LeetCode problem
Problem Statement In this problem, you&amp;rsquo;re given an array of integers nums and an integer target. Your task is to find the indices of two numbers in the array that add up to the target. The input array is guaranteed to have exactly one solution, and you can&amp;rsquo;t use the same element twice. The indices can be returned in any order.
Naive Solution A naive solution would involve using two nested loops to iterate through each pair of elements in the array and check if their sum is equal to the target.</description></item><item><title>AWS Certified Developer (DVA-C01 -> DVA-C02)</title><link>https://romankurnovskii.com/ru/tracks/aws-certified-developer-associate/</link><pubDate>Thu, 08 Sep 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/tracks/aws-certified-developer-associate/</guid><description>TL;DR Passed exam in one month. Created an app with questions and progress that helped me a lot Note The AWS Certified Developer - Associate exam is changing February 28, 2023. The last date to take the current exam is February 27, 2023.
To keep the docs up to date I will add new and latest information.
DVA-C01 vs DVA-C02 new domain: Domain 3: Deployment focus will be on testing and deploying your code into different environments including development, test, and production environments.</description></item><item><title>2. Add Two Numbers</title><link>https://romankurnovskii.com/ru/tracks/algorithms-101/leetcode/medium/2/</link><pubDate>Mon, 17 Oct 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/tracks/algorithms-101/leetcode/medium/2/</guid><description>You are given two non-empty linked lists representing two non-negative integers. The digits are stored in reverse order, and each of their nodes contains a single digit. Add the two numbers and return the sum as a linked list.
You may assume the two numbers do not contain any leading zero, except the number 0 itself.
Example 1:
Input: l1 = [2,4,3], l2 = [5,6,4] Output: [7,0,8] Explanation: 342 + 465 = 807. First accepted Idea:
Loop through lists add each value to the list reverse list calculate sum create linked list from reversed sum class Solution: def addTwoNumbers(self, l1: Optional[ListNode], l2: Optional[ListNode]) -&amp;gt; Optional[ListNode]: def createLinkedNode(values): head = ListNode(values[0]) current = head for i in values[1:]: node = ListNode(i) current.</description></item><item><title>5. Longest Palindromic Substring</title><link>https://romankurnovskii.com/ru/tracks/algorithms-101/leetcode/medium/5/</link><pubDate>Thu, 20 Oct 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/tracks/algorithms-101/leetcode/medium/5/</guid><description>LeetCode problem
Given a string s, return the longest palindromic substring in s.
A string is called a palindrome string if the reverse of that string is the same as the original string.
Example 1:
Input: s = &amp;quot;babad&amp;quot; Output: &amp;quot;bab&amp;quot; Explanation: &amp;quot;aba&amp;quot; is also a valid answer. Example 2:
Input: s = &amp;quot;cbbd&amp;quot; Output: &amp;quot;bb&amp;quot; First accepted Hints How can we reuse a previously computed palindrome to compute a larger palindrome?
How can we reuse a previously computed palindrome to compute a larger palindrome?</description></item><item><title>7. Reverse Integer</title><link>https://romankurnovskii.com/ru/tracks/algorithms-101/leetcode/medium/7/</link><pubDate>Tue, 01 Nov 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/tracks/algorithms-101/leetcode/medium/7/</guid><description>LeetCode problem
Given a signed 32-bit integer x, return x with its digits reversed. If reversing x causes the value to go outside the signed 32-bit integer range [-231, 231 - 1], then return 0.
Assume the environment does not allow you to store 64-bit integers (signed or unsigned).
Example 1:
Input: x = 123 Output: 321
Example 2:
Input: x = -123 Output: -321
Example 3:
Input: x = 120 Output: 21
First accepted Idea:
Convert number to int Remove minus if exist (or convert module of number) reverse class Solution: def reverse(self, x: int) -&amp;gt; int: reversed_int = [] str_int = str(x) if x &amp;lt; 0: str_int = str_int[1:] for i in reversed(range(len(str_int))): reversed_int.</description></item><item><title>Диссертация</title><link>https://romankurnovskii.com/ru/tracks/disser/</link><pubDate>Thu, 22 Dec 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/tracks/disser/</guid><description>План Публикационный профиль Следует вовремя обновлять идентификаторы автора (ORCID, ResearcherID, Scopus AuthorId) Зарегистрироваться как автор:
Science Index Scopus - Профиль создается автоматически при первой публикации в изданиях, индексируемых Scopus https://scienceadmin.rudn.ru/ru/auth/ - (с корпоративной почты @rudn.ru) Ресурсы:
Публикационные профили автора. Ресурсы РУДН (Бит.Наука, Science Admin, Репозиторий РУДН) Оформление ссылок / источников литературы ПО, редназначенное для хранения и систематизации библиографических данных, полных текстов документов, а также оформления ссылок в тексте и списков литературы.
Автоматический подбор/выбор стилей цитирования из базы:
Mendeley - Бесплатно - идеально совместим с базами Scopus, ScienceDirect Zotero - Бесплатно - раcпознает публикации с eLibrary Задачи:</description></item><item><title>Написание статей</title><link>https://romankurnovskii.com/ru/tracks/disser/articles-notes/</link><pubDate>Thu, 22 Dec 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/tracks/disser/articles-notes/</guid><description>Проверить журнал в диссернет
В аннотацию прописывать предложения, которые могут быть запрошены как поисковый запрос в поисковиках. Анотации индексируются поисковиками яндекс, гугл.
https://www.semanticscholar.org/ https://www.researchgate.net/ После выхода в сборнике:
Добавить на сайт pdf из журнала Добавить в ResearchGate IMF Report: September 16, 2022: West Bank and Gaza: Report to the AD HOC Liaison Committee
Конференции https://sciencen.org/konferencii/grafik-konferencij/ https://na-konferencii.ru/ https://konferencii.ru/ https://www.kon-ferenc.ru/econom.html https://www.hse.ru/science/HSEconf</description></item><item><title>13. Roman to Integer</title><link>https://romankurnovskii.com/ru/tracks/algorithms-101/leetcode/easy/13/</link><pubDate>Wed, 19 Oct 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/tracks/algorithms-101/leetcode/easy/13/</guid><description>LeetCode problem
Roman numerals are represented by seven different symbols: I, V, X, L, C, D and M.
Symbol Value I 1 V 5 X 10 L 50 C 100 D 500 M 1000 For example, 2 is written as II in Roman numeral, just two ones added together. 12 is written as XII, which is simply X + II. The number 27 is written as XXVII, which is XX + V + II.
Roman numerals are usually written largest to smallest from left to right.</description></item><item><title>14. Longest Common Prefix</title><link>https://romankurnovskii.com/ru/tracks/algorithms-101/leetcode/easy/14/</link><pubDate>Fri, 21 Oct 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/tracks/algorithms-101/leetcode/easy/14/</guid><description>LeetCode problem
Write a function to find the longest common prefix string amongst an array of strings.
If there is no common prefix, return an empty string &amp;quot;&amp;quot;.
Example 1:
Input: strs = [&amp;quot;flower&amp;quot;,&amp;quot;flow&amp;quot;,&amp;quot;flight&amp;quot;] Output: &amp;quot;fl&amp;quot; Example 2:
Input: strs = [&amp;quot;dog&amp;quot;,&amp;quot;racecar&amp;quot;,&amp;quot;car&amp;quot;] Output: &amp;quot;&amp;quot; Explanation: There is no common prefix among the input strings. First accepted Idea:
class Solution: def longestCommonPrefix(self, strs: List[str]) -&amp;gt; str: strs.sort() l = strs[0] r = strs[-1] if l == r: return l res = &amp;#34;&amp;#34; for i in range(0, len(l)): if l[i] == r[i]: res += l[i] else: return res return res</description></item><item><title>15. 3Sum</title><link>https://romankurnovskii.com/ru/tracks/algorithms-101/leetcode/medium/15/</link><pubDate>Thu, 03 Nov 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/tracks/algorithms-101/leetcode/medium/15/</guid><description>LeetCode problem
Given an integer array nums, return all the triplets [nums[i], nums[j], nums[k]] such that i != j, i != k, and j != k, and nums[i] + nums[j] + nums[k] == 0.
Notice that the solution set must not contain duplicate triplets.
Example 1:
Input: nums = [-1,0,1,2,-1,-4] Output: [[-1,-1,2],[-1,0,1]] Explanation: nums[0] + nums[1] + nums[2] = (-1) + 0 + 1 = 0. nums[1] + nums[2] + nums[4] = 0 + 1 + (-1) = 0.</description></item><item><title>Генерация аннотации</title><link>https://romankurnovskii.com/ru/tracks/disser/utils/text_2_short/</link><pubDate>Thu, 29 Dec 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/tracks/disser/utils/text_2_short/</guid><description> Сгенерировать</description></item><item><title>20. Valid Parentheses</title><link>https://romankurnovskii.com/ru/tracks/algorithms-101/leetcode/easy/20/</link><pubDate>Sun, 23 Oct 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/tracks/algorithms-101/leetcode/easy/20/</guid><description>LeetCode problem
Given a string s containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid.
An input string is valid if:
Open brackets must be closed by the same type of brackets. Open brackets must be closed in the correct order. Every close bracket has a corresponding open bracket of the same type. Example 1:
Input: s = &amp;quot;()[]{}&amp;quot; Output: true Example 2:
Input: s = &amp;quot;()[]{}&amp;quot; Output: true First accepted Idea:</description></item><item><title>21. Merge Two Sorted Lists</title><link>https://romankurnovskii.com/ru/tracks/algorithms-101/leetcode/easy/21/</link><pubDate>Tue, 25 Oct 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/tracks/algorithms-101/leetcode/easy/21/</guid><description>LeetCode problem
You are given the heads of two sorted linked lists list1 and list2.
Merge the two lists in a one sorted list. The list should be made by splicing together the nodes of the first two lists.
Return the head of the merged linked list.
Example 1:
Input: list1 = [1,2,4], list2 = [1,3,4] Output: [1,1,2,3,4,4] Example 2:
Input: list1 = [], list2 = [0] Output: [0] First accepted Idea:
Get smallest head. Loop and update its next.</description></item><item><title>26. Remove Duplicates from Sorted Array</title><link>https://romankurnovskii.com/ru/tracks/algorithms-101/leetcode/easy/26/</link><pubDate>Wed, 26 Oct 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/tracks/algorithms-101/leetcode/easy/26/</guid><description>LeetCode problem
Given an integer array nums sorted in non-decreasing order, remove the duplicates in-place such that each unique element appears only once. The relative order of the elements should be kept the same.
Since it is impossible to change the length of the array in some languages, you must instead have the result be placed in the first part of the array nums. More formally, if there are k elements after removing the duplicates, then the first k elements of nums should hold the final result.</description></item><item><title>28. Find the Index of the First Occurrence in a String</title><link>https://romankurnovskii.com/ru/tracks/algorithms-101/leetcode/easy/28/</link><pubDate>Sat, 19 Nov 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/tracks/algorithms-101/leetcode/easy/28/</guid><description>LeetCode problem
Given two strings needle and haystack, return the index of the first occurrence of needle in haystack, or -1 if needle is not part of haystack.
Example 1:
Input: haystack = &amp;ldquo;sadbutsad&amp;rdquo;, needle = &amp;ldquo;sad&amp;rdquo; Output: 0 Explanation: &amp;ldquo;sad&amp;rdquo; occurs at index 0 and 6. The first occurrence is at index 0, so we return 0.
Example 2:
Input: haystack = &amp;ldquo;leetcode&amp;rdquo;, needle = &amp;ldquo;leeto&amp;rdquo; Output: -1 Explanation: &amp;ldquo;leeto&amp;rdquo; did not occur in &amp;ldquo;leetcode&amp;rdquo;, so we return -1.</description></item><item><title>29. Divide Two Integers</title><link>https://romankurnovskii.com/ru/tracks/algorithms-101/leetcode/medium/29/</link><pubDate>Sun, 20 Nov 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/tracks/algorithms-101/leetcode/medium/29/</guid><description>LeetCode problem
Given two integers dividend and divisor, divide two integers without using multiplication, division, and mod operator.
The integer division should truncate toward zero, which means losing its fractional part. For example, 8.345 would be truncated to 8, and -2.7335 would be truncated to -2.
Return the quotient after dividing dividend by divisor.
Note: Assume we are dealing with an environment that could only store integers within the 32-bit signed integer range: [−231, 231 − 1]. For this problem, if the quotient is strictly greater than 231 - 1, then return 231 - 1, and if the quotient is strictly less than -231, then return -231.</description></item><item><title>Кандидатский минимум Мировая экономика 08.00.14</title><link>https://romankurnovskii.com/ru/tracks/disser/canditate-minimum/</link><pubDate>Mon, 12 Dec 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/tracks/disser/canditate-minimum/</guid><description>Вопросы к кандидатскому минимуму:
РУДН ВШЭ МГИМО Перечень вопросов, выносимых на кандидатский минимум по специальности 08.00.14 Мировая экономика Раздел 1. Экономическая теория.
Меркантилизм как внешнеторговая теория и политика. «Игра с нулевой суммой» в торговле. Адам Смит: теория абсолютного преимущества в торговле. Давид Рикардо: теория сравнительного преимущества в торговле. Теорема Хекшера-Олина и выравнивание относительных цен на торгуемые товары. Раздел 2. Международная торговля.
Понятие и критерии «открытости» национальной экономики. Показатели открытости экономик США, стран Европы, России. Особенности развития мировой торговли товарами в 2000-2010-е годы: стоимостная динамика и товарно-географическая структура.</description></item><item><title>33. Search in Rotated Sorted Array</title><link>https://romankurnovskii.com/ru/tracks/algorithms-101/leetcode/medium/33/</link><pubDate>Thu, 24 Nov 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/tracks/algorithms-101/leetcode/medium/33/</guid><description>LeetCode problem
There is an integer array nums sorted in ascending order (with distinct values).
Prior to being passed to your function, nums is possibly rotated at an unknown pivot index k (1 &amp;lt;= k &amp;lt; nums.length) such that the resulting array is [nums[k], nums[k+1], ..., nums[n-1], nums[0], nums[1], ..., nums[k-1]] (0-indexed). For example, [0,1,2,4,5,6,7] might be rotated at pivot index 3 and become [4,5,6,7,0,1,2].
Given the array nums after the possible rotation and an integer target, return the index of target if it is in nums, or -1 if it is not in nums.</description></item><item><title>34. Find First and Last Position of Element in Sorted Array</title><link>https://romankurnovskii.com/ru/tracks/algorithms-101/leetcode/medium/34/</link><pubDate>Fri, 25 Nov 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/tracks/algorithms-101/leetcode/medium/34/</guid><description>LeetCode problem
Given an array of integers nums sorted in non-decreasing order, find the starting and ending position of a given target value.
If target is not found in the array, return [-1, -1].
You must write an algorithm with O(log n) runtime complexity.
Example 1:
Input: nums = [5,7,7,8,8,10], target = 8 Output: [3,4]
Example 2:
Input: nums = [5,7,7,8,8,10], target = 6 Output: [-1,-1]
Example 3:
Input: nums = [], target = 0 Output: [-1,-1]
Code Idea:</description></item><item><title>36. Valid Sudoku</title><link>https://romankurnovskii.com/ru/tracks/algorithms-101/leetcode/medium/36/</link><pubDate>Sat, 03 Dec 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/tracks/algorithms-101/leetcode/medium/36/</guid><description>LeetCode problem
Determine if a 9 x 9 Sudoku board is valid. Only the filled cells need to be validated according to the following rules:
Each row must contain the digits 1-9 without repetition. Each column must contain the digits 1-9 without repetition. Each of the nine 3 x 3 sub-boxes of the grid must contain the digits 1-9 without repetition.
Note:
A Sudoku board (partially filled) could be valid but is not necessarily solvable. Only the filled cells need to be validated according to the mentioned rules.</description></item><item><title>38. Count and Say</title><link>https://romankurnovskii.com/ru/tracks/algorithms-101/leetcode/medium/38/</link><pubDate>Thu, 08 Dec 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/tracks/algorithms-101/leetcode/medium/38/</guid><description>LeetCode problem
The count-and-say sequence is a sequence of digit strings defined by the recursive formula:
countAndSay(1) = &amp;quot;1&amp;quot; countAndSay(n) is the way you would &amp;ldquo;say&amp;rdquo; the digit string from countAndSay(n-1), which is then converted into a different digit string. To determine how you &amp;ldquo;say&amp;rdquo; a digit string, split it into the minimal number of substrings such that each substring contains exactly one unique digit. Then for each substring, say the number of digits, then say the digit. Finally, concatenate every said digit.</description></item><item><title>46. Permutations</title><link>https://romankurnovskii.com/ru/tracks/algorithms-101/leetcode/medium/46/</link><pubDate>Sat, 17 Dec 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/tracks/algorithms-101/leetcode/medium/46/</guid><description>LeetCode problem
Given an array nums of distinct integers, return all the possible permutations. You can return the answer in any order.
Example 1:
Input: nums = [1,2,3] Output: [[1,2,3],[1,3,2],[2,1,3],[2,3,1],[3,1,2],[3,2,1]] Example 2:
Input: nums = [0,1] Output: [[0,1],[1,0]] Example 3:
Input: nums = [1] Output: [[1]] Idea:
Draw a decigion tree Fix when branch is ready to return Implementation:
Recursive: Go through every value in nums Pop value call perm() with updated nums from each call(step) append &amp;lsquo;poped&amp;rsquo; value from step 2 class Solution: def permute(self, nums: List[int]) -&amp;gt; List[List[int]]: result_permutation = [] if len(nums) == 1: # base case return [nums[:]] for _ in nums: tmp_removed = nums.</description></item><item><title>48. Rotate Image</title><link>https://romankurnovskii.com/ru/tracks/algorithms-101/leetcode/medium/48/</link><pubDate>Sun, 18 Dec 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/tracks/algorithms-101/leetcode/medium/48/</guid><description>LeetCode problem
You are given an n x n 2D matrix representing an image, rotate the image by 90 degrees (clockwise).
You have to rotate the image in-place, which means you have to modify the input 2D matrix directly. DO NOT allocate another 2D matrix and do the rotation.
Example 1:
Input: matrix = [[1,2,3],[4,5,6],[7,8,9]] Output: [[7,4,1],[8,5,2],[9,6,3]] Example 2:
Input: matrix = [[5,1,9,11],[2,4,8,10],[13,3,6,7],[15,14,12,16]] Output: [[15,13,2,5],[14,3,4,1],[12,6,8,9],[16,7,10,11]] Idea:
class Solution: def rotate(self, matrix: List[List[int]]) -&amp;gt; None: &amp;#34;&amp;#34;&amp;#34; Do not return anything, modify matrix in-place instead.</description></item><item><title>49. Group Anagrams</title><link>https://romankurnovskii.com/ru/tracks/algorithms-101/leetcode/medium/49/</link><pubDate>Wed, 21 Dec 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/tracks/algorithms-101/leetcode/medium/49/</guid><description>LeetCode problem
Given an array of strings strs, group the anagrams together. You can return the answer in any order.
An Anagram is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once.
Example 1:
Input: strs = [&amp;quot;eat&amp;quot;,&amp;quot;tea&amp;quot;,&amp;quot;tan&amp;quot;,&amp;quot;ate&amp;quot;,&amp;quot;nat&amp;quot;,&amp;quot;bat&amp;quot;] Output: [[&amp;quot;bat&amp;quot;],[&amp;quot;nat&amp;quot;,&amp;quot;tan&amp;quot;],[&amp;quot;ate&amp;quot;,&amp;quot;eat&amp;quot;,&amp;quot;tea&amp;quot;]] Example 2:
Input: strs = [&amp;quot;&amp;quot;] Output: [[&amp;quot;&amp;quot;]] Example 3:
Input: strs = [&amp;quot;a&amp;quot;] Output: [[&amp;quot;a&amp;quot;]] Idea:
class Solution: def groupAnagrams(self, strs: List[str]) -&amp;gt; List[List[str]]: dd = {} for s in strs: s_sort = &amp;#34;&amp;#34;.</description></item><item><title>50. Pow(x, n)</title><link>https://romankurnovskii.com/ru/tracks/algorithms-101/leetcode/medium/50/</link><pubDate>Thu, 22 Dec 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/tracks/algorithms-101/leetcode/medium/50/</guid><description>LeetCode problem
Implement pow(x, n), which calculates x raised to the power n (i.e., x^n).
Example 1:
Input: x = 2.00000, n = 10 Output: 1024.00000 Example 2:
Input: x = 2.10000, n = 3 Output: 9.26100 Example 3:
Input: x = 2.00000, n = -2 Output: 0.25000 Explanation: 2-2 = 1/22 = 1/4 = 0.25 Approach 1:
class Solution: def myPow(self, x: float, n: int) -&amp;gt; float: return x ** n Approach 2:
Recursive
class Solution: def myPow(self, x, n): if not n: return 1 if n &amp;lt; 0: return 1 / self.</description></item><item><title>53. Maximum Subarray</title><link>https://romankurnovskii.com/ru/tracks/algorithms-101/leetcode/medium/53/</link><pubDate>Mon, 26 Dec 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/tracks/algorithms-101/leetcode/medium/53/</guid><description>LeetCode problem
Given an integer array nums, find the subarray which has the largest sum and return its sum.
Example 1:
Input: nums = [-2,1,-3,4,-1,2,1,-5,4] Output: 6 Explanation: [4,-1,2,1] has the largest sum = 6. Example 2:
Input: nums = [1] Output: 1 Example 3:
Input: nums = [5,4,-1,7,8] Output: 23 Approach 1:
class Solution: def maxSubArray(self, nums: List[int]) -&amp;gt; int: max_ = nums[0] max2 = nums[0] if len(nums) == 1: return max_ for i in range(1, len(nums)): max_ = max(nums[i], nums[i] + max_) max2 = max(max_, max2) return max2</description></item><item><title>55. Jump Game</title><link>https://romankurnovskii.com/ru/tracks/algorithms-101/leetcode/medium/55/</link><pubDate>Thu, 29 Dec 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/tracks/algorithms-101/leetcode/medium/55/</guid><description>LeetCode problem
You are given an integer array nums. You are initially positioned at the array&amp;rsquo;s first index, and each element in the array represents your maximum jump length at that position.
Return true if you can reach the last index, or false otherwise.
Example 1:
Input: nums = [2,3,1,1,4] Output: true Explanation: Jump 1 step from index 0 to 1, then 3 steps to the last index. Example 2:
Input: nums = [3,2,1,0,4] Output: false Explanation: You will always arrive at index 3 no matter what.</description></item><item><title>56. Merge Intervals</title><link>https://romankurnovskii.com/ru/tracks/algorithms-101/leetcode/medium/56/</link><pubDate>Thu, 29 Dec 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/tracks/algorithms-101/leetcode/medium/56/</guid><description>LeetCode problem
Given an array of intervals where intervals[i] = [starti, endi], merge all overlapping intervals, and return an array of the non-overlapping intervals that cover all the intervals in the input.
Example 1:
Input: intervals = [[1,3],[2,6],[8,10],[15,18]] Output: [[1,6],[8,10],[15,18]] Explanation: Since intervals [1,3] and [2,6] overlap, merge them into [1,6]. Example 2:
Input: intervals = [[1,4],[4,5]] Output: [[1,5]] Explanation: Intervals [1,4] and [4,5] are considered overlapping. Approach 1:
class Solution: def merge(self, intervals: List[List[int]]) -&amp;gt; List[List[int]]: intervals.sort() res = [intervals[0]] for ir in range(1, len(intervals)): if intervals[ir][0] &amp;gt;= res[-1][0] and intervals[ir][0] &amp;lt;= res[-1][1]: # [1,3],[2,6] res[-1][0] = min(intervals[ir][0], res[-1][0]) res[-1][1] = max(intervals[ir][1], res[-1][1]) elif res[-1][0] &amp;gt;= intervals[ir][0] and res[-1][0] &amp;lt;= intervals[ir][1]: # [1,3],[0,4] res[-1][0] = min(intervals[ir][0], res[-1][0]) res[-1][1] = max(intervals[ir][1], res[-1][1]) else: res.</description></item><item><title>62. Unique Paths</title><link>https://romankurnovskii.com/ru/tracks/algorithms-101/leetcode/medium/62/</link><pubDate>Mon, 09 Jan 2023 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/tracks/algorithms-101/leetcode/medium/62/</guid><description>LeetCode problem
There is a robot on an m x n grid. The robot is initially located at the top-left corner (i.e., grid[0][0]). The robot tries to move to the bottom-right corner (i.e., grid[m - 1][n - 1]). The robot can only move either down or right at any point in time.
Given the two integers m and n, return the number of possible unique paths that the robot can take to reach the bottom-right corner.
The test cases are generated so that the answer will be less than or equal to 2 * 10^9.</description></item><item><title>66. Plus One</title><link>https://romankurnovskii.com/ru/tracks/algorithms-101/leetcode/easy/66/</link><pubDate>Thu, 27 Oct 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/tracks/algorithms-101/leetcode/easy/66/</guid><description>LeetCode problem
You are given a large integer represented as an integer array digits, where each digits[i] is the ith digit of the integer. The digits are ordered from most significant to least significant in left-to-right order. The large integer does not contain any leading 0&amp;rsquo;s.
Increment the large integer by one and return the resulting array of digits.
Example 1:
Input: digits = [1,2,3] Output: [1,2,4] Explanation: The array represents the integer 123. Incrementing by one gives 123 + 1 = 124.</description></item><item><title>69. Sqrt(x)</title><link>https://romankurnovskii.com/ru/tracks/algorithms-101/leetcode/easy/69/</link><pubDate>Fri, 28 Oct 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/tracks/algorithms-101/leetcode/easy/69/</guid><description>LeetCode problem
Given a non-negative integer x, return the square root of x rounded down to the nearest integer. The returned integer should be non-negative as well.
You must not use any built-in exponent function or operator.
For example, do not use pow(x, 0.5) in c++ or x ** 0.5 in python.
Example 1:
Input: x = 4 Output: 2 Explanation: The square root of 4 is 2, so we return 2. Example 2:
Input: x = 8 Output: 2 Explanation: The square root of 8 is 2.</description></item><item><title>70. Climbing Stairs</title><link>https://romankurnovskii.com/ru/tracks/algorithms-101/leetcode/easy/70/</link><pubDate>Sat, 29 Oct 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/tracks/algorithms-101/leetcode/easy/70/</guid><description>LeetCode problem
You are climbing a staircase. It takes n steps to reach the top.
Each time you can either climb 1 or 2 steps. In how many distinct ways can you climb to the top?
Example 1:
Input: n = 2 Output: 2 Explanation: There are two ways to climb to the top. 1. 1 step + 1 step 2. 2 steps Example 2:
Input: n = 3 Output: 3 Explanation: There are three ways to climb to the top.</description></item><item><title>73. Set Matrix Zeroes</title><link>https://romankurnovskii.com/ru/tracks/algorithms-101/leetcode/medium/73/</link><pubDate>Mon, 09 Jan 2023 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/tracks/algorithms-101/leetcode/medium/73/</guid><description>LeetCode problem
Given an m x n integer matrix matrix, if an element is 0, set its entire row and column to 0&amp;rsquo;s.
You must do it in place.
Example 1:
Input: matrix = [[1,1,1],[1,0,1],[1,1,1]] Output: [[1,0,1],[0,0,0],[1,0,1]] Example 2:
Input: matrix = [[0,1,2,0],[3,4,5,2],[1,3,1,5]] Output: [[0,0,0,0],[0,4,5,0],[0,3,1,0]] Approach 1:
Idea:
LeetCode Submission
class Solution: def setZeroes(self, matrix: List[List[int]]) -&amp;gt; None: rows = len(matrix) cols = len(matrix[0]) # 1. Check first row/column for zero&amp;#39;s first_row_has_zero = 0 in matrix[0] first_col_has_zero = 0 in list(zip(*matrix))[0] # 2.</description></item><item><title>88. Merge Sorted Array</title><link>https://romankurnovskii.com/ru/tracks/algorithms-101/leetcode/easy/88/</link><pubDate>Sun, 30 Oct 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/tracks/algorithms-101/leetcode/easy/88/</guid><description>LeetCode problem
First accepted class Solution: def merge(self, nums1: List[int], m: int, nums2: List[int], n: int) -&amp;gt; None: &amp;#34;&amp;#34;&amp;#34; Do not return anything, modify nums1 in-place instead. &amp;#34;&amp;#34;&amp;#34; i = len(nums1) - n for j in nums2: nums1[i] = j i += 1 nums1.sort()</description></item><item><title>94. Binary Tree Inorder Traversal</title><link>https://romankurnovskii.com/ru/tracks/algorithms-101/leetcode/easy/94/</link><pubDate>Mon, 31 Oct 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/tracks/algorithms-101/leetcode/easy/94/</guid><description>LeetCode problem
Given the root of a binary tree, return the inorder traversal of its nodes' values.
Example 1:
Input: root = [1,null,2,3] Output: [1,3,2] Example 2:
Input: root = [] Output: [] Example 3:
Input: root = [1] Output: [1] Thoughts Don&amp;rsquo;t understand what needed. Why:
1-null-2-3 becomes 1-3-2 [1,2,5,7,8,9,10] becomes [7,2,8,1,9,5,10] In 1-null-2-3 1 becomes the first because we loop to its left node which is null, then come back and first value here is 1.</description></item><item><title>Заметки по Израилю</title><link>https://romankurnovskii.com/ru/tracks/disser/israel-notes/</link><pubDate>Fri, 10 Feb 2023 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/tracks/disser/israel-notes/</guid><description>Статистика - показатели по Израилю</description></item><item><title>Раздел 1. Экономическая теория</title><link>https://romankurnovskii.com/ru/tracks/disser/canditate-minimum/01-economic-theory/</link><pubDate>Mon, 12 Dec 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/tracks/disser/canditate-minimum/01-economic-theory/</guid><description>Меркантилизм как внешнеторговая теория и политика. «Игра с нулевой суммой» в торговле. Адам Смит: теория абсолютного преимущества в торговле. Давид Рикардо: теория сравнительного преимущества в торговле. Теорема Хекшера-Олина и выравнивание относительных цен на торгуемые товары. Меркантилизм как внешнеторговая теория и политика. «Игра с нулевой суммой» в торговле Меркантилизм (15-17 вв) - это экономическая политика, цель которой — накопление в стране драгоценных металлов, средство достижения цели – активный торговый баланс, то есть превышение экспорта над импортом.
Необходимость активного вмешательства государства в хозяйственную деятельность, в основном в форме протекционизма: установления высоких импортных пошлин, выдачи субсидий национальным производителям и так далее.</description></item><item><title>Раздел 2. Международная торговля</title><link>https://romankurnovskii.com/ru/tracks/disser/canditate-minimum/02-international-trade/</link><pubDate>Mon, 12 Dec 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/tracks/disser/canditate-minimum/02-international-trade/</guid><description>Понятие и критерии «открытости» национальной экономики. Показатели открытости экономик США, стран Европы, России. Особенности развития мировой торговли товарами в 2000-2010-е годы: стоимостная динамика и товарно-географическая структура. Крупнейшие страны-экспортеры и страны-импортеры. Сущность и причины структурных сдвигов в мировой торговле промышленными товарами, сырьем, топливом и продовольствием. Место и роль России в международной торговле. Конкурентные преимущества России. Стоимостная динамика, структура и география международной торговли услугами. Крупнейшие страны-экспортеры и страны-импортеры. Международный трансферт технологий: современные каналы, формы и показатели технологического обмена между странами.</description></item><item><title>Раздел 3. Международная торговая политика</title><link>https://romankurnovskii.com/ru/tracks/disser/canditate-minimum/03-international-policy/</link><pubDate>Sat, 25 Feb 2023 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/tracks/disser/canditate-minimum/03-international-policy/</guid><description>Политика «свободной торговли» и политика протекционизма в исторической перспективе. Цели и инструменты внешнеторговой политики. Таможенно-тарифное регулирование: характеристика основных институтов и их экономическое значение. Нетарифные барьеры в международной торговле. Всемирная торговая организация (ВТО): функции, задачи, система соглашений, новые направления многосторонних торговых переговоров. Россия в ВТО: сложности вступления, принятые обязательства, экономические последствия. Характеристика современного участия РФ в ВТО. Система внешнеторгового регулирования в ЕАЭС и в России. Политика «свободной торговли» и политика протекционизма в исторической перспективе. Цели и инструменты внешнеторговой политики Политика &amp;ldquo;свободной торговли&amp;rdquo; и политика протекционизма - это две различные стратегии, которые используются государствами для регулирования их экономики.</description></item><item><title>Раздел 4. Международное движение капитала</title><link>https://romankurnovskii.com/ru/tracks/disser/canditate-minimum/04-international-capital-movement/</link><pubDate>Sat, 25 Feb 2023 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/tracks/disser/canditate-minimum/04-international-capital-movement/</guid><description>Формы, структура и масштабы международного движения капитала. Масштабы, динамика и география прямых иностранных инвестиций. Основные инвестирующие и принимающие страны. Международная инвестиционная позиция России: динамика и состав иностранных активов и обязательств. Условия для масштабного привлечения в Россию иностранных инвестиций. Международное движение капитала - это процесс переноса финансовых ресурсов из одной страны в другую в целях получения прибыли или увеличения доходности инвестиций. Международное движение капитала имеет важное значение для экономического развития и роста стран, позволяя привлекать капитал для инвестирования в различные отрасли экономики.</description></item><item><title>Раздел 5. Международный валютный рынок</title><link>https://romankurnovskii.com/ru/tracks/disser/canditate-minimum/05-international-foreign-exchange-market/</link><pubDate>Thu, 02 Mar 2023 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/tracks/disser/canditate-minimum/05-international-foreign-exchange-market/</guid><description>Понятие иностранной валюты. Валютный курс и паритет покупательной способности валюты. Мировой валютный рынок: понятие, функции, размер, институциональная структура, тенденции развития. Виды операций на валютном рынке. Хеджирование валютных рисков. Факторы, влияющие на формирование валютного курса. Понятие иностранной валюты. Валютный курс и паритет покупательной способности валюты Понятие иностранной валюты: Иностранная валюта - это денежные единицы других стран, которые используются в международных финансовых - операциях; Иностранная валюта может быть использована для оплаты товаров и услуг, инвестирования, торговли на - международном валютном рынке и других целей.</description></item><item><title>EC2</title><link>https://romankurnovskii.com/ru/tracks/aws-certified-developer-associate/ec2/</link><pubDate>Sat, 10 Sep 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/tracks/aws-certified-developer-associate/ec2/</guid><description>Amazon EC2 Документация Amazon EC2 - 1 Документация Amazon EC2 - 2 Amazon Elastic Compute Cloud (EC2) - одна из самых популярных служб AWS. EC2 позволяет запускать различные типы облачных экземпляров и оплачивать их по модели &amp;ldquo;оплата за использование&amp;rdquo;. EC2 позволяет контролировать вычислительные ресурсы на уровне операционной системы, работая в вычислительной среде Amazon.
Цены Актуальный прайс
Практика Создание EC2 инстанса Заходим на страницу EC2 -&amp;gt; Launch Instance
Образ EC2 Выбираем нужный нам образ Создание ключей Создадим ключ, чтобы использовать его для подключения к инстансу извне Вводим любое имя.</description></item><item><title>341. Flatten Nested List Iterator</title><link>https://romankurnovskii.com/ru/tracks/algorithms-101/leetcode/medium/341/</link><pubDate>Thu, 31 Aug 2023 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/tracks/algorithms-101/leetcode/medium/341/</guid><description>Задача Дан вложенный список целых чисел. Реализуйте итератор, который &amp;ldquo;разворачивает&amp;rdquo; этот вложенный список.
Подход Задача состоит в реализации итератора, который будет последовательно возвращать все элементы из вложенного списка. Вложенный список может содержать как обычные числа, так и другие вложенные списки. Наивное решение заключается в том, чтобы сначала полностью &amp;ldquo;развернуть&amp;rdquo; весь вложенный список в одномерный список, а затем реализовать итератор для этого одномерного списка.
Алгоритм Инициализация: Создать одномерный список и заполнить его элементами из вложенного списка. next(): Возвращает следующий элемент одномерного списка.</description></item><item><title>3032</title><link>https://romankurnovskii.com/ru/tracks/algorithms-101/leetcode/hard/3032/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/tracks/algorithms-101/leetcode/hard/3032/</guid><description>https://leetcode.com/problems/count-numbers-with-unique-digits-ii
class Solution: def numberCount(self, a: int, b: int) -&amp;gt; int: # Initialize the count of numbers with all unique digits unique_digit_count = 0 # Loop through each number in the range from a to b, inclusive for num in range(a, b + 1): # Convert the number to a string to examine its digits num_str = str(num) # Convert the string to a set of characters to remove duplicates unique_digits = set(num_str) # If the length of the set is equal to the length of the number string, # it means all digits are unique if len(unique_digits) == len(num_str): # Increment the count for each number with all unique digits unique_digit_count += 1 # Return the total count of unique digit numbers return unique_digit_count</description></item><item><title>Различие между деревьями и префиксными деревьями Tries vs Trees?</title><link>https://romankurnovskii.com/ru/posts/tree-vs-trie-data-structures/</link><pubDate>Fri, 16 Feb 2024 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/posts/tree-vs-trie-data-structures/</guid><description>Несмотря на похожесть названий, эти структуры данных выполняют разные задачи, и понимание их различий крайне важно для их эффективного применения.
Дерево (Tree) Структура данных дерево - это коллекция сущностей, называемых узлами, соединенных рёбрами.
Каждый узел содержит значение и список ссылок на свои дочерние узлы. Первый узел дерева называется корнем. Визуализируя, структура данных дерева напоминает перевернутое дерево, с корнем на верху и листьями (узлами без детей) внизу.
Деревья являются иерархическими, нелинейными структурами данных.
Они отлично подходят для представления отношений между объектами, и их операции обычно имеют логарифмическую временную сложность, что делает их эффективными для операций поиска.</description></item><item><title>Как создать приложение React-Electron с нуля</title><link>https://romankurnovskii.com/ru/posts/howto-create-react-electron-app-ts/</link><pubDate>Sat, 26 Aug 2023 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/posts/howto-create-react-electron-app-ts/</guid><description>В этом пошаговом руководстве мы создадим простое приложение React-Electron с нуля. Electron — это фреймворк, который позволяет создавать кроссплатформенные настольные приложения с использованием веб-технологий, таких как HTML, CSS и JavaScript. React — популярная библиотека JavaScript для создания пользовательских интерфейсов.
Я использую этот чистый шаблон в качестве заготовки для своих проектов.
Вкратце Перейдите к репозиторию electron-react-template Нажмите Use this template, чтобы создать новый репозиторий и начать кодирование. Предварительные требования Прежде чем начать этот урок, убедитесь, что следующие инструменты установлены на вашей системе:</description></item><item><title>Пополнение Interactive Brokers с Израильского счета</title><link>https://romankurnovskii.com/ru/posts/interactivebrokers-deposit/</link><pubDate>Fri, 07 Oct 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/posts/interactivebrokers-deposit/</guid><description>Web Создание заявки в IB Заходим на сайт https://www.interactivebrokers.co.uk/portal/#/ Нажимаем Deposit Нажимаем Use a new deposit method если ранее шаблон не был создан Bank Wire -&amp;gt; Get instructions Account Number: Номер банковского счета.
Получаем инструкции с реквизитами для пополнения Bank Wire Instructions Эти данные Вам нужны для оплаты в Discount Bank
Отправить деньги из Discount Bank Заходим в личный кабинет банка start.telebank.co.il Нажимаем: ביצוע העברה
Заполняем форму
Нажимаем המשך и жмем далее. Приходит смс с подверждением, вводим и жмем далее</description></item><item><title>IAM</title><link>https://romankurnovskii.com/ru/tracks/aws-certified-developer-associate/iam/</link><pubDate>Fri, 09 Sep 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/tracks/aws-certified-developer-associate/iam/</guid><description>AWS Identity and Access Management Документация AWS IAM Документация AWS IAM AWS Identity and Access Management (IAM) позволяет безопасно контролировать доступ пользователей к службам и ресурсам AWS. Эта услуга предназначена для организаций с множеством пользователей или систем, использующих такие продукты AWS, как Amazon EC2, Amazon RDS и AWS Management Console. С помощью IAM вы можете централизованно управлять пользователями, учетными данными безопасности, такими как ключи доступа, и разрешениями, контролирующими доступ пользователей к ресурсам AWS.
Практика Переходим на страницу IAM</description></item><item><title>Увеличение картинки по нажатию в Hugo</title><link>https://romankurnovskii.com/ru/posts/hugo-add-image-zoomin/</link><pubDate>Sat, 09 Jul 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/posts/hugo-add-image-zoomin/</guid><description>Введение В Hugo по умолчанию используется парсинг markdown файлов. Т.е. мы получаем html код в том виде, как он написан в markdown.
Для того, чтобы нам понимать какие именно изображения мы можем увеличивать, добавим к этим изображениям отдельный тег/ключ/id
Инструменты Для реализации функционала нам необходимо:
написать/подключить скрипт/обработчик, который будет выполнять эффект zoomin к нужным нам изображениям Добавить необходимые метаданные к изображениям, чтобы скрипт их смог найти Скрипт zoomin Для добавления возможности увеличивать картинку при нажатии воспользуемся пакетом medium-zoom.</description></item><item><title>Израиль - Хайфа - Бахайские сады</title><link>https://romankurnovskii.com/ru/photos/22-07-02-israel-haifa-bahai-gardens/</link><pubDate>Sat, 02 Jul 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/photos/22-07-02-israel-haifa-bahai-gardens/</guid><description>Маршрут</description></item><item><title>Карманная книга по Python</title><link>https://romankurnovskii.com/ru/tracks/python-101/</link><pubDate>Tue, 28 Jun 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/tracks/python-101/</guid><description>Скачать | PDF обновление 2023/02/27
Здравствуйте!
Я рад приветствовать вас на страницах этого хендбука по языку программирования Python.
Python - это мощный и гибкий язык программирования, который находит применение в самых различных областях, от разработки веб-приложений и научных исследований до создания игр и машинного обучения. Однако, как и любой другой язык программирования, Python может показаться довольно сложным для начинающих.
Этот хендбук призван помочь вам изучить основы языка Python, научиться использовать различные библиотеки и инструменты, а также дать ответы на самые часто задаваемые вопросы о языке.</description></item><item><title>Установка Ubuntu Desktop 22.10 (Kinetic Kudu) на ARM CPU</title><link>https://romankurnovskii.com/ru/posts/howto-install-ubuntu-desktop-on-arm/</link><pubDate>Thu, 23 Jun 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/posts/howto-install-ubuntu-desktop-on-arm/</guid><description>Ubuntu - одна из популярных Linux систем и достаточно много обзоров по установке Ubuntu. В этой статье мы будем устанавливать образ Ubuntu для ARM процессора на виртуальную машину UTM. Вся установка будет проходить на Mac OS.
Загрузка установочного образа На сайте Ubuntu доступен для скачивания только образ Ubuntu Server ARM версии 22.04 - без графического интерфейса. Но можно скачать обновленный релиз Ubuntu Desktop для ARM - Daily Build по ссылке.
Находим 64-bit ARM (ARMv8/AArch64) desktop image и скачиваем Виртуальная машина В качестве виртуальной машины для установки RHEL 9 использую бесплатную виртуальную машину UTM.</description></item><item><title>Как подключить React .jsx в проект на Hugo</title><link>https://romankurnovskii.com/ru/posts/integrate-hugo-react/</link><pubDate>Sun, 19 Jun 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/posts/integrate-hugo-react/</guid><description>Hugo предлагает подключение различных JS библиотек в проект. Такие изменения влекут за собой полное обновление проекта. Сегодня мы подключим компонент react без внесения больших изменений.
React - это библиотека. Чтобы она заработала на сайте, необходимо ее подклчюить, а далее воспользоваться внутренними функциями.
Подключить можно двумя способоами. С помощью подгрузки скрипта с CDN или загрузки пакета в package.json, чтопозволит использовать .jsx
package.json План:
Импорт пакета в package.json Создание .jsx скрипта Загрузка/build пакета в Hugo Импорт В корне проекта запускаем команду</description></item><item><title>Установка Linux RHEL 9</title><link>https://romankurnovskii.com/ru/posts/howto-install-rhel-9-free/</link><pubDate>Fri, 17 Jun 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/posts/howto-install-rhel-9-free/</guid><description>Red Hat Enterprise Linux 9 (RHEL 9) под кодовым названием Plow стал общедоступным (GA). Компания Red Hat объявила об этом 18 мая 2022 года. Она сменила бета-версию, которая существовала с 3 ноября 2021 года.
RHEL 9 - это несколько первых релизов в семействе Red Hat. Это первый крупный релиз после приобретения Red Hat компанией IBM в июле 2019 года, а также первая крупная версия после отказа от проекта CentOS в пользу CentOS Stream, который теперь является предшественником RHEL.</description></item><item><title>Популярные команды Docker</title><link>https://romankurnovskii.com/ru/posts/docker-commands/</link><pubDate>Tue, 07 Jun 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/posts/docker-commands/</guid><description>Full in english
Топ 10 комманд Docker docker ps — смотрим список запущенных контейнеров docker pull — загрузка образа docker build — собирает образ docker logs — смотрим логи docker run — запускаем контейнер docker stop — останавливает контейнер docker kill — «убивает» контейнер docker rm — удаляет контейнер docker rmi — удаляет образ docker volume ls — список томов docker build Документация Построить образ из Dockerfile.
docker build [DOCKERFILE PATH] Флаги
--file -f Путь, где находится Dockerfile --force-rm Всегда удалять временные контейнеры.</description></item><item><title>Как сделать редирект на другой URL в JavaScript</title><link>https://romankurnovskii.com/ru/posts/howto-redirect-to-url/</link><pubDate>Mon, 06 Jun 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/posts/howto-redirect-to-url/</guid><description>Пользователя можно перенаправлять с одной веб-страницы на любую другую несколькими способами.
с помощью обновления мета-данных HTML. Перенаправления на стороне сервера. Например, используя файл .htaccess, PHP с помощью перенаправления на стороне клиента через JavaScript. Для перенаправления на другой URL с помощью JavaScript используем window.location.href или window.location.replace(). Передать второй аргумент, чтобы произвести клик по ссылке (true - по умолчанию) или перенаправление по HTTP (false).
JavaScript функции Логика const newUrl = &amp;#39;https://www.google.com/&amp;#39;; window.location.href = newUrl; // 1 window.location.replace(newUrl); // 2 window.location.assign(newUrl) // 3 Пример функции const redirect = (url, asLink = true) =&amp;gt; asLink ?</description></item><item><title>Шпаргалка tar архиватор</title><link>https://romankurnovskii.com/ru/posts/cheat-sheet-command-tar/</link><pubDate>Sun, 05 Jun 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/posts/cheat-sheet-command-tar/</guid><description>Кратко Создать:
tar cf archive.tar directory Распаковать:
tar xf archive.tar Создание mkdir my_dir # Создаем папку tar cf dir_archive.tar my_dir # Создаем архив с папкой ll # Проверяем содержимое текущего каталога # -rw-r--r-- 1 r staff 1.5K Jun 4 14:42 dir_archive.tar # drwxr-xr-x 2 r staff 64B Jun 4 14:42 my_dir Распаковка tar xf dir_archive.tar Сжатие tar czf dir_archive.tar.gz dir_archive.tar Распаковка сжатого файла tar xzf dir_archive.tar.gz Сжатие с помощью bzip2 tar cjf dir_archive.tar.bz2 my_dir Распаковка с помощью bzip2 tar xjf dir_archive.</description></item><item><title>Как переименовать файлы в Python</title><link>https://romankurnovskii.com/ru/posts/howto-rename-files-in-python/</link><pubDate>Sat, 04 Jun 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/posts/howto-rename-files-in-python/</guid><description>os.rename Если имеется весь путь до пути файла:
old_source = &amp;#39;/Users/r/Desktop/old_source.txt&amp;#39; new_source = &amp;#39;/Users/r/Desktop/new_source.txt&amp;#39; os.rename(&amp;#34;old_source&amp;#34;, &amp;#34;new_source&amp;#34;) Если имеется только имя файла, воспользуемся os.path.splitext(), который возвращает кортеж из имени файла и расширения:
import os for file in os.listdir(): name, ext = os.path.splitext(file) # return (&amp;#39;путь до файла без расщирения&amp;#39;, &amp;#39;.txt&amp;#39;) new_name = f&amp;#34;{name}_new{ext}&amp;#34; os.rename(file, new_name) pathlib С помощью встроенного модуля pathlib
Path.rename(new_name) from pathlib import Path for file in os.listdir(): f = Path(file) new_name = f&amp;#34;{f.stem}_new{f.suffix}&amp;#34; f.rename(new_name) shutil.move Модуль Shutil предлагает ряд высокоуровневых операций с файлами и коллекциями файлов.</description></item><item><title>Как сделать глубокое клонирование объекта в JavaScript</title><link>https://romankurnovskii.com/ru/posts/howto-create-deepclone-js/</link><pubDate>Thu, 02 Jun 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/posts/howto-create-deepclone-js/</guid><description>В JavaScript объекты копируются по ссылке. Это означает, что фактически две(или более) ссылок ссылается на один объект Для глубокого клонирования мы можем воспользоваться рекурсией
Воспользуемся методом Object.assign() и возьмем пустой объект ({}), чтобы создать клон оригинального объекта. Используем Object.keys() и Array.prototype.forEach() для определения ключей-значений, которые нужно полностью клонировать (не ссылаться на них).
const deepClone = obj =&amp;gt; { let clone = Object.assign({}, obj); Object.keys(clone).forEach( key =&amp;gt; (clone[key] = typeof obj[key] === &amp;#39;object&amp;#39; ? deepClone(obj[key]) : obj[key]) ); return Array.</description></item><item><title>PyScript - Python, встроенный в HTML</title><link>https://romankurnovskii.com/ru/posts/pyscript-python-embedded-in-html/</link><pubDate>Fri, 20 May 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/posts/pyscript-python-embedded-in-html/</guid><description>PyScript PyScript - средство запуска Python в браузере, встроенное в HTML, был анонсирован на мероприятии PyCon в Солт-Лейк-Сити, США. Кнопка Instl здесь для шутки, так как установка не требуется
PyScript зависит от существующего проекта Pyodide, который является скомпилированным в WebAssembly интерпретатором CPython 3.8, позволяющим запускать Python в браузере, а также скомпилированных научных пакетов Python.
Связывание с файлами библиотеки CSS и JavaScript PyScript позволяет разработчикам встраивать код Python с помощью тега &amp;lt;py-script&amp;gt;, а также компонент &amp;lt;py-repl&amp;gt; (Read, Evaluate, Print, Loop), который позволяет Python печатать и выполняться динамически.</description></item><item><title>90 дней DevOps</title><link>https://romankurnovskii.com/ru/tracks/90daysofdevops/</link><pubDate>Thu, 21 Apr 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/tracks/90daysofdevops/</guid><description>Оригинальный репозиторий на GitHub. Автор версии на английском - Michael Cade Цель данного цикла статей - быстрый обзор и прохождение по всему тьюториалу по DevOps.
Progress [✔️] ♾️ 1 &amp;gt; Введение Что такое и почему нам нужен DevOps [✔️] ♾️ 2 &amp;gt; Задачи DevOps-инженера [✔️] ♾️ 3 &amp;gt; DevOps Lifecycle - Ориентированность на приложения [✔️] ♾️ 4 &amp;gt; DevOps &amp;amp; Agile [✔️] ♾️ 5 &amp;gt; Plan &amp;gt; Code &amp;gt; Build &amp;gt; Testing &amp;gt; Release &amp;gt; Deploy &amp;gt; Operate &amp;gt; Monitor &amp;gt; [✔️] ♾️ 6 &amp;gt; DevOps - The real stories Изучение языка программирования [✔️] ⌨️ 7 &amp;gt; The Big Picture: DevOps &amp;amp; Learning a Programming Language [✔️] ⌨️ 8 &amp;gt; Setting up your DevOps environment for Go &amp;amp; Hello World [✔️] ⌨️ 9 &amp;gt; Let&amp;rsquo;s explain the Hello World code [✔️] ⌨️ 10 &amp;gt; The Go Workspace &amp;amp; Compiling &amp;amp; running code [✔️] ⌨️ 11 &amp;gt; Variables, Constants &amp;amp; Data Types [✔️] ⌨️ 12 &amp;gt; Getting user input with Pointers and a finished program [✔️] ⌨️ 13 &amp;gt; Tweet your progress with our new App Knowing Linux Basics [✔️] 🐧 14 &amp;gt; The Big Picture: DevOps and Linux [✔️] 🐧 15 &amp;gt; Linux Commands for DevOps (Actually everyone) [✔️] 🐧 16 &amp;gt; Managing your Linux System, Filesystem &amp;amp; Storage [✔️] 🐧 17 &amp;gt; Text Editors - nano vs vim [✔️] 🐧 18 &amp;gt; SSH &amp;amp; Web Server(LAMP) [✔️] 🐧 19 &amp;gt; Automate tasks with bash scripts [✔️] 🐧 20 &amp;gt; Dev workstation setup - All the pretty things Understand Networking [✔️] 🌐 21 &amp;gt; The Big Picture: DevOps and Networking [✔️] 🌐 22 &amp;gt; The OSI Model - The 7 Layers [✔️] 🌐 23 &amp;gt; Network Protocols [✔️] 🌐 24 &amp;gt; Network Automation [✔️] 🌐 25 &amp;gt; Python for Network Automation [✔️] 🌐 26 &amp;gt; Building our Lab [✔️] 🌐 27 &amp;gt; Getting Hands-On with Python &amp;amp; Network Stick to one Cloud Provider [✔️] ☁️ 28 &amp;gt; The Big Picture: DevOps &amp;amp; The Cloud [✔️] ☁️ 29 &amp;gt; Microsoft Azure Fundamentals [✔️] ☁️ 30 &amp;gt; Модули безопасности Microsoft Azure [✔️] ☁️ 31 &amp;gt; Microsoft Azure Compute Models [✔️] ☁️ 32 &amp;gt; Microsoft Azure Storage &amp;amp; Database Models [✔️] ☁️ 33 &amp;gt; Microsoft Azure Networking Models + Azure Management [✔️] ☁️ 34 &amp;gt; Microsoft Azure Hands-On Scenarios Use Git Effectively [✔️] 📚 35 &amp;gt; The Big Picture: Git - Version Control [✔️] 📚 36 &amp;gt; Installing &amp;amp; Configuring Git [✔️] 📚 37 &amp;gt; Gitting to know Git [✔️] 📚 38 &amp;gt; Staging &amp;amp; Changing [✔️] 📚 39 &amp;gt; Viewing, unstaging, discarding &amp;amp; restoring [✔️] 📚 40 &amp;gt; Social Network for code [✔️] 📚 41 &amp;gt; The Open Source Workflow Containers [✔️] 🏗️ 42 &amp;gt; The Big Picture: Containers [✔️] 🏗️ 43 &amp;gt; What is Docker &amp;amp; Getting installed [✔️] 🏗️ 44 &amp;gt; Docker Images &amp;amp; Hands-On with Docker Desktop [✔️] 🏗️ 45 &amp;gt; The anatomy of a Docker Image [✔️] 🏗️ 46 &amp;gt; Docker Compose [✔️] 🏗️ 47 &amp;gt; Docker Networking &amp;amp; Security [✔️] 🏗️ 48 &amp;gt; Alternatives to Docker Kubernetes [✔️] ☸ 49 &amp;gt; The Big Picture: Kubernetes [✔️] ☸ 50 &amp;gt; Choosing your Kubernetes platform [✔️] ☸ 51 &amp;gt; Deploying your first Kubernetes Cluster [✔️] ☸ 52 &amp;gt; Setting up a multinode Kubernetes Cluster [✔️] ☸ 53 &amp;gt; Rancher Overview - Hands On [✔️] ☸ 54 &amp;gt; Kubernetes Application Deployment [✔️] ☸ 55 &amp;gt; State and Ingress in Kubernetes Learn Infrastructure as Code [✔️] 🤖 56 &amp;gt; The Big Picture: IaC [✔️] 🤖 57 &amp;gt; An intro to Terraform [✔️] 🤖 58 &amp;gt; HashiCorp Configuration Language (HCL) [✔️] 🤖 59 &amp;gt; Create a VM with Terraform &amp;amp; Variables [✔️] 🤖 60 &amp;gt; Docker Containers, Provisioners &amp;amp; Modules [✔️] 🤖 61 &amp;gt; Kubernetes &amp;amp; Multiple Environments [✔️] 🤖 62 &amp;gt; Testing, Tools &amp;amp; Alternatives Automate Configuration Management [✔️] 📜 63 &amp;gt; The Big Picture: Configuration Management [✔️] 📜 64 &amp;gt; Ansible: Getting Started [✔️] 📜 65 &amp;gt; Ansible Playbooks [✔️] 📜 66 &amp;gt; Ansible Playbooks Continued&amp;hellip; [✔️] 📜 67 &amp;gt; Using Roles &amp;amp; Deploying a Loadbalancer [✔️] 📜 68 &amp;gt; Tags, Variables, Inventory &amp;amp; Database Server config [✔️] 📜 69 &amp;gt; All other things Ansible - Automation Controller, AWX, Vault Create CI/CD Pipelines [✔️] 🔄 70 &amp;gt; The Big Picture: CI/CD Pipelines [✔️] 🔄 71 &amp;gt; What is Jenkins?</description></item><item><title>Отображение таблицы Google Sheets в JSON</title><link>https://romankurnovskii.com/ru/posts/google-sheets-2-json/</link><pubDate>Sat, 12 Mar 2022 11:55:25 +0200</pubDate><guid>https://romankurnovskii.com/ru/posts/google-sheets-2-json/</guid><description>Задача Есть таблица google. Необходимо конвертировать ее в JSON и не делать каждый раз ручной экспорт.
Условия таблица закрыта для общего просмотра json отображение читать по ссылке План Использовать webapps от google. Парсить google таблицу и выдавать готовый url с json.
Подготовка Открываем Таблицу Google Extensions → Apps Script Создаем скрипт Как работает endpoint. Документация
Когда пользователь посещает приложение или программа отправляет приложению HTTP-запрос GET, Apps Script запускает функцию doGet(e).
Когда отправляется приложению HTTP-запрос POST, вместо этого Apps Script запускает doPost(e).</description></item><item><title>Публикация next.js приложения на github pages</title><link>https://romankurnovskii.com/ru/posts/nextjs-to-github-pages-ations/</link><pubDate>Mon, 07 Mar 2022 15:31:25 +0200</pubDate><guid>https://romankurnovskii.com/ru/posts/nextjs-to-github-pages-ations/</guid><description>Подготовка коммит все предыдущего состояния на случай вынужденного отката
Для того чтобы Actions имели доступ к репозиторию нужно подключить ключи шифрования
Настройка репозитория Создаю ключи
ssh-keygen -t rsa -b 4096 -C &amp;#34;$(git config user.email)&amp;#34; -f gh-pages -N &amp;#34;&amp;#34; Создалось 2 файла с ключами:
gh-pages - приватный gh-pages.pub - публичный в Репозитории (не профиле)
https://github.com/romankurnovskii/notion-project/settings/keys
Settings → Deploy keys →Add new
из файла gh-pages.pub вставляю текст публичного ключа
Settings → Secrets
Имя: ACTIONS_DEPLOY_KEY
Вставляю приватный ключ из приватного файла gh-pages</description></item><item><title>Печатные публикации</title><link>https://romankurnovskii.com/ru/p/publications/</link><pubDate>Wed, 31 Mar 2021 13:11:22 +0800</pubDate><guid>https://romankurnovskii.com/ru/p/publications/</guid><description>Печатные журналы / сборники Для цитирования:
Цепочка создания стоимости: содержание, элементы и возможности ее использования // Экономика и предпринимательство | ВАК // Великородная Е. А., Курновский Р.М. // Номер 8, 2023 г. Страницы: 241-245
Статья [pdf]
Особенности региональной политики и экономические интеграции Израиля // Наука и бизнес: пути развития | ВАК // Курновский Р.М.// Номер: 1 (139) 2023 г. Страницы: 141-143
Статья [pdf]
Поддержка икт-экспорта как способ покрытия внутренних потребностей рынка // XII международной научно-практической конференции «Трансформация экономики и управления: новые вызовы и перспективы» 15-16 декабря 2022г.</description></item></channel></rss>