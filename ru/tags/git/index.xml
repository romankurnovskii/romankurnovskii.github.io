<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>git on Roman Kurnovskii</title><link>https://romankurnovskii.com/ru/tags/git/</link><description>Recent content in git on Roman Kurnovskii</description><generator>Hugo -- gohugo.io</generator><language>ru</language><copyright>&amp;copy; 2022 &lt;a href="https://romankurnovskii.com">Roman Kurnovskii&lt;/a> personal page</copyright><lastBuildDate>Fri, 27 May 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://romankurnovskii.com/ru/tags/git/index.xml" rel="self" type="application/rss+xml"/><item><title>35. Git — контроль версий</title><link>https://romankurnovskii.com/ru/docs/90daysofdevops/day35/</link><pubDate>Wed, 25 May 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/90daysofdevops/day35/</guid><description>Общая картина: Git — контроль версий Прежде чем мы перейдем к git, нам нужно понять, что такое контроль версий? В этой статье мы рассмотрим, что такое контроль версий и основы git.
Что такое контроль версий? Git — не единственная система контроля версий, поэтому рассмотрим, какие варианты и какие методологии доступны для контроля версий.
Наиболее очевидным и большим преимуществом контроля версий является возможность отслеживать историю проекта. Мы можем посмотреть на этот репозиторий с помощью git log и увидеть, что у нас есть много коммитов и много комментариев, а также то, что произошло на данный момент в проекте.</description></item><item><title>37. Шпаргалка по Git</title><link>https://romankurnovskii.com/ru/docs/90daysofdevops/day37/</link><pubDate>Fri, 27 May 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/docs/90daysofdevops/day37/</guid><description>Знакомство с Git В последних двух постах мы узнали о системах контроля версий и некоторых основных рабочих процессах git как системы контроля версий День 35. Затем мы установили git в нашу систему, обновили и настроили. Мы также немного углубились в теорию между системой контроля версий клиент-сервер и Git, которая является распределенной системой контроля версий День 36.
Теперь мы пройдемся по некоторым командам и вариантам использования, которые мы все обычно видим в git.
Где получить помощь по git?</description></item></channel></rss>