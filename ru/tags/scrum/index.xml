<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Scrum on Roman Kurnovskii</title><link>https://romankurnovskii.com/ru/tags/scrum/</link><description>Recent content in Scrum on Roman Kurnovskii</description><generator>Hugo -- gohugo.io</generator><language>ru</language><copyright>&amp;copy; 2025</copyright><lastBuildDate>Sun, 24 Apr 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://romankurnovskii.com/ru/tags/scrum/index.xml" rel="self" type="application/rss+xml"/><item><title>4. DevOps и Agile</title><link>https://romankurnovskii.com/ru/tracks/90daysofdevops/day04/</link><pubDate>Sun, 24 Apr 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/tracks/90daysofdevops/day04/</guid><description>&lt;h2 id="devops-и-agile">DevOps и Agile&lt;/h2>
&lt;p>Вы знаете разницу между DevOps и Agile? Они формировались как самостоятельные понятия. Но теперь эти два термина сливаются.&lt;/p>
&lt;p>В этом посте мы рассмотрим важные различия между Agile и DevOps и выясним, почему они так тесно связаны.&lt;/p>
&lt;p>Я думаю, что хорошее место для начала — это немного больше узнать об общем подходе, который я увидел в изучении этой области, а именно о DevOps и Agile, даже несмотря на то, что у них схожие цели и процессы. В этом разделе я, надеюсь, мы разберемся с этим.&lt;/p>
&lt;p>Начнем с определений.&lt;/p>
&lt;h3 id="разработка-agile">Разработка Agile&lt;/h3>
&lt;p>Agile — это подход, который фокусируется на более быстром получении небольших результатов, а не на выгрзуке (релизе) одного большого обновления продукта; программное обеспечение разрабатывается итерациями (неболшими изменениями). Команда выпускает новую версию каждую неделю или месяц с дополнительными обновлениями. Итоговая цель Agile — предоставить конечным пользователям оптимальный опыт.&lt;/p>
&lt;h3 id="devops">DevOps&lt;/h3>
&lt;p>В течение последних нескольких дней мы освещали это несколькими различными способами описания конечных целей DevOps. DevOps обычно описывает разработку программного обеспечения
и методы доставки, основанные на сотрудничестве между разработчиками программного обеспечения и специалистами по эксплуатации. Основными преимуществами DevOps являются упрощение процесса разработки и минимизация недопонимания.&lt;/p>
&lt;h2 id="в-чем-разница-между-agile-и-devops">В чем разница между Agile и DevOps&lt;/h2>
&lt;p>Разница в основном в заботах. У Agile и DevOps разные интересы, но они помогают друг другу. Agile требует коротких итераций, что возможно только с автоматизацией, которую обеспечивает DevOps. Agile хочет, чтобы клиент попробовал конкретную версию и быстро дал отзыв, что возможно только в том случае, если DevOps упростит создание новой среды.&lt;/p>
&lt;h3 id="разные-участники">Разные участники&lt;/h3>
&lt;p>Agile фокусируется на оптимизации взаимодействия между конечными пользователями и разработчиками, в то время как DevOps нацелен на разработчиков и членов операционной группы. Можно сказать, что Agile ориентирован на клиентов, тогда как DevOps — это набор внутренних практик.&lt;/p>
&lt;h3 id="команда">Команда&lt;/h3>
&lt;p>Agile обычно применяется к разработчикам программного обеспечения и руководителям проектов. Компетенции DevOps-инженеров лежат на стыке разработки, QA (обеспечения качества) и операций, поскольку они участвуют во всех этапах цикла продукта и являются частью Agile-команды.&lt;/p>
&lt;h3 id="прикладные-фреймворки">Прикладные фреймворки&lt;/h3>
&lt;p>В Agile есть много сред управления для достижения гибкости и прозрачности: Scrum &amp;gt; Kanban &amp;gt; Lean &amp;gt; Extreme &amp;gt; Crystal &amp;gt; Dynamic &amp;gt; Feature-Driven. DevOps фокусируется на подходе к разработке в сотрудничестве, но не предлагает конкретных методологий. Тем не менее, DevOps продвигает такие практики, как инфраструктура как код, архитектура как код, мониторинг, самовосстановление, сквозная автоматизация тестирования&amp;hellip; Но сама по себе это не структура, а практика.&lt;/p>
&lt;h3 id="обратная-связь">Обратная связь&lt;/h3>
&lt;p>В Agile основным источником обратной связи является конечный пользователь, тогда как в DevOps более высокий приоритет имеет обратная связь от заинтересованных сторон и самой команды.&lt;/p>
&lt;h3 id="целевые-области">Целевые области&lt;/h3>
&lt;p>Agile фокусируется на разработке программного обеспечения больше, чем на развертывании и обслуживании. DevOps также фокусируется на разработке программного обеспечения, но его ценности и инструменты также охватывают этапы развертывания и после выпуска, такие как мониторинг, высокая доступность, безопасность и защита данных.&lt;/p>
&lt;h3 id="документация">Документация&lt;/h3>
&lt;p>Agile отдает предпочтение гибкости и поставленным задачам, а не документации и мониторингу. С другой стороны, DevOps рассматривает проектную документацию как один из основных компонентов проекта.&lt;/p>
&lt;h3 id="риски">Риски&lt;/h3>
&lt;p>Риски Agile вытекают из гибкости методологии. Гибкие проекты трудно предсказать или оценить, поскольку приоритеты и требования постоянно меняются.&lt;/p>
&lt;p>Риски DevOps возникают из-за неправильного понимания термина и отсутствия подходящих инструментов. Некоторые люди рассматривают DevOps как набор программного обеспечения для развертывания и непрерывной интеграции, не способного изменить базовую структуру процесса разработки.&lt;/p>
&lt;h3 id="используемые-инструменты">Используемые инструменты&lt;/h3>
&lt;p>Agile-инструменты ориентированы на совместную управленческую коммуникацию, метрики и обработку отзывов. К наиболее популярным agile-инструментам относятся JIRA, Trello, Slack, Zoom, SurveyMonkey и другие.&lt;/p>
&lt;p>DevOps использует инструменты для командного общения, разработки программного обеспечения, развертывания и интеграции, такие как Jenkins, GitHub Actions, BitBucket и т. д. Несмотря на то, что Agile и DevOps имеют несколько разные фокусы и области действия, ключевые значения почти идентичны, поэтому вы можете комбинировать их.&lt;/p>
&lt;h2 id="собрать-все-вместе-хорошая-идея-или-нет-обсуждать">Собрать все вместе… хорошая идея или нет? Обсуждать?&lt;/h2>
&lt;p>Сочетание Agile и DevOps дает следующие преимущества:&lt;/p>
&lt;ul>
&lt;li>Гибкое управление и мощные технологии.&lt;/li>
&lt;li>Практики Agile помогают командам DevOps более эффективно сообщать о своих приоритетах.&lt;/li>
&lt;li>Стоимость автоматизации, которую вы должны заплатить за свои методы DevOps, оправдана вашим гибким требованием быстрого и частого развертывания.&lt;/li>
&lt;li>Это приводит к укреплению: команда, внедряющая agile-практики, улучшит сотрудничество, повысит мотивацию команды и снизит текучесть кадров.&lt;/li>
&lt;li>В результате вы получаете лучшее качество продукции.&lt;/li>
&lt;/ul>
&lt;p>Agile позволяет вернуться к предыдущим этапам разработки продукта, чтобы исправить ошибки и предотвратить накопление технического долга. Принять Agile и DevOps
одновременно просто выполните 7 шагов:&lt;/p>
&lt;ol>
&lt;li>Объедините команды разработки и эксплуатации.&lt;/li>
&lt;li>Создайте команды сборки и запуска, все проблемы, связанные с разработкой и эксплуатацией, обсуждаются всей командой DevOps.&lt;/li>
&lt;li>Измените свой подход к спринтам и назначьте рейтинги приоритета, чтобы предлагать задачи DevOps, которые имеют такое же значение, как задачи разработки. Поощряйте команды разработчиков и эксплуатации обмениваться мнениями о рабочем процессе других команд и возможных проблемах.&lt;/li>
&lt;li>Включите контроль качества на все этапы разработки.&lt;/li>
&lt;li>Выбирайте правильные инструменты.&lt;/li>
&lt;li>Автоматизируйте все, что можете.&lt;/li>
&lt;li>Измеряйте и контролируйте, используя материальные числовые результаты.&lt;/li>
&lt;/ol>
&lt;p>Что вы думаете? У вас разные взгляды? Я хочу услышать от разработчиков, специалистов по эксплуатации, QA или кого-либо, кто лучше разбирается в Agile и DevOps, которые могут поделиться комментариями и отзывами по этому поводу?&lt;/p>
&lt;h3 id="источники">Источники&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=2JymM0YoqGA">DevOps for Developers – Day in the Life: DevOps Engineer in 2021&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=udRNM7YRdY4">3 Things I wish I knew as a DevOps Engineer&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=kDQMjAQNvY4">How to become a DevOps Engineer feat. Shawn Powers&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>До встречи в &lt;a href="../day05">День 5&lt;/a>&lt;/p></description></item></channel></rss>