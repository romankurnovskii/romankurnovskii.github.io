<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Vim on Roman Kurnovskii</title><link>https://romankurnovskii.com/ru/tags/vim/</link><description>Recent content in Vim on Roman Kurnovskii</description><generator>Hugo -- gohugo.io</generator><language>ru</language><copyright>&amp;copy; 2025</copyright><lastBuildDate>Sat, 07 May 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://romankurnovskii.com/ru/tags/vim/index.xml" rel="self" type="application/rss+xml"/><item><title>17. Текстовые редакторы Nano/Vim</title><link>https://romankurnovskii.com/ru/tracks/90daysofdevops/day17/</link><pubDate>Sat, 07 May 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/tracks/90daysofdevops/day17/</guid><description>&lt;h2 id="текстовые-редакторы-nano-и-vim">Текстовые редакторы nano и vim&lt;/h2>
&lt;p>Большинство систем Linux - сервера, и у них не будет графического интерфейса. Я также упомянул в прошлой статье, что Linux в основном состоит из файлов конфигурации, и для внесения изменений вам потребуется иметь возможность редактировать эти файлы конфигурации, чтобы изменить что-либо в системе.&lt;/p>
&lt;p>Существует множество вариантов, но я думаю, что мы должны рассмотреть, вероятно, два наиболее распространенных текстовых редактора терминала. Я использовал оба этих редактора, и для меня «nano» — это удобная кнопка, когда дело доходит до быстрых изменений, но у «vim» такой широкий набор возможностей.&lt;/p>
&lt;h3 id="nano">nano&lt;/h3>
&lt;ul>
&lt;li>Доступна не во всех системах.&lt;/li>
&lt;li>Отлично для начала.&lt;/li>
&lt;/ul>
&lt;p>Если вы запустите &lt;code>nano 90DaysOfDevOps.txt&lt;/code>, мы создадим новый файл, в котором ничего не будет, здесь мы можем добавить наш текст, и в окне внизу есть инструкции о том, что мы хотим сделать с этим файлом.&lt;/p>
&lt;p>&lt;p class="md__image">
&lt;img
src="../images/Day17_Linux1.ru.png?v1"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;p>Мы можем нажать &lt;code>control x + enter&lt;/code>, а затем запустить &lt;code>ls&lt;/code>, теперь вы можете увидеть наш новый текстовый файл.&lt;/p>
&lt;p>&lt;p class="md__image">
&lt;img
src="../images/Day17_Linux2.ru.png?v1"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;p>Можно запустить &lt;code>cat&lt;/code> для этого файла, чтобы прочитать наш файл. Затем мы можем использовать тот же &lt;code>nano 90DaysOfDevOps.txt&lt;/code>, чтобы добавить дополнительный текст или изменить ваш файл.&lt;/p>
&lt;p>Для меня nano очень удобен, когда дело доходит до внесения небольших изменений в файлы конфигурации.&lt;/p>
&lt;h3 id="vim">vim&lt;/h3>
&lt;p>Возможно, самый распространенный текстовый редактор.&lt;/p>
&lt;ul>
&lt;li>В значительной степени поддерживается в каждом дистрибутиве Linux.&lt;/li>
&lt;li>Невероятно мощный! Скорее всего, вы найдете полный 7-часовой курс, посвященный только vim.&lt;/li>
&lt;/ul>
&lt;p>Мы можем перейти в vim с помощью команды &lt;code>vim&lt;/code> или, если мы хотим отредактировать наш новый текстовый файл, мы могли бы запустить &lt;code>vim 90DaysOfDevOps.txt&lt;/code>, но сначала вы увидите отсутствие меню справки внизу.&lt;/p>
&lt;p>Первый вопрос может быть «Как мне выйти из vim?» это будет &lt;code>escape&lt;/code>, и если мы не внесли никаких изменений, то это будет &lt;code>:q&lt;/code>&lt;/p>
&lt;p>&lt;p class="md__image">
&lt;img
src="../images/Day17_Linux3.ru.png?v1"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;p>Вы начинаете в обычном «normal» режиме, есть и другие режимы «command, normal, visual, insert», если мы хотим добавить текст, нам нужно будет переключиться с «normal» на «insert», нам нужно нажать «i», если вы добавили какой-то текст и хотели бы сохранить эти изменения, тогда вы нажмете escape, а затем &lt;code>:wq&lt;/code>&lt;/p>
&lt;p>&lt;p class="md__image">
&lt;img
src="../images/Day17_Linux4.ru.png?v1"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;p>&lt;p class="md__image">
&lt;img
src="../images/Day17_Linux5.ru.png?v1"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;p>Вы можете подтвердить это с помощью команды &lt;code>cat&lt;/code>, чтобы убедиться, что вы сохранили эти изменения.&lt;/p>
&lt;p>В vim есть несколько крутых быстрых функций, которые позволяют очень быстро выполнять простые задачи, если вы знаете ярлыки, что само по себе является лекцией. Допустим, мы добавили список повторяющихся слов, и теперь нам нужно его изменить, может быть, это файл конфигурации, и мы повторяем сетевое имя, и теперь это изменилось, и мы хотим быстро изменить это. Я использую слово &amp;ldquo;Day&amp;rdquo; в этом примере.&lt;/p>
&lt;p>&lt;p class="md__image">
&lt;img
src="../images/Day17_Linux6.ru.png?v1"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;p>Теперь мы хотим заменить это слово на 90DaysOfDevOps, мы можем сделать это, нажав «esc» и набрав «:%s/Day/90DaysOfDevOps».
&lt;p class="md__image">
&lt;img
src="../images/Day17_Linux7.ru.png?v1"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
В результате, когда вы нажимаете Enter, слово day заменяется на 90DaysOfDevOps.&lt;/p>
&lt;p>&lt;p class="md__image">
&lt;img
src="../images/Day17_Linux8.ru.png?v1"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;p>Копировать и вставить стало для меня большим открытием. Копия не копия, а дерьмо. мы можем скопировать, используя &lt;code>yy&lt;/code> на клавиатуре в обычном режиме. &lt;code>p&lt;/code> вставьте в ту же строку, &lt;code>P&lt;/code> вставьте в новую строку.&lt;/p>
&lt;p>Вы также можете удалить эти строки, выбрав количество строк, которые вы хотите удалить, а затем &lt;code>dd&lt;/code>&lt;/p>
&lt;p>Также, вероятно, вам понадобится время для поиска файла, теперь мы можем использовать &lt;code>grep&lt;/code>, как упоминалось в предыдущем сеансе, но мы также можем использовать vim. мы можем использовать &lt;code>/word&lt;/code>, и это найдет первое совпадение, для перехода к следующему вы будете использовать клавишу &lt;code>n&lt;/code> и так далее.&lt;/p>
&lt;p>Для vim это даже не касается поверхности, самый большой совет, который я могу дать, — взяться за руки и использовать vim везде, где это возможно.&lt;/p>
&lt;p>Обычный вопрос на собеседовании: какой ваш любимый текстовый редактор в Linux, и я хотел бы убедиться, что у вас есть хотя бы эти знания об обоих, чтобы вы могли ответить: «Нано» — это нормально, потому что это просто. По крайней мере, вы показываете компетентность в понимании того, что такое текстовый редактор. Но потренируйтесь с ними, чтобы стать более опытным.&lt;/p>
&lt;p>Еще один указатель для навигации в vim, мы можем использовать «H, J, K, L», а также наши клавиши со стрелками.&lt;/p>
&lt;h2 id="ресурсы">Ресурсы&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://vim.rtorr.com/">Vim Cheat Sheet&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=-txKSRn0qeA">Vim in 100 Seconds&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=IiwGbcd8S7I">Vim tutorial&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=kPylihJRG70">Learn the Linux Fundamentals - Part 1&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=VbEx7B_PTOE">Linux for hackers (don&amp;rsquo;t worry you don&amp;rsquo;t need to be a hacker!)&lt;/a>&lt;/li>
&lt;/ul></description></item></channel></rss>