<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>90daysofdevops on Roman Kurnovskii</title><link>https://romankurnovskii.com/ru/tags/90daysofdevops/</link><description>Recent content in 90daysofdevops on Roman Kurnovskii</description><generator>Hugo -- gohugo.io</generator><language>ru</language><copyright>&amp;copy; 2025</copyright><lastBuildDate>Fri, 22 Apr 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://romankurnovskii.com/ru/tags/90daysofdevops/index.xml" rel="self" type="application/rss+xml"/><item><title>2. Задачи DevOps-инженера</title><link>https://romankurnovskii.com/ru/tracks/90daysofdevops/day02/</link><pubDate>Fri, 22 Apr 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/tracks/90daysofdevops/day02/</guid><description>&lt;h2 id="обязанности-devops-специалиста">Обязанности DevOps специалиста&lt;/h2>
&lt;p>Надеюсь, вы приступили к этому после просмотра ресурсов и публикации в &lt;a href="../day01">День 1 из #90DaysOfDevOps&lt;/a>&lt;/p>
&lt;p>В первом посте был краткий обзор, но теперь мы должны углубиться в концепцию DevOps и понять, что при создании приложения есть две основные части. У нас есть часть &lt;strong>Разработка&lt;/strong>, где разработчики программного обеспечения программируют приложение и тестируют его. Затем у нас есть часть &lt;strong>Операции&lt;/strong>, где приложение развертывается и поддерживается на сервере.&lt;/p>
&lt;h2 id="devops--это-связующее-звено-между-двумя">DevOps — это связующее звено между двумя&lt;/h2>
&lt;p>Чтобы разобраться с DevOps или задачами, которые будет выполнять инженер DevOps, нам нужно понять инструменты или процесс, а также разобраться как они вместе они вместе взаимодейтвуют.&lt;/p>
&lt;p>Все начинается с приложения! Вы увидите так много всего, что все дело в приложении, когда речь идет о DevOps.&lt;/p>
&lt;p>Разработчики создадуют приложение, это можно сделать с помощью множества различных технологических стеков, и давайте пока оставим это воображению, поскольку мы вернемся к этому позже. Это также может включать множество различных языков программирования, инструменты сборки, репозиторий кода и т. д.&lt;/p>
&lt;p>Будучи инженером DevOps, вы не будете программировать приложение, но хорошее понимание концепций работы разработчика и используемых им систем, инструментов и процессов является ключом к успеху.&lt;/p>
&lt;p>На очень высоком уровне вам нужно будет знать, как приложение настроено для взаимодействия со всеми необходимыми службами или службами данных, а затем также добавить требования о том, как это можно или нужно протестировать.&lt;/p>
&lt;p>Приложение нужно будет где-то развернуть, давайте сделаем его в целом простым и сделаем это сервером, неважно где, но сервером. Затем ожидается, что к нему будет обращаться клиент или конечный пользователь в зависимости от созданного приложения.&lt;/p>
&lt;p>Этот сервер должен работать где-то локально, в общедоступном облаке, без сервера (Хорошо, я зашел слишком далеко, мы не будем рассматривать бессерверный вариант, но это вариант, и все больше и больше предприятий идут по этому пути). Кто-то должен создать настройте эти серверы и подготовьте их к запуску приложения. Теперь этот элемент может пригодиться вам как инженеру DevOps для развертывания и настройки этих серверов.&lt;/p>
&lt;p>Эти серверы должны будут работать под управлением операционной системы, и, вообще говоря, это будет Linux, но у нас есть целый раздел или потратим неделю, где мы рассмотрим некоторые фундаментальные знания, которые вы должны получить.&lt;/p>
&lt;p>Также вероятно, что нам нужно взаимодействовать с другими службами в нашей сети или среде, поэтому нам также необходимо иметь такой уровень знаний о сети и настройке, что в некоторой степени также может оказаться в руках инженера DevOps. Опять же, мы рассмотрим это более подробно в специальном разделе, посвященном DNS, DHCP, балансировщикам нагрузки (Load Balancing) и т. д.&lt;/p>
&lt;h2 id="мастер-на-все-руки">Мастер на все руки&lt;/h2>
&lt;p>Однако на этом этапе я скажу, что вам не нужно быть специалистом по сетям или инфраструктуре, вам нужны базовые знания о том, как наладить работу и общаться друг с другом, во многом так же, как, возможно, иметь базовые знания язык программирования, но вам не нужно быть разработчиком. Однако вы можете прийти к этому как специалист в какой-то области, и это отличная основа для адаптации к другим областям.&lt;/p>
&lt;p>Вы также, скорее всего, не будете ежедневно управлять этими серверами или приложением.&lt;/p>
&lt;p>Мы говорили о серверах, но есть вероятность, что ваше приложение будет разработано для работы в виде контейнеров, которые по-прежнему работают на сервере по большей части, но вам также потребуется понимание не только виртуализации, облачной инфраструктуры как услуги (IaaS). ), но также и контейнеризация. В эти 90 дней основное внимание будет уделяться контейнерам.&lt;/p>
&lt;h2 id="общий-обзор">Общий обзор&lt;/h2>
&lt;p>С одной стороны, наши разработчики создают новые функции и функции (а также исправления ошибок) для приложения.&lt;/p>
&lt;p>С другой стороны, у нас есть какая-то среда, инфраструктура или серверы, которые настроены и управляются для запуска этого приложения и связи со всеми необходимыми службами.&lt;/p>
&lt;p>Большой вопрос заключается в том, как нам внедрить эти функции и исправления ошибок в нашу продукцию и сделать их доступными для этих конечных пользователей?&lt;/p>
&lt;p>Как мы выпускаем новую версию приложения? Это одна из основных задач для DevOps-инженера, и здесь важно не просто понять, как это сделать один раз, а нам нужно делать это непрерывно и автоматизированным, эффективным способом, который также должен включать тестирование!&lt;/p>
&lt;p>На этом мы собираемся закончить этот день обучения, надеюсь, это было полезно. В течение следующих нескольких дней мы собираемся немного глубже погрузиться в некоторые другие области DevOps, а затем мы перейдем к разделам, в которых более подробно рассматриваются инструменты и процессы, а также их преимущества.&lt;/p>
&lt;h2 id="ресурсы">Ресурсы&lt;/h2>
&lt;p>Я всегда открыт для добавления дополнительных ресурсов в эти файлы Readme, поскольку они здесь в качестве учебного пособия.&lt;/p>
&lt;p>Мой совет - просмотреть все ссылки из списка ниже, и, надеюсь, вы также что-то почерпнули из текста и объяснений выше.&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=0yWAtQ6wYNM">What is DevOps? - TechWorld with Nana&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=kBV8gPVZNEE">What is DevOps? - GitHub YouTube&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=UbtB4sMaaNM">What is DevOps? - IBM YouTube&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://aws.amazon.com/devops/what-is-devops/">What is DevOps? - AWS&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.microsoft.com/en-us/devops/what-is-devops">What is DevOps? - Microsoft&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Если вы зашли так далеко, то поймете, хотите ли вы быть здесь или нет. До встречи в &lt;a href="../day03">День 3&lt;/a>&lt;/p></description></item></channel></rss>