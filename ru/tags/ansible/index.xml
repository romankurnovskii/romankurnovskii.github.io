<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Ansible on Roman Kurnovskii</title><link>https://romankurnovskii.com/ru/tags/ansible/</link><description>Recent content in Ansible on Roman Kurnovskii</description><generator>Hugo -- gohugo.io</generator><language>ru</language><copyright>&amp;copy; 2025</copyright><lastBuildDate>Sat, 14 May 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://romankurnovskii.com/ru/tags/ansible/index.xml" rel="self" type="application/rss+xml"/><item><title>24. Автоматизация сети</title><link>https://romankurnovskii.com/ru/tracks/90daysofdevops/day24/</link><pubDate>Sat, 14 May 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/ru/tracks/90daysofdevops/day24/</guid><description>&lt;h2 id="автоматизация-сети">Автоматизация сети&lt;/h2>
&lt;h3 id="основы-сетевой-автоматизации">Основы сетевой автоматизации&lt;/h3>
&lt;p>Основные задачи для сетевой автоматизации&lt;/p>
&lt;ul>
&lt;li>Тестирование устройств и проверка конфигурации;&lt;/li>
&lt;li>Инициализация развернутых физических устройств и сервисов, а также развертывание и инициализация виртуальных устройств;&lt;/li>
&lt;li>Сбор сетевых данных, относящихся к устройствам, системам, программному обеспечению, топологии сети, трафику и сервисам в реальном времени;&lt;/li>
&lt;li>Анализ данных, в том числе упреждающая аналитика ИИ и машинного обучения, для обеспечения информации о текущем и будущем поведении сети;&lt;/li>
&lt;li>Проверка соответствия конфигурации требованиям для обеспечения правильной работы всех сетевых устройств и сервисов;&lt;/li>
&lt;li>Обновление программного обеспечения, включая откат программного обеспечения при необходимости;&lt;/li>
&lt;li>Замкнутая коррекция проблем с сетью, включая поиск и устранение неисправностей, а также исправление сложных и трудновыявляемых сбоев;&lt;/li>
&lt;li>Подробный анализ отчетов, панелей наблюдения, оповещений и предупреждений;&lt;/li>
&lt;li>Реализация требований безопасности;&lt;/li>
&lt;li>Мониторинг сети и ее сервисов для поддержания уровня обслуживания и удовлетворенности клиентов&lt;/li>
&lt;/ul>
&lt;p>Процесс внедрения автоматизации специфичен для каждого бизнеса. Когда дело доходит до развертывания автоматизации, не существует универсального решения. Способность определить и использовать подход, который лучше всего подходит для вашей организации, имеет решающее значение для продвижения к поддержке и созданию более гибкой среды для пользователей. (Мы обсуждали что-то подобное в самом начале в отношении всего DevOps, изменения культуры и автоматизированного процесса, который это приносит)&lt;/p>
&lt;p>Чтобы разобраться во всем, вам нужно будет определить, как задача или процесс, которые вы пытаетесь автоматизировать, будут улучшать опыт конечного пользователя или ценность для бизнеса, следуя пошаговому систематическому подходу.&lt;/p>
&lt;p>«Если не знаешь, куда идешь, любая дорога приведет тебя туда».&lt;/p>
&lt;p>Имея структуру проекта, которую вы пытаетесь достичь, зная, какова ваша конечная цель, а затем шаг за шагом работая над достижением этой цели, измеряйте успех автоматизации на различных этапах на основе бизнес-результатов.&lt;/p>
&lt;p>Создавайте концепции, моделируя существующие приложения. Нет необходимости разрабатывать концепции автоматизации в пузыре, потому что их нужно применять к вашему приложению, вашему сервису, вашей инфраструктуре, поэтому начните создавать концепции и моделировать их вокруг вашей существующей инфраструктуры, вы повторно существующие приложения.&lt;/p>
&lt;h3 id="подход-к-автоматизации-сети">Подход к автоматизации сети&lt;/h3>
&lt;p>Мы должны определить задачи и выполнить обнаружение запросов на изменение сети, чтобы у вас были наиболее распространенные проблемы и проблемы, решение которых нужно автоматизировать.&lt;/p>
&lt;ul>
&lt;li>Составьте список всех запросов на изменение и рабочих процессов, которые в настоящее время обрабатываются вручную.&lt;/li>
&lt;li>Определить наиболее распространенные, трудоемкие и подверженные ошибкам действия.&lt;/li>
&lt;li>Приоритизируйте запросы, используя бизнес-ориентированный подход.&lt;/li>
&lt;li>Это основа построения процесса автоматизации, что нужно автоматизировать, а что нет.&lt;/li>
&lt;/ul>
&lt;p>Затем мы должны разделить задачи и проанализировать, как разные сетевые функции работают и взаимодействуют друг с другом.&lt;/p>
&lt;ul>
&lt;li>Команда инфраструктуры/сети получает заявки на изменения на нескольких уровнях для развертывания приложений.&lt;/li>
&lt;li>На основе сетевых сервисов разделить их на разные области и понять, как они взаимодействуют друг с другом.
&lt;ul>
&lt;li>Оптимизация приложений&lt;/li>
&lt;li>ADC (контроллер доставки приложений) (Application Delivery Controller)&lt;/li>
&lt;li>Межсетевой экран&lt;/li>
&lt;li>DDI (DNS, DHCP, IPAM и т. д.)&lt;/li>
&lt;li>Маршрутизация&lt;/li>
&lt;li>Другие&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Определите различные зависимости, чтобы устранить деловые и культурные различия и обеспечить сотрудничество между командами.&lt;/li>
&lt;/ul>
&lt;p>Повторно используемые политики, определение и упрощение повторно используемых сервисных задач, процессов и ввода/вывода.&lt;/p>
&lt;ul>
&lt;li>Определить предложения для различных услуг, процессов и ввода/вывода.&lt;/li>
&lt;li>Упрощение процесса развертывания сократит время выхода на рынок как новых, так и существующих рабочих нагрузок.&lt;/li>
&lt;li>Когда у вас есть стандартный процесс, его можно упорядочить и согласовать с отдельными запросами для многопоточного подхода и доставки.&lt;/li>
&lt;/ul>
&lt;p>Объедините политики со специфическими для бизнеса действиями. Как внедрение этой политики помогает бизнесу? Экономит время? Экономит деньги? Обеспечивает лучший бизнес-результат?&lt;/p>
&lt;ul>
&lt;li>Убедитесь, что сервисные задачи совместимы.&lt;/li>
&lt;li>Свяжите добавочные сервисные задачи, чтобы они соответствовали созданию бизнес-сервисов.&lt;/li>
&lt;li>Обеспечьте гибкость связывания и повторного связывания сервисных задач по запросу.&lt;/li>
&lt;li>Разверните возможности самообслуживания и проложите путь к повышению операционной эффективности.&lt;/li>
&lt;li>Разрешить несколько наборов технологических навыков продолжать вносить свой вклад в надзор и соответствие.&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Управляйте&lt;/strong> политиками и процессами, добавляя и улучшая их, сохраняя при этом доступность и обслуживание.&lt;/p>
&lt;ul>
&lt;li>Начните с малого, автоматизировав существующие задачи.&lt;/li>
&lt;li>Ознакомьтесь с процессом автоматизации, чтобы вы могли определить другие области, которые могут выиграть от автоматизации.&lt;/li>
&lt;li>повторяйте свои инициативы по автоматизации, постепенно добавляя гибкость при сохранении требуемой доступности.&lt;/li>
&lt;li>Использование поэтапного подхода прокладывает путь к успеху!&lt;/li>
&lt;/ul>
&lt;p>Оркестрируйте сетевой сервис!&lt;/p>
&lt;ul>
&lt;li>Для быстрой доставки приложений требуется автоматизация процесса развертывания.&lt;/li>
&lt;li>Создание гибкой сервисной среды требует управления различными элементами в рамках набора технологических навыков.&lt;/li>
&lt;li>Подготовьтесь к комплексной оркестровке, обеспечивающей контроль над автоматизацией и порядком развертывания.&lt;/li>
&lt;/ul>
&lt;h2 id="инструменты-автоматизации-сети">Инструменты автоматизации сети&lt;/h2>
&lt;p>Хорошей новостью здесь является то, что по большей части инструменты, которые мы используем для автоматизации сети, как правило, те же, что мы будем использовать для других областей автоматизации.&lt;/p>
&lt;p>&lt;strong>Опреационная система.&lt;/strong> Большую часть своего обучения я сосредоточился на использовании инструментов под Linux. Но почти все инструменты, которых мы коснемся, кросплатформенные.&lt;/p>
&lt;p>&lt;strong>Интегрированная среда разработки (IDE).&lt;/strong> Опять же, здесь особо нечего сказать, кроме всего прочего, я бы предложил Visual Studio Code в качестве вашей IDE, основываясь на обширных подключаемых модулях, доступных для стольких разных языков.&lt;/p>
&lt;p>&lt;strong>Управление конфигурацией.&lt;/strong> Мы еще не добрались до раздела «Управление конфигурацией», но совершенно очевидно, что Ansible является фаворитом в этой области для управления и автоматизации конфигураций. Ansible написан на Python, но вам не нужно знать Python.
&lt;a href="https://docs.ansible.com/ansible/2.9/modules/list_of_network_modules.html">Link to Ansible Network Modules&lt;/a>&lt;/p>
&lt;p>Мы также коснемся &lt;strong>Ansible Tower&lt;/strong> в разделе управления конфигурацией, рассматривая его как внешний интерфейс с графическим интерфейсом (GUI) для Ansible.&lt;/p>
&lt;p>&lt;strong>CI/CD.&lt;/strong> Мы рассмотрим больше концепций и инструментов, связанных с этим, но важно хотя бы упомянуть здесь, поскольку это охватывает не только сеть, но и все предоставление услуг и платформ.&lt;/p>
&lt;p>В частности, &lt;strong>Jenkins&lt;/strong> предоставляет или кажется популярным инструментом для сетевой автоматизации.&lt;/p>
&lt;ul>
&lt;li>Отслеживает репозиторий git на наличие изменений, а затем инициирует их.&lt;/li>
&lt;/ul>
&lt;p>Контроль версий (Version Control). Углубимся в это позже.&lt;/p>
&lt;ul>
&lt;li>Git обеспечивает контроль версий вашего кода на локальном устройстве - Кроссплатформенность&lt;/li>
&lt;li>GitHub, GitLab, BitBucket и т. д. — это онлайн-сайты, на которых вы определяете свои репозитории и загружаете свой код.&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Language | Scripting.&lt;/strong> Что-то, что мы здесь не рассмотрели, это Python как язык, я решил вместо этого погрузиться в Go как язык программирования, исходя из моих обстоятельств, я бы сказал, что это был тесный контакт между Golang и Python и Python, кажется, Победитель в категории «Сетевая автоматизация».&lt;/p>
&lt;ul>
&lt;li>Здесь стоит упомянуть Nornir, фреймворк автоматизации, написанный на Python. Кажется, что это берет на себя роль Ansible, но особенно в отношении сетевой автоматизации. &lt;a href="https://nornir.readthedocs.io/en/latest/">Документация Nornir&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Анализ API.&lt;/strong> &lt;strong>Postman&lt;/strong> — отличный инструмент для анализа RESTful API. Помогает создавать, тестировать и изменять API.&lt;/p>
&lt;ul>
&lt;li>POST &amp;raquo;&amp;gt; Для создания объектов ресурсов.&lt;/li>
&lt;li>GET &amp;raquo;&amp;gt; Для получения ресурсов.&lt;/li>
&lt;li>PUT &amp;raquo;&amp;gt; Для создания или замены ресурсов.&lt;/li>
&lt;li>PATCH &amp;raquo;&amp;gt; Для создания или обновления объекта ресурсов.&lt;/li>
&lt;li>Delete &amp;raquo;&amp;gt; Чтобы удалить ресурс&lt;/li>
&lt;/ul>
&lt;p>&lt;a href="https://www.postman.com/downloads/">Postman tool Download&lt;/a>&lt;/p>
&lt;h3 id="еще-инструменты">Еще инструменты&lt;/h3>
&lt;p>&lt;a href="https://www.cisco.com/c/en/us/products/cloud-systems-management/network-services-orchestrator/index.html">Cisco NSO (Network Services Orchestrator)&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://netyce.com/">NetYCE - Simplify Network Automation&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://pubhub.devnetcloud.com/media/genie-feature-browser/docs/#/">Network Test Automation&lt;/a>&lt;/p>
&lt;p>В течение следующих 3 дней я планирую более подробно изучить некоторые вещи, которые мы рассмотрели, и поработать над Python и сетевой автоматизацией.&lt;/p>
&lt;p>До сих пор мы далеко не охватили все сетевые темы, но хотели сделать это достаточно широким, чтобы следовать за ним и продолжать учиться на ресурсах, которые я добавляю ниже.&lt;/p>
&lt;h2 id="ресурсы">Ресурсы&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=KhiJ7Fu9kKA&amp;amp;list=WL&amp;amp;index=122&amp;amp;t=89s">3 Necessary Skills for Network Automation&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=IPvYjXCsTg8">Computer Networking full course&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://www.practicalnetworking.net/">Practical Networking&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=xKPzLplPECU&amp;amp;list=WL&amp;amp;index=126">Python Network Automation&lt;/a>&lt;/li>
&lt;/ul></description></item></channel></rss>