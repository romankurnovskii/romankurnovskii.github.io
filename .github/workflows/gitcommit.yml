name: comments add

on:
  workflow_dispatch:
    inputs:
      url_path:
        description: The path to page
        required: true
      message:
        description: 'test check'
        required: true

jobs:
  predeploy:
    runs-on: ubuntu-20.04
    steps:
      
      # - name: setup branch
      #   uses: actions/checkout@v3

      # - name: create branch comments
      #   run: |
      #     git config --global user.email "test@test.com"
      #     git config --global user.name "test"
      #     git status
      #     echo "working on file"
      #     git checkout comments || git checkout -b comments
      #     cd $(pwd)/content/${{ github.event.inputs.url_path }}
      #     mv comments.json comments.json.bak || echo "{}" > comments.json.bak
      #     jq '. |= . + {"b": "${{ github.event.inputs.message }}" }' comments.json.bak  >| comments.json
      #     rm -rf comments.json.bak
      #     git add .
      #     git commit -m "add comment"
      #     git push --set-upstream origin comments

      - name: check inputs
        run: |
          echo "inputs print"
          echo "${{ github.event.inputs.message }}"
          pwd

      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: comments

      - name: Add comment
        env: 
          COMMENTS_FILE: comments.json
        run : |
          echo "checkout print"
          echo "${{ github.event.inputs.message }}"
          echo "${{ github.event.inputs.url_path }}"
          cd $(pwd)/content/${{ github.event.inputs.url_path }}
          pwd
          ls -la
          
          git config --global user.email "test@test.com"
          git config --global user.name "test"
          git status

          # git checkout comments || git checkout -b comments
          git status

          echo "working on file"
          # mv comments.json comments.json.bak || echo "{}" > comments.json.bak
          # jq '. |= . + {"$(date +%s)": "${{ github.event.inputs.message }}" }' comments.json.bak  >| comments.json
          # rm -rf comments.json.bak

          test $COMMENTS_FILE || echo "[]" > $COMMENTS_FILE 
          python -c 'import json;a_file = open("$COMMENTS_FILE", "r");json_object = json.load(a_file);a_file.close();json_object.append({"name": "John", "message": "${{ github.event.inputs.message }}" });a_file = open("$COMMENTS_FILE", "w");json.dump(json_object, a_file);a_file.close()'
          
          ls -la

          git add .
          git commit -m "add comment"
          git push


          # rm -rf comments.json.bak

          # # git config pull.rebase true
          # # git branch -d comments ||  echo "removed"
          # git rebase --skip
          # mv comments.json comments.json.bak
          # jq '. |= . + {"$(date +%s)": "${{ github.event.inputs.message }}" }' comments.json.bak  >| comments.json
          # git add comments.json
          # git commit -m "add comments"
          # git push --set-upstream origin comments



