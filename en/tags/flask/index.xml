<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>flask on Roman Kurnovskii</title><link>https://romankurnovskii.com/en/tags/flask/</link><description>Recent content in flask on Roman Kurnovskii</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>&amp;copy; 2022 &lt;a href="https://romankurnovskii.com">Roman Kurnovskii&lt;/a> personal page</copyright><lastBuildDate>Tue, 06 Sep 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://romankurnovskii.com/en/tags/flask/index.xml" rel="self" type="application/rss+xml"/><item><title>Serverless: Flask+API Gateway+Lambda+MongoDB</title><link>https://romankurnovskii.com/en/posts/serverless-flask-lambda-api-gateway-mongodb/</link><pubDate>Tue, 06 Sep 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/posts/serverless-flask-lambda-api-gateway-mongodb/</guid><description>mongodb free tier vs documentdb
Project structure - src - app.py - mongo.py - .env - requirements.txt - serverless.yml Sources
Add AIM user Setup specific user for serverless deployment
username: serverless-deployer
aws aim documentation Set policy Create:
ServerLessDeployerPolicyGroup ServerLessDeployerPolicy Policy:
{ &amp;quot;Statement&amp;quot;: [ { &amp;quot;Action&amp;quot;: [ &amp;quot;apigateway:*&amp;quot;, &amp;quot;cloudformation:CancelUpdateStack&amp;quot;, &amp;quot;cloudformation:ContinueUpdateRollback&amp;quot;, &amp;quot;cloudformation:CreateChangeSet&amp;quot;, &amp;quot;cloudformation:CreateStack&amp;quot;, &amp;quot;cloudformation:CreateUploadBucket&amp;quot;, &amp;quot;cloudformation:DeleteStack&amp;quot;, &amp;quot;cloudformation:Describe*&amp;quot;, &amp;quot;cloudformation:EstimateTemplateCost&amp;quot;, &amp;quot;cloudformation:ExecuteChangeSet&amp;quot;, &amp;quot;cloudformation:Get*&amp;quot;, &amp;quot;cloudformation:List*&amp;quot;, &amp;quot;cloudformation:UpdateStack&amp;quot;, &amp;quot;cloudformation:UpdateTerminationProtection&amp;quot;, &amp;quot;cloudformation:ValidateTemplate&amp;quot;, &amp;quot;dynamodb:CreateTable&amp;quot;, &amp;quot;dynamodb:DeleteTable&amp;quot;, &amp;quot;dynamodb:DescribeTable&amp;quot;, &amp;quot;dynamodb:DescribeTimeToLive&amp;quot;, &amp;quot;dynamodb:UpdateTimeToLive&amp;quot;, &amp;quot;ec2:AttachInternetGateway&amp;quot;, &amp;quot;ec2:AuthorizeSecurityGroupIngress&amp;quot;, &amp;quot;ec2:CreateInternetGateway&amp;quot;, &amp;quot;ec2:CreateNetworkAcl&amp;quot;, &amp;quot;ec2:CreateNetworkAclEntry&amp;quot;, &amp;quot;ec2:CreateRouteTable&amp;quot;, &amp;quot;ec2:CreateSecurityGroup&amp;quot;, &amp;quot;ec2:CreateSubnet&amp;quot;, &amp;quot;ec2:CreateTags&amp;quot;, &amp;quot;ec2:CreateVpc&amp;quot;, &amp;quot;ec2:DeleteInternetGateway&amp;quot;, &amp;quot;ec2:DeleteNetworkAcl&amp;quot;, &amp;quot;ec2:DeleteNetworkAclEntry&amp;quot;, &amp;quot;ec2:DeleteRouteTable&amp;quot;, &amp;quot;ec2:DeleteSecurityGroup&amp;quot;, &amp;quot;ec2:DeleteSubnet&amp;quot;, &amp;quot;ec2:DeleteVpc&amp;quot;, &amp;quot;ec2:Describe*&amp;quot;, &amp;quot;ec2:DetachInternetGateway&amp;quot;, &amp;quot;ec2:ModifyVpcAttribute&amp;quot;, &amp;quot;events:DeleteRule&amp;quot;, &amp;quot;events:DescribeRule&amp;quot;, &amp;quot;events:ListRuleNamesByTarget&amp;quot;, &amp;quot;events:ListRules&amp;quot;, &amp;quot;events:ListTargetsByRule&amp;quot;, &amp;quot;events:PutRule&amp;quot;, &amp;quot;events:PutTargets&amp;quot;, &amp;quot;events:RemoveTargets&amp;quot;, &amp;quot;iam:AttachRolePolicy&amp;quot;, &amp;quot;iam:CreateRole&amp;quot;, &amp;quot;iam:DeleteRole&amp;quot;, &amp;quot;iam:DeleteRolePolicy&amp;quot;, &amp;quot;iam:DetachRolePolicy&amp;quot;, &amp;quot;iam:GetRole&amp;quot;, &amp;quot;iam:PassRole&amp;quot;, &amp;quot;iam:PutRolePolicy&amp;quot;, &amp;quot;iot:CreateTopicRule&amp;quot;, &amp;quot;iot:DeleteTopicRule&amp;quot;, &amp;quot;iot:DisableTopicRule&amp;quot;, &amp;quot;iot:EnableTopicRule&amp;quot;, &amp;quot;iot:ReplaceTopicRule&amp;quot;, &amp;quot;kinesis:CreateStream&amp;quot;, &amp;quot;kinesis:DeleteStream&amp;quot;, &amp;quot;kinesis:DescribeStream&amp;quot;, &amp;quot;lambda:*&amp;quot;, &amp;quot;logs:CreateLogDelivery&amp;quot;, &amp;quot;logs:CreateLogGroup&amp;quot;, &amp;quot;logs:DeleteLogGroup&amp;quot;, &amp;quot;logs:DescribeLogGroups&amp;quot;, &amp;quot;logs:DescribeLogStreams&amp;quot;, &amp;quot;logs:FilterLogEvents&amp;quot;, &amp;quot;logs:GetLogEvents&amp;quot;, &amp;quot;logs:PutSubscriptionFilter&amp;quot;, &amp;quot;s3:CreateBucket&amp;quot;, &amp;quot;s3:DeleteBucket&amp;quot;, &amp;quot;s3:DeleteBucketPolicy&amp;quot;, &amp;quot;s3:DeleteObject&amp;quot;, &amp;quot;s3:DeleteObjectVersion&amp;quot;, &amp;quot;s3:GetObject&amp;quot;, &amp;quot;s3:GetObjectVersion&amp;quot;, &amp;quot;s3:ListAllMyBuckets&amp;quot;, &amp;quot;s3:ListBucket&amp;quot;, &amp;quot;s3:PutBucketNotification&amp;quot;, &amp;quot;s3:PutBucketPolicy&amp;quot;, &amp;quot;s3:PutBucketTagging&amp;quot;, &amp;quot;s3:PutBucketWebsite&amp;quot;, &amp;quot;s3:PutEncryptionConfiguration&amp;quot;, &amp;quot;s3:PutObject&amp;quot;, &amp;quot;sns:CreateTopic&amp;quot;, &amp;quot;sns:DeleteTopic&amp;quot;, &amp;quot;sns:GetSubscriptionAttributes&amp;quot;, &amp;quot;sns:GetTopicAttributes&amp;quot;, &amp;quot;sns:ListSubscriptions&amp;quot;, &amp;quot;sns:ListSubscriptionsByTopic&amp;quot;, &amp;quot;sns:ListTopics&amp;quot;, &amp;quot;sns:SetSubscriptionAttributes&amp;quot;, &amp;quot;sns:SetTopicAttributes&amp;quot;, &amp;quot;sns:Subscribe&amp;quot;, &amp;quot;sns:Unsubscribe&amp;quot;, &amp;quot;states:CreateStateMachine&amp;quot;, &amp;quot;states:DeleteStateMachine&amp;quot; ], &amp;quot;Effect&amp;quot;: &amp;quot;Allow&amp;quot;, &amp;quot;Resource&amp;quot;: &amp;quot;*&amp;quot; } ], &amp;quot;Version&amp;quot;: &amp;quot;2012-10-17&amp;quot; } Create user copy the API Key &amp;amp; Secret</description></item></channel></rss>