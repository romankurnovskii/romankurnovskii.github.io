<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Python on Roman Kurnovskii</title><link>https://romankurnovskii.com/en/tags/python/</link><description>Recent content in Python on Roman Kurnovskii</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>&amp;copy; 2023 &lt;a href="https://romankurnovskii.com">Roman Kurnovskii&lt;/a> personal page</copyright><lastBuildDate>Sun, 20 Nov 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://romankurnovskii.com/en/tags/python/index.xml" rel="self" type="application/rss+xml"/><item><title>Python bitwise operators</title><link>https://romankurnovskii.com/en/posts/python-bitwise-operators/</link><pubDate>Sun, 20 Nov 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/posts/python-bitwise-operators/</guid><description>&amp;laquo; Left Shift Moves the bits of its first operand to the left by the number of places specified in its second operand.
Shifting a single bit to the left by one place doubles its value. Shifting to two places to the left by one place quadruple its value. $ a &amp;laquo; n = a * 2^n $
1&amp;gt;&amp;gt;&amp;gt; 100 &amp;lt;&amp;lt; 1 2200 3&amp;gt;&amp;gt;&amp;gt; 100 &amp;lt;&amp;lt; 2 4400 5&amp;gt;&amp;gt;&amp;gt; 100 &amp;lt;&amp;lt; 3 6800 &amp;raquo; Right Shift The rightmost bits always get dropped.</description></item><item><title>Python Cheat Sheet</title><link>https://romankurnovskii.com/en/posts/python-snippets/</link><pubDate>Tue, 21 Jun 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/posts/python-snippets/</guid><description>1def sum_of_digits(n): 2 sum = 0 3 while n: 4 sum += n % 10 5 n //= 10 6 return sum 1# Single line comments start with a number symbol. 2 3&amp;#34;&amp;#34;&amp;#34; Multiline strings can be written 4 using three &amp;#34;s, and are often used 5 as documentation. 6&amp;#34;&amp;#34;&amp;#34; 7 8#################################################### 9## 1. Primitive Datatypes and Operators 10#################################################### 11 12# You have numbers 133 # =&amp;gt; 3 14 15# Math is what you would expect 161 + 1 # =&amp;gt; 2 178 - 1 # =&amp;gt; 7 1810 * 2 # =&amp;gt; 20 1935 / 5 # =&amp;gt; 7.</description></item><item><title>How to rename files in Python</title><link>https://romankurnovskii.com/en/posts/howto-rename-files-in-python/</link><pubDate>Sat, 04 Jun 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/posts/howto-rename-files-in-python/</guid><description>Learn different ways to rename files in Python using the os and pathlib modules.
os.rename Rename files with os
You can use
1os.rename(old_name, new_name) For example we can combine it with os.path.splitext() to get the base name and file extension, and then combine it to a new name:
1import os 2for file in os.listdir(): 3 name, ext = os.path.splitext(file) 4 new_name = f&amp;#34;{name}_new{ext}&amp;#34; 5 os.rename(file, new_name) pathlib Rename files with pathlib
The same could be achieved with the pathlib module and</description></item></channel></rss>