<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Programming on Roman Kurnovskii</title><link>https://romankurnovskii.com/en/tags/programming/</link><description>Recent content in Programming on Roman Kurnovskii</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>&amp;copy; 2023 Personal page</copyright><lastBuildDate>Fri, 07 Jul 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://romankurnovskii.com/en/tags/programming/index.xml" rel="self" type="application/rss+xml"/><item><title>Setup subdomains on VPS CentOS</title><link>https://romankurnovskii.com/en/posts/vps-docker-subdomains-setup/</link><pubDate>Fri, 07 Jul 2023 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/posts/vps-docker-subdomains-setup/</guid><description>TLDR Code sources
Create Projects Creating three example projects:
node.js express server that returns json on request another node.js express server static html page Place projects data in dir &amp;lsquo;projects&amp;rsquo;.
Structure:
└── project ├── Dockerfile ├── nginx.conf ├── projects | ├── 1 | | ├── app.js | | └── package.json | ├── 2 | | ├── app.js | | └── package.json | └── 3 | └── index.html └── start.sh Nginx setup Server needs to &amp;ldquo;understand&amp;rdquo; the initial subdomain and where to forward.</description></item><item><title>Python docstring templates</title><link>https://romankurnovskii.com/en/posts/python-docstring-templates/</link><pubDate>Wed, 24 May 2023 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/posts/python-docstring-templates/</guid><description>Template def function_name(param1: Type1, param2: Type2, ...) -&amp;gt; ReturnType: &amp;#34;&amp;#34;&amp;#34;Brief description of the function. More detailed explanation of the function if necessary. This can span multiple lines as needed. Args: param1 (Type1): Description of param1. param2 (Type2): Description of param2. ... Returns: ReturnType: Description of the return value. Raises: ExceptionType: Explanation of the conditions under which this exception is raised. Example: &amp;gt;&amp;gt;&amp;gt; function_name(param1_value, param2_value) Expected output &amp;#34;&amp;#34;&amp;#34; ... Example With Type Hints def add_numbers(num1: int, num2: int = 5) -&amp;gt; int: &amp;#34;&amp;#34;&amp;#34;Adds two numbers together.</description></item><item><title>Bash Special Variables $! $0 $? $$</title><link>https://romankurnovskii.com/en/posts/bash-variables/</link><pubDate>Tue, 14 Feb 2023 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/posts/bash-variables/</guid><description>$0 - The Name of the Script $0 represents the name of the Bash script as it was called.
If you execute a script with bash myscript.sh, then within myscript.sh, $0 will be myscript.sh.
$1, $2, $3, &amp;hellip; - Positional Parameters These variables correspond to the arguments passed to the script. $1 is the first argument, $2 is the second, and so on.
In the command bash myscript.sh arg1 arg2, $1 equals arg1, and $2 equals arg2.
$! - PID of the Last Background Process This holds the process ID of the most recent background process.</description></item><item><title>Bash code snippets</title><link>https://romankurnovskii.com/en/posts/bash-snippets/</link><pubDate>Sun, 12 Feb 2023 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/posts/bash-snippets/</guid><description>Rename all files by pattern in current directory files=(*) for file in &amp;#34;${files[@]}&amp;#34; do # Check if the file name contains the &amp;#34;№&amp;#34; symbol if [[ $file == *&amp;#34;№&amp;#34;* ]]; then # Remove everything before and including the &amp;#34;№&amp;#34; symbol new_file=${file##*&amp;#34;№&amp;#34;} mv &amp;#34;$file&amp;#34; &amp;#34;$new_file&amp;#34; echo &amp;#34;Renamed $file to $new_file&amp;#34; fi done Add substring to filename #!/bin/bash DIR=&amp;#34;/path/to/folder&amp;#34; cd &amp;#34;$DIR&amp;#34; # Rename all .png files and add &amp;#34;.ru&amp;#34; before .png for file in *.png; do base=$(basename &amp;#34;$file&amp;#34; .png) mv &amp;#34;$file&amp;#34; &amp;#34;${base}.</description></item><item><title>Python bitwise operators</title><link>https://romankurnovskii.com/en/posts/python-bitwise-operators/</link><pubDate>Sun, 20 Nov 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/posts/python-bitwise-operators/</guid><description>&amp;laquo; Left Shift Moves the bits of its first operand to the left by the number of places specified in its second operand.
Formula: $a &amp;laquo; n = a * 2^n$
Shifting a single bit to the left by one place doubles its value. Shifting to two places to the left by one place quadruple its value. &amp;gt;&amp;gt;&amp;gt; 100 &amp;lt;&amp;lt; 1 200 &amp;gt;&amp;gt;&amp;gt; 100 &amp;lt;&amp;lt; 2 400 &amp;gt;&amp;gt;&amp;gt; 100 &amp;lt;&amp;lt; 3 800 &amp;raquo; Right Shift The rightmost bits always get dropped.</description></item><item><title>Some code snippets</title><link>https://romankurnovskii.com/en/posts/other-snippets/</link><pubDate>Mon, 22 Feb 2021 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/posts/other-snippets/</guid><description>pandoc mardown -&amp;gt; pdf
Create pdf file from .md in multiple folders
prepare:
brew install basictex # search for cyrillic fonts fc-list | grep к\ brew tap homebrew/cask-fonts brew install --cask font-m-plus brew tap homebrew/cask-fonts brew install --cask font-m-plus brew install --cask font-m-plus-1 brew install --cask font-m-plus-1-code ```sh pandoc --pdf-engine xelatex \ --variable mainfont=&amp;#34;M+ 1p&amp;#34; --variable sansfont=&amp;#34;M+ 1p&amp;#34; --variable monofont=&amp;#34;M+ 1m&amp;#34; \ -V geometry:&amp;#34;top=1cm, bottom=2cm, left=1cm, right=1cm&amp;#34; \ --file-scope \ --highlight-style=tango \ -s \ --toc-depth=1 \ --variable=toc-title:&amp;#34; &amp;#34; \ --top-level-division=chapter \ --standalone \ --self-contained \ --from=markdown \ $(find .</description></item></channel></rss>