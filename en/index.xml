<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Roman Kurnovskii</title><link>https://romankurnovskii.com/en/</link><description>Recent content on Roman Kurnovskii</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>&amp;copy; 2023 Personal page</copyright><lastBuildDate>Tue, 06 Jun 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://romankurnovskii.com/en/index.xml" rel="self" type="application/rss+xml"/><item><title>Create S3 Bucket</title><link>https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/s3/create-s3-bucket/</link><pubDate>Sun, 11 Sep 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/s3/create-s3-bucket/</guid><description>Creating an Amazon S3 Bucket Introduction You can create an Amazon S3 bucket using the AWS Management Console. As with many other AWS services, you can use the AWS API or CLI (command-line interface) as well.
In this lab step, you will create a new Amazon S3 bucket.
Instructions In the AWS Management Console search bar, enter S3, and click the S3 result under Services: You will be placed in the S3 console.
From the S3 console, click the orange Create Bucket button: Enter a unique Bucket name on the Name and region screen of the wizard: Region: US West (Oregon) (This should be set for you.</description></item><item><title>Configuring a Static Website With S3 And CloudFront</title><link>https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/cloudfront/configuring-static-website-s3-and-cloudfront/</link><pubDate>Sat, 21 May 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/cloudfront/configuring-static-website-s3-and-cloudfront/</guid><description>Practice Lab link Creating an Amazon S3 Bucket for a Static Website 1. In the AWS Management Console search bar, enter S3, and click the S3 result under Services:
You will be placed in the Amazon S3 console.
2. To start creating a new Amazon S3 bucket, in the top-right, click Create bucket:
The Amazon S3 bucket creation form will load.
3. Under General configuration, enter the following:
Bucket name: Enter calabs-bucket-&amp;lt;UniqueNumber&amp;gt;(Append a unique number to the end of calabs-bucket-) Region: Ensure US West (Oregon) us-west-2 is selected You have added a unique number to the bucket name because Amazon S3 bucket names must be unique regardless of the AWS region in which the bucket is created.</description></item><item><title>Create a folder inside S3 Bucket</title><link>https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/s3/create-folder-s3/</link><pubDate>Sun, 11 Sep 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/s3/create-folder-s3/</guid><description>Creating a Folder inside an Amazon S3 Bucket Introduction The AWS S3 console allows you to create folders for grouping objects. This can be a very helpful organizational tool. However, in Amazon S3, buckets and objects are the primary resources. A folder simply becomes a prefix for object key names that are virtually archived into it.
Instructions Return to the Buckets menu by clicking here, and click on the calabs-bucket you created earlier. (Reminder: Your bucket name will differ slightly.</description></item><item><title>Upload a file to S3</title><link>https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/s3/upload-file-to-s3/</link><pubDate>Sun, 11 Sep 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/s3/upload-file-to-s3/</guid><description>Uploading a File to Amazon S3 Introduction When you upload a folder from your local system or another machine, Amazon S3 uploads all the files and subfolders from the specified local folder to your bucket. It then assigns a key value that is a combination of the uploaded file name and the folder name. In this lab step, you will upload a file to your bucket. The process is similar to uploading a single file, multiple files, or a folder with files in it.</description></item><item><title>Grant public access to S3 Object</title><link>https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/s3/grant-access-s3/</link><pubDate>Sun, 11 Sep 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/s3/grant-access-s3/</guid><description>Granting Public Access to an Amazon S3 Object Introduction All uploaded files are private by default and can only be viewed, edited, or downloaded by you. In order to illustrate this point, complete the instructions below.
Note: The terms &amp;ldquo;file&amp;rdquo; and &amp;ldquo;object&amp;rdquo; are often used interchangeably when discussing Amazon S3. Technically, Amazon S3 is an object-store. It is not a block storage device and does not contain a file system as your local computer does. However, files such as images, movies, and sound clips are often uploaded from your file system to Amazon S3.</description></item><item><title>Change metadata of S3 Object</title><link>https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/s3/how-to-change-metadata-s3/</link><pubDate>Sun, 11 Sep 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/s3/how-to-change-metadata-s3/</guid><description>Changing the Metadata of an Amazon S3 Object Introduction Each object in Amazon S3 has a set of key/value pairs representing its metadata. There are two types of metadata: &amp;ldquo;System metadata&amp;rdquo; (for example, Content-Type and Content-Length) and custom &amp;ldquo;User metadata&amp;rdquo;. User metadata is stored with the object and returned with it.
As an example, you might have your own taxonomy for various images, such as “logo”, “screenshot”, “diagram”, &amp;ldquo;flowchart&amp;rdquo; and so on. In this lab step, you will change the Content-Type of your image to &amp;ldquo;text/plain&amp;rdquo;.</description></item><item><title>Delete S3 Bucket</title><link>https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/s3/delete-from-s3/</link><pubDate>Sun, 11 Sep 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/s3/delete-from-s3/</guid><description>Deleting an Amazon S3 Bucket Introduction You can delete an Amazon S3 bucket using the S3 console. You will delete all objects within the bucket as well.
Instructions In the AWS Management Console search bar, enter S3, and click the S3 result under Services: From the top level of the S3 console, notice the Delete button is not actionable.
2. Check the name of your bucket to select it:
With the bucket selected, click Empty: The Empty bucket form page will load.</description></item><item><title>8. String to Integer (atoi)</title><link>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/medium/other/8/</link><pubDate>Sat, 29 Apr 2023 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/medium/other/8/</guid><description>LeetCode problem
// .js /** * @param {string} s * @return {number} */ var myAtoi = function(s) { let res = 0; let num = parseInt(s); if(num &amp;gt;= 2147483648){ res = 2147483647; } else if (num &amp;lt;= -2147483648){ res = -2147483648; } else if (isNaN(num)) { res = 0; } else { res = num; } return res; };</description></item><item><title>1777A - Everybody Likes Good Arrays! - 800</title><link>https://romankurnovskii.com/en/tracks/algorithms-101/codeforces/02-combinatorics-and-geometry/1777a/</link><pubDate>Mon, 24 Apr 2023 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/algorithms-101/codeforces/02-combinatorics-and-geometry/1777a/</guid><description>1777A - Everybody Likes Good Arrays! (greedy, math, 800)
Statement You have an array of numbers, and you want to make it &amp;ldquo;good.&amp;rdquo; A good array is one where every pair of adjacent numbers has different parity (one is even, and the other is odd). You can do this by performing operations on pairs of adjacent numbers with the same parity (both even or both odd), and replacing them with their product. Logic Loop through the array Check the parity of the current element and the previous element If the parity is the same, perform the operation and increment the operation counter Repeat steps 2 and 3 until the end of the array Return the operation counter Solution def solve(n, ar): res = 0 i = 0 while i &amp;lt; len(ar) - 1: if ar[i] % 2 == ar[i + 1] % 2: ar[i] = ar[i] * ar[i + 1] del ar[i + 1] res += 1 else: i += 1 return res Optimized Solution Check how many times the parity changes in the given array.</description></item><item><title>1809A - Garland - 800</title><link>https://romankurnovskii.com/en/tracks/algorithms-101/codeforces/01-implementation-and-greedy/1809a/</link><pubDate>Sat, 25 Mar 2023 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/algorithms-101/codeforces/01-implementation-and-greedy/1809a/</guid><description>1809A - Garland (implementation, 800)
Explanation If all the light bulbs have the same color, it is impossible to turn them all on, as you can&amp;rsquo;t perform the operation on the same color consecutively. In this case, print -1. If there are 3 light bulbs of the same color and one light bulb of a different color, it takes 6 operations to turn them all on: Turn on the different colored light bulb Turn on one of the other colored light bulbs Turn off the different colored light bulb Turn on the second light bulb of the same color Turn on the different colored light bulb Turn on the third light bulb of the same color In all other cases, it takes 4 operations to turn all the light bulbs on, as you can switch the light bulbs on in a sequence without violating the color restriction.</description></item><item><title>Plan</title><link>https://romankurnovskii.com/en/tracks/algorithms-101/codeforces/plan/</link><pubDate>Sat, 25 Mar 2023 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/algorithms-101/codeforces/plan/</guid><description>Stage 1: Implementation and Greedy 1809A - Garland (implementation, 800) 1807A - Plus or Minus (implementation, 800) 1807B - Grab the Candies (greedy, 800) 1807C - Find and Replace (greedy, implementation, strings, 800) 1798A - Showstopper (greedy, implementation, sortings, 800) 1799A - Recent Actions (data structures, greedy, implementation, math, 800) 1788A - One and Two (brute force, implementation, math, 800) 1778A - Flip Flop Sum (greedy, implementation, 800) 1772A - A+B? (implementation, 800) 1796B - Asterisk-Minor Template (implementation, strings, 1000) Stage 2: Combinatorics and Geometry 1777A - Everybody Likes Good Arrays!</description></item><item><title>Binary Tree</title><link>https://romankurnovskii.com/en/tracks/algorithms-101/data-structures/binary-tree/</link><pubDate>Thu, 09 Feb 2023 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/algorithms-101/data-structures/binary-tree/</guid><description>1. What is a Binary Tree?
A binary tree is a data structure in which each node has at most two children, which are referred to as the left child and the right child.
2. Representing a Binary Tree in Python
To represent a binary tree in Python, we can create a class called Node to represent each node in the tree. Each node will have a value and references to its left and right children.
If a node doesn&amp;rsquo;t have a left or right child, the reference will be set to None.</description></item><item><title>Segment Tree</title><link>https://romankurnovskii.com/en/tracks/algorithms-101/data-structures/segment-tree/</link><pubDate>Thu, 09 Feb 2023 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/algorithms-101/data-structures/segment-tree/</guid><description>A Segment Tree is a data structure used for efficiently processing queries over intervals or ranges. It is commonly used for solving problems that involve finding information about a set of elements and their sub-intervals.
Since a Segment Tree is a binary tree, a simple linear array can be used to represent the Segment Tree. Before building the Segment Tree, one must figure what needs to be stored in the Segment Tree&amp;rsquo;s node?.
Each leaf node represents a single element, and each internal node represents the union of its children&amp;rsquo;s ranges.</description></item><item><title>1. Two Sum</title><link>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/easy/1/</link><pubDate>Sun, 16 Oct 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/easy/1/</guid><description>LeetCode problem
Given an array of integers nums and an integer target, return indices of the two numbers such that they add up to target.
You may assume that each input would have exactly one solution, and you may not use the same element twice.
You can return the answer in any order.
Example 1:
Input: nums = [2,7,11,15], target = 9 Output: [0,1] Explanation: Because nums[0] + nums[1] == 9, we return [0, 1]. Topics: array, hash table</description></item><item><title>Plan</title><link>https://romankurnovskii.com/en/tracks/algorithms-101/plan/</link><pubDate>Sat, 15 Oct 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/algorithms-101/plan/</guid><description>Q1 # Problem Difficulty Topics 1 1. Two Sum Easy Array, Hash Table 2 13. Roman to Integer Easy Hash Table, Math, String 3 14. Longest Common Prefix Easy String 4 20. Valid Parentheses Easy String, Stack 5 21. Merge Two Sorted Lists Easy Linked List, Recursion 6 26. Remove Duplicates from Sorted Array Easy Array, Two pointers 7 66. Plus One Easy Array, Math 8 69. Sqrt(x) Easy Math, Binary Search, 9 70. Climbing Stairs Easy Math, Dynamic Programming, Memoization 10 88.</description></item><item><title>1787A - Exponential Equation - 800</title><link>https://romankurnovskii.com/en/tracks/algorithms-101/codeforces/02-combinatorics-and-geometry/1787a/</link><pubDate>Thu, 27 Apr 2023 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/algorithms-101/codeforces/02-combinatorics-and-geometry/1787a/</guid><description>1787A - Exponential Equation (constructive algorithms, math, 800)
Logic The equation is a mix of multiplication and exponential operations. Given the nature of exponential operations, $𝑥^𝑦$ and $𝑦^𝑥$ can grow very large very quickly as x and y increase.
We can try to simplify the equation.
If we can somehow set one of the variables x or y to 1, the equation simplifies.
This is because any number (except zero) raised to the power of 1 is the number itself, and any number raised to the power of 0 is 1.</description></item><item><title>1807A - Plus or Minus - 800</title><link>https://romankurnovskii.com/en/tracks/algorithms-101/codeforces/01-implementation-and-greedy/1807a/</link><pubDate>Sat, 25 Mar 2023 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/algorithms-101/codeforces/01-implementation-and-greedy/1807a/</guid><description>1807A - Plus or Minus (implementation, 800)
Solution t = int(input()) for _ in range(t): a, b, c = map(int, input().split()) print(&amp;#39;+&amp;#39; if a + b == c else &amp;#39;-&amp;#39;)</description></item><item><title>Python template for contests</title><link>https://romankurnovskii.com/en/tracks/algorithms-101/codeforces/cp-template/</link><pubDate>Tue, 07 Feb 2023 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/algorithms-101/codeforces/cp-template/</guid><description>Clean template ############################################# Libraries ###################################################### import bisect import sys import math import os import time from queue import PriorityQueue from io import BytesIO, IOBase from collections import defaultdict, Counter from bisect import bisect_right ############################################# Definitions ###################################################### INF = sys.maxsize BUFSIZE = 4096 ############################################# Inputs ###################################################### # def inp(): return sys.stdin.readline().rstrip(&amp;#34;\r\n&amp;#34;) # read line as string # def inp_int(): return int(inp()) # read input as integer. &amp;#39;1&amp;#39; -&amp;gt; 1 # def inp_int_list(): return list(map(int, inp().split())) # def inp_str_list(): return list(inp()) ############################################# Solution ###################################################### def solve(): n = list(map(int, input().</description></item><item><title>13. Roman to Integer</title><link>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/easy/13/</link><pubDate>Wed, 19 Oct 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/easy/13/</guid><description>LeetCode problem
Roman numerals are represented by seven different symbols: I, V, X, L, C, D and M.
Symbol Value I 1 V 5 X 10 L 50 C 100 D 500 M 1000 For example, 2 is written as II in Roman numeral, just two ones added together. 12 is written as XII, which is simply X + II. The number 27 is written as XXVII, which is XX + V + II.
Roman numerals are usually written largest to smallest from left to right.</description></item><item><title>1777B - Emordnilap - 900</title><link>https://romankurnovskii.com/en/tracks/algorithms-101/codeforces/02-combinatorics-and-geometry/1777b/</link><pubDate>Thu, 27 Apr 2023 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/algorithms-101/codeforces/02-combinatorics-and-geometry/1777b/</guid><description>1777B - Emordnilap (combinatorics, greedy, math, 900)
Statement In this problem, we need to find the &amp;ldquo;beauty&amp;rdquo; of all permutations of a certain length n. The beauty of a permutation is defined as the number of inversions in an array that is created by combining the permutation and its reverse.
Logic The key insight is that every permutation of length n has the same beauty.
This is because the structure of the array created by concatenating a permutation with its reverse ensures that there will always be the same number of inversions, regardless of the order of the numbers in the original permutation.</description></item><item><title>1807B - Grab the Candies - 800</title><link>https://romankurnovskii.com/en/tracks/algorithms-101/codeforces/01-implementation-and-greedy/1807b/</link><pubDate>Sat, 25 Mar 2023 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/algorithms-101/codeforces/01-implementation-and-greedy/1807b/</guid><description>1807B - Grab the Candies (greedy, 800)
Explanation Read the number of bags and the list of candies in the bags. Calculate the total number of candies with even and odd amounts separately. Compare the total amount of candies with even and odd amounts. If Mihai has strictly more candies than Bianca, output &amp;ldquo;YES&amp;rdquo;. Otherwise, output &amp;ldquo;NO&amp;rdquo;. Solution t = int(input()) for _ in range(t): n = int(input()) ar = list(map(int, input().split())) m = 0 b = 0 if n == 1: print(&amp;#39;YES&amp;#39; if ar[0] % 2 == 0 else &amp;#39;NO&amp;#39;) else: for x in ar: if x % 2 == 0: m += x else: b += x print(&amp;#39;YES&amp;#39; if m &amp;gt; b else &amp;#39;NO&amp;#39;)</description></item><item><title>14. Longest Common Prefix</title><link>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/easy/14/</link><pubDate>Fri, 21 Oct 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/easy/14/</guid><description>LeetCode problem
Write a function to find the longest common prefix string amongst an array of strings.
If there is no common prefix, return an empty string &amp;quot;&amp;quot;.
Example 1:
Input: strs = [&amp;quot;flower&amp;quot;,&amp;quot;flow&amp;quot;,&amp;quot;flight&amp;quot;] Output: &amp;quot;fl&amp;quot; Example 2:
Input: strs = [&amp;quot;dog&amp;quot;,&amp;quot;racecar&amp;quot;,&amp;quot;car&amp;quot;] Output: &amp;quot;&amp;quot; Explanation: There is no common prefix among the input strings. First accepted Idea:
class Solution: def longestCommonPrefix(self, strs: List[str]) -&amp;gt; str: strs.sort() l = strs[0] r = strs[-1] if l == r: return l res = &amp;#34;&amp;#34; for i in range(0, len(l)): if l[i] == r[i]: res += l[i] else: return res return res</description></item><item><title>Algorithms</title><link>https://romankurnovskii.com/en/tracks/algorithms-101/algorithms/</link><pubDate>Sat, 15 Oct 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/algorithms-101/algorithms/</guid><description>Intro Big-O Cheat Sheet Sort Insertion sort sorts an array by continuously picking an element, starting from the second element, and inserting it in its correct position in the sorted part of the array to its left. It does this by shifting larger elements one position ahead of their current position, making room for the new element.
def insertion_sort(array): for i in range(1, len(array)): value = array[i] while i &amp;gt; 0 and array[i - 1] &amp;gt; value: array[i] = array[i - 1] i -= 1 array[i] = value return array Selection sort works by repeatedly finding the minimum element from the unsorted part of the array and swapping it with the first unsorted element.</description></item><item><title>1773F - Football - 800</title><link>https://romankurnovskii.com/en/tracks/algorithms-101/codeforces/02-combinatorics-and-geometry/1773f/</link><pubDate>Thu, 27 Apr 2023 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/algorithms-101/codeforces/02-combinatorics-and-geometry/1773f/</guid><description>1773F - Football (constructive algorithms, 800)
Logic Solution def solve(): n = int(input()) # number of matches a = int(input()) # goals scored b = int(input()) # goals conceded if n == 1: if a == b: print(1) else: print(0) print(f&amp;#34;{a}:{b}&amp;#34;) return matches = [[0, 0] for _ in range(n + 1)] draw = 0 match = 1 while match &amp;lt;= n and a &amp;gt; 0: a -= 1 matches[match] = [1, 0] match += 1 if a &amp;gt; 0: matches[1] = [matches[1][0] + a, 0] if b &amp;gt; 0: if match == n + 1: matches[1][0] += 1 matches[n][0] -= 1 matches[n][1] = b else: while match &amp;lt;= n and b &amp;gt; 0: b -= 1 matches[match][1] += 1 match += 1 if b &amp;gt; 0: matches[n][1] += b for i in range(1, n + 1): if matches[i][0] == matches[i][1]: draw += 1 print(draw) for i in range(1, n + 1): print(f&amp;#34;{matches[i][0]}:{matches[i][1]}&amp;#34;) solve() Codeforces Editorial PDF</description></item><item><title>1807C - Find and Replace - 800</title><link>https://romankurnovskii.com/en/tracks/algorithms-101/codeforces/01-implementation-and-greedy/1807c/</link><pubDate>Sat, 25 Mar 2023 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/algorithms-101/codeforces/01-implementation-and-greedy/1807c/</guid><description>1807C - Find and Replace (greedy, implementation, strings, 800)
Solution t = int(input()) for _ in range(t): n = int(input()) s = input() reserved_binaries = {} binary_values = [] for c in s: val = reserved_binaries.get(c, None) if not binary_values: binary_values.append(1) if val == binary_values[-1]: print(&amp;#39;NO&amp;#39;) break if not val: val = 1 if binary_values[-1] == 0 else 0 reserved_binaries[c] = val binary_values.append(val) else: print(&amp;#39;YES&amp;#39;)</description></item><item><title>20. Valid Parentheses</title><link>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/easy/20/</link><pubDate>Sun, 23 Oct 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/easy/20/</guid><description>LeetCode problem
Given a string s containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid.
An input string is valid if:
Open brackets must be closed by the same type of brackets. Open brackets must be closed in the correct order. Every close bracket has a corresponding open bracket of the same type. Example 1:
Input: s = &amp;quot;()[]{}&amp;quot; Output: true Example 2:
Input: s = &amp;quot;()[]{}&amp;quot; Output: true First accepted Idea:</description></item><item><title>1798A - Showstopper - 800</title><link>https://romankurnovskii.com/en/tracks/algorithms-101/codeforces/01-implementation-and-greedy/1798a/</link><pubDate>Sun, 26 Mar 2023 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/algorithms-101/codeforces/01-implementation-and-greedy/1798a/</guid><description>1798A - Showstopper (greedy, implementation, sortings, 800)
Update a and b in a such way so in a always put the largest and in b smallest.
Solution def solve(a,b,n): a_max = a[0] for i in range(n): max_v = max(a[i], b[i]) min_v = min(a[i], b[i]) a[i] = max_v b[i] = min_v a_max = max(a_max, max_v) if a[-1] &amp;gt;= a_max and b[-1] &amp;gt;= max(b): return &amp;#39;Yes&amp;#39; return &amp;#39;No&amp;#39; t = int(input()) for _ in range(t): n = int(input()) a = list(map(int, input().</description></item><item><title>21. Merge Two Sorted Lists</title><link>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/easy/21/</link><pubDate>Tue, 25 Oct 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/easy/21/</guid><description>LeetCode problem
You are given the heads of two sorted linked lists list1 and list2.
Merge the two lists in a one sorted list. The list should be made by splicing together the nodes of the first two lists.
Return the head of the merged linked list.
Example 1:
Input: list1 = [1,2,4], list2 = [1,3,4] Output: [1,1,2,3,4,4] Example 2:
Input: list1 = [], list2 = [0] Output: [0] First accepted Idea:
Get smallest head. Loop and update its next.</description></item><item><title>1799A - Recent Actions - 800</title><link>https://romankurnovskii.com/en/tracks/algorithms-101/codeforces/01-implementation-and-greedy/1799a/</link><pubDate>Sun, 26 Mar 2023 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/algorithms-101/codeforces/01-implementation-and-greedy/1799a/</guid><description>1799A - Recent Actions (data structures, greedy, implementation, math, 800)
Explanation On Codeforces, the &amp;ldquo;Recent Actions&amp;rdquo; field shows the last n posts with recent actions. Initially, there are posts numbered 1 to n in the field, in order from top to bottom. There are also infinitely many posts not in the field, numbered with integers n+1, n+2, and so on.
When a recent action happens in post p:
If it is in the &amp;ldquo;Recent Actions&amp;rdquo; field, it moves from its position to the top position.</description></item><item><title>26. Remove Duplicates from Sorted Array</title><link>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/easy/26/</link><pubDate>Wed, 26 Oct 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/easy/26/</guid><description>LeetCode problem
Given an integer array nums sorted in non-decreasing order, remove the duplicates in-place such that each unique element appears only once. The relative order of the elements should be kept the same.
Since it is impossible to change the length of the array in some languages, you must instead have the result be placed in the first part of the array nums. More formally, if there are k elements after removing the duplicates, then the first k elements of nums should hold the final result.</description></item><item><title>1788A - One and Two - 800</title><link>https://romankurnovskii.com/en/tracks/algorithms-101/codeforces/01-implementation-and-greedy/1788a/</link><pubDate>Tue, 28 Mar 2023 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/algorithms-101/codeforces/01-implementation-and-greedy/1788a/</guid><description>1788A - One and Two (brute force, implementation, math, 800)
This problem is about finding a specific index 𝑘 in a given sequence of integers $𝑎_1,𝑎_2,…,𝑎_𝑛$, where each element is either 1 or 2. The goal is to determine whether there exists an integer 𝑘 such that the product of all elements from $𝑎_1$ to $𝑎_𝑘$ is equal to the product of all elements from $𝑎_𝑘+1$ to $𝑎_𝑛$.
Because of product of 1 doesn&amp;rsquo;t change the result we can focus on 2.</description></item><item><title>66. Plus One</title><link>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/easy/66/</link><pubDate>Thu, 27 Oct 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/easy/66/</guid><description>LeetCode problem
You are given a large integer represented as an integer array digits, where each digits[i] is the ith digit of the integer. The digits are ordered from most significant to least significant in left-to-right order. The large integer does not contain any leading 0&amp;rsquo;s.
Increment the large integer by one and return the resulting array of digits.
Example 1:
Input: digits = [1,2,3] Output: [1,2,4] Explanation: The array represents the integer 123. Incrementing by one gives 123 + 1 = 124.</description></item><item><title>1778A - Flip Flop Sum - 800</title><link>https://romankurnovskii.com/en/tracks/algorithms-101/codeforces/01-implementation-and-greedy/1778a/</link><pubDate>Fri, 31 Mar 2023 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/algorithms-101/codeforces/01-implementation-and-greedy/1778a/</guid><description>1778A - Flip Flop Sum (greedy, implementation, 800)
There are three possible conditions:
-1 -1 - all negative. In this case sum -2 becomes sum 2. Plus 4. -1 1 - different, no sum change. 1 1 - all positive. 2 becomes -2. Diff is -4. Solution def solve(): n = int(input()) ar = list(map(int, input().split())) s = 0 # sum # three conditions: all 1, all -1, at least one -1 has_diff = False has2_positive = 0 has2_negative = 0 s += ar[0] for idx in range(1, n): if ar[idx] == ar[idx-1]: if ar[idx] == -1: has2_negative = 4 # -2 -&amp;gt; +2, diff 4 else: has2_positive = -4 # +2 =&amp;gt; +1, diff 1 else: has_diff = True s += ar[idx] if has2_negative: s += has2_negative elif has_diff: .</description></item><item><title>69. Sqrt(x)</title><link>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/easy/69/</link><pubDate>Fri, 28 Oct 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/easy/69/</guid><description>LeetCode problem
Given a non-negative integer x, return the square root of x rounded down to the nearest integer. The returned integer should be non-negative as well.
You must not use any built-in exponent function or operator.
For example, do not use pow(x, 0.5) in c++ or x ** 0.5 in python.
Example 1:
Input: x = 4 Output: 2 Explanation: The square root of 4 is 2, so we return 2. Example 2:
Input: x = 8 Output: 2 Explanation: The square root of 8 is 2.</description></item><item><title>1772A - A+B? - 800</title><link>https://romankurnovskii.com/en/tracks/algorithms-101/codeforces/01-implementation-and-greedy/1772a/</link><pubDate>Mon, 03 Apr 2023 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/algorithms-101/codeforces/01-implementation-and-greedy/1772a/</guid><description>1772A - A+B? (implementation, 800)
Solution def solve(): a, b = input().split(&amp;#39;+&amp;#39;) res = int(a) + int(b) print(res) for _ in range(int(input())): solve()</description></item><item><title>70. Climbing Stairs</title><link>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/easy/70/</link><pubDate>Sat, 29 Oct 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/easy/70/</guid><description>LeetCode problem
You are climbing a staircase. It takes n steps to reach the top.
Each time you can either climb 1 or 2 steps. In how many distinct ways can you climb to the top?
Example 1:
Input: n = 2 Output: 2 Explanation: There are two ways to climb to the top. 1. 1 step + 1 step 2. 2 steps Example 2:
Input: n = 3 Output: 3 Explanation: There are three ways to climb to the top.</description></item><item><title>1796B - One and Two - 800</title><link>https://romankurnovskii.com/en/tracks/algorithms-101/codeforces/01-implementation-and-greedy/1796b/</link><pubDate>Mon, 03 Apr 2023 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/algorithms-101/codeforces/01-implementation-and-greedy/1796b/</guid><description>Asterisk-Minor Template (implementation, strings, 1000)
If the first characters of both strings are the same, create a template that consists of the common character followed by an asterisk (e.g., a*). If the last characters of both strings are the same, create a template that consists of an asterisk followed by the common character (e.g., *b). If neither the first nor the last characters are the same, iterate through string a and check for any 2-character substring that also appears in string b.</description></item><item><title>Short description from article</title><link>https://romankurnovskii.com/en/tracks/disser/utils/text_2_short/</link><pubDate>Thu, 29 Dec 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/disser/utils/text_2_short/</guid><description> Create</description></item><item><title>88. Merge Sorted Array</title><link>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/easy/88/</link><pubDate>Sun, 30 Oct 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/easy/88/</guid><description>LeetCode problem
You are given two integer arrays nums1 and nums2, sorted in non-decreasing order, and two integers m and n, representing the number of elements in nums1 and nums2 respectively.
Merge nums1 and nums2 into a single array sorted in non-decreasing order.
The final sorted array should not be returned by the function, but instead be stored inside the array nums1. To accommodate this, nums1 has a length of m + n, where the first m elements denote the elements that should be merged, and the last n elements are set to 0 and should be ignored.</description></item><item><title>IAM</title><link>https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/iam/</link><pubDate>Fri, 09 Sep 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/iam/</guid><description>About IAM - AWS Identity and Access Management
AWS IAM AWS IAM User Guide AWS Identity and Access Management (IAM) allows to securely control user access to AWS services and resources.
Designed for organizations with multiple users or systems that use AWS products such as Amazon EC2, Amazon RDS, and AWS Management Console.
With IAM, you can centrally manage users, security credentials such as access keys, and permissions that control user access to AWS resources.
There are three ways IAM authenticates a principal:</description></item><item><title>94. Binary Tree Inorder Traversal</title><link>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/easy/94/</link><pubDate>Mon, 31 Oct 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/easy/94/</guid><description>TODO implement: create binary tree from list of values LeetCode problem
Given the root of a binary tree, return the inorder traversal of its nodes' values.
Example 1:
Input: root = [1,null,2,3] Output: [1,3,2] Example 2:
Input: root = [] Output: [] Example 3:
Input: root = [1] Output: [1] Thoughts Don&amp;rsquo;t understand what needed. Why:
1-null-2-3 becomes 1-3-2 [1,2,5,7,8,9,10] becomes [7,2,8,1,9,5,10] In 1-null-2-3 1 becomes the first because we loop to its left node which is null, then come back and first value here is 1.</description></item><item><title>2. Add Two Numbers</title><link>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/medium/2/</link><pubDate>Mon, 17 Oct 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/medium/2/</guid><description>You are given two non-empty linked lists representing two non-negative integers. The digits are stored in reverse order, and each of their nodes contains a single digit. Add the two numbers and return the sum as a linked list.
You may assume the two numbers do not contain any leading zero, except the number 0 itself.
Example 1:
Input: l1 = [2,4,3], l2 = [5,6,4] Output: [7,0,8] Explanation: 342 + 465 = 807. First accepted Idea:
Loop through lists add each value to the list reverse list calculate sum create linked list from reversed sum class Solution: def addTwoNumbers(self, l1: Optional[ListNode], l2: Optional[ListNode]) -&amp;gt; Optional[ListNode]: def createLinkedNode(values): head = ListNode(values[0]) current = head for i in values[1:]: node = ListNode(i) current.</description></item><item><title>3. Longest Substring Without Repeating Characters</title><link>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/medium/3/</link><pubDate>Tue, 18 Oct 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/medium/3/</guid><description>LeetCode problem
Given a string s, find the length of the longest substring without repeating characters.
Example 1:
Input: s = &amp;quot;abcabcbb&amp;quot; Output: 3 Explanation: The answer is &amp;quot;abc&amp;quot;, with the length of 3. First accepted Idea:
Loop through string Calculate max count of elements in substring If get double element, then go back until get this element and do step 2. Proceed the main loop class Solution: def lengthOfLongestSubstring(self, s: str) -&amp;gt; int: uniqs = set() len_max = 0 len_current = 0 idx = 0 for i in s: if i in uniqs: len_max = max(len_max, len_current) len_current = 1 uniqs = set(i) for j in reversed(s[:idx]): if j == i: break else: len_current += 1 uniqs.</description></item><item><title>134. Gas Station</title><link>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/medium/other/134/</link><pubDate>Thu, 04 May 2023 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/medium/other/134/</guid><description>LeetCode problem
Naive Solution:
A naive solution would be to try starting from each gas station and check if you can complete the circuit. For each gas station, calculate the remaining gas in the tank after traveling to the next station.
If the gas is not enough to travel to the next station, stop and try starting from the next gas station.
Approach:
In this problem, we can use a greedy algorithm
We can keep track of the total gas and total cost while iterating through the gas stations.</description></item><item><title>138. Copy List with Random Pointer</title><link>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/medium/other/138/</link><pubDate>Thu, 04 May 2023 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/medium/other/138/</guid><description>LeetCode problem
The problem asks to create a deep copy of a given linked list with a random pointer in each node. A deep copy means that the new linked list will have completely new nodes, and none of its pointers should point to the nodes in the original list. Both the next and random pointers of the new nodes should point to the new nodes in the copied list in the same order as the original list.</description></item><item><title>139. Word Break</title><link>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/medium/other/139/</link><pubDate>Thu, 18 May 2023 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/medium/other/139/</guid><description>LeetCode problem
Approach:
Dynamic Programming.
Logic:
Using DP:
Iterate through each character of string s. Generate all possible substrings ending at the current index. Check if the substring is in wordDict: If it is, check if the index before the substring&amp;rsquo;s first index is marked as True (this indicates that the part of the string before the current substring can be segmented into words in wordDict). If it is, then mark the current index as True. Solution:
class Solution: def wordBreak(self, s, wordDict): n = len(s) dp = [False] * n for end in range(1, n + 1): # 1.</description></item><item><title>5. Longest Palindromic Substring</title><link>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/medium/5/</link><pubDate>Thu, 20 Oct 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/medium/5/</guid><description>LeetCode problem
Given a string s, return the longest palindromic substring in s.
A string is called a palindrome string if the reverse of that string is the same as the original string.
Example 1:
Input: s = &amp;quot;babad&amp;quot; Output: &amp;quot;bab&amp;quot; Explanation: &amp;quot;aba&amp;quot; is also a valid answer. Example 2:
Input: s = &amp;quot;cbbd&amp;quot; Output: &amp;quot;bb&amp;quot; First accepted Hints How can we reuse a previously computed palindrome to compute a larger palindrome?
How can we reuse a previously computed palindrome to compute a larger palindrome?</description></item><item><title>141. Linked List Cycle</title><link>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/easy/other/141/</link><pubDate>Wed, 24 May 2023 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/easy/other/141/</guid><description>LeetCode problem
class Solution: def hasCycle(self, head: Optional[ListNode]) -&amp;gt; bool: visited = set() cur = head while cur: if cur.next in visited: return True cur = cur.next visited.add(cur) return False</description></item><item><title>146. LRU Cache</title><link>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/medium/other/146/</link><pubDate>Mon, 22 May 2023 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/medium/other/146/</guid><description>LeetCode problem
The operations we need to support are get and put which should both be done in O(1) time.
get(key) should return the value if the key exists in the cache, otherwise return -1. put(key, value) should update the value of the key if the key exists; otherwise, this method should insert the key-value pair into the cache. If the cache is full, this method should also evict the least recently used key-value pair. Approach Use Doubly Linked List or Python OrderedDict</description></item><item><title>148. Sort List</title><link>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/medium/other/148/</link><pubDate>Tue, 06 Jun 2023 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/medium/other/148/</guid><description>LeetCode problem
Naive Solution Traverse the linked list, adding each node&amp;rsquo;s value to a Python list sort that list create a new linked list from the sorted values return the head of this new list. This solution would have a time complexity of O(n log n) due to the sort operation and a space complexity of O(n) because of the extra list we&amp;rsquo;re creating.
class Solution: def sortList(self, head): values = [] node = head while node: values.append(node.val) node = node.</description></item><item><title>7. Reverse Integer</title><link>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/medium/7/</link><pubDate>Tue, 01 Nov 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/medium/7/</guid><description>LeetCode problem
Given a signed 32-bit integer x, return x with its digits reversed. If reversing x causes the value to go outside the signed 32-bit integer range [-231, 231 - 1], then return 0.
Assume the environment does not allow you to store 64-bit integers (signed or unsigned).
Example 1:
Input: x = 123 Output: 321
Example 2:
Input: x = -123 Output: -321
Example 3:
Input: x = 120 Output: 21
First accepted Idea:
Convert number to int Remove minus if exist (or convert module of number) reverse class Solution: def reverse(self, x: int) -&amp;gt; int: reversed_int = [] str_int = str(x) if x &amp;lt; 0: str_int = str_int[1:] for i in reversed(range(len(str_int))): reversed_int.</description></item><item><title>160. Intersection of Two Linked Lists</title><link>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/easy/other/160/</link><pubDate>Mon, 05 Jun 2023 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/easy/other/160/</guid><description>LeetCode problem
Solution 1 Using hashmap.
# Definition for singly-linked list. class ListNode: def __init__(self, x): self.val = x self.next = None class Solution: def getIntersectionNode(self, headA: ListNode, headB: ListNode): nodes = set() cur = headA while cur: nodes.add(cur) cur = cur.next cur = headB while cur: if cur in nodes: return cur cur = cur.next return None Solution 2 Initialize two pointers, one for each head. Move each pointer to the next node in its list. If a pointer reaches the end of its list, move it to the start of the other list.</description></item><item><title>11. Container With Most Water</title><link>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/medium/11/</link><pubDate>Thu, 03 Nov 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/medium/11/</guid><description>LeetCode problem
You are given an integer array height of length n. There are n vertical lines drawn such that the two endpoints of the ith line are (i, 0) and (i, height[i]).
Find two lines that together with the x-axis form a container, such that the container contains the most water.
Return the maximum amount of water a container can store.
Notice that you may not slant the container.
Example 1:
Input: height = [1,8,6,2,5,4,8,3,7] Output: 49 Explanation: The above vertical lines are represented by array [1,8,6,2,5,4,8,3,7].</description></item><item><title>15. 3Sum</title><link>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/medium/15/</link><pubDate>Thu, 03 Nov 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/medium/15/</guid><description>LeetCode problem
Given an integer array nums, return all the triplets [nums[i], nums[j], nums[k]] such that i != j, i != k, and j != k, and nums[i] + nums[j] + nums[k] == 0.
Notice that the solution set must not contain duplicate triplets.
Example 1:
Input: nums = [-1,0,1,2,-1,-4] Output: [[-1,-1,2],[-1,0,1]] Explanation: nums[0] + nums[1] + nums[2] = (-1) + 0 + 1 = 0. nums[1] + nums[2] + nums[4] = 0 + 1 + (-1) = 0.</description></item><item><title>17. Letter Combinations of a Phone Number</title><link>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/medium/17/</link><pubDate>Fri, 11 Nov 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/medium/17/</guid><description>LeetCode problem
Given a string containing digits from 2-9 inclusive, return all possible letter combinations that the number could represent. Return the answer in any order.
A mapping of digits to letters (just like on the telephone buttons) is given below. Note that 1 does not map to any letters.
Example 1:
Input: digits = &amp;quot;23&amp;quot; Output: [&amp;quot;ad&amp;quot;,&amp;quot;ae&amp;quot;,&amp;quot;af&amp;quot;,&amp;quot;bd&amp;quot;,&amp;quot;be&amp;quot;,&amp;quot;bf&amp;quot;,&amp;quot;cd&amp;quot;,&amp;quot;ce&amp;quot;,&amp;quot;cf&amp;quot;] Example 2:
Input: digits = &amp;quot;&amp;quot; Output: [] First accepted class Solution: def letterCombinations(self, digits: str) -&amp;gt; List[str]: if not digits: return [] letters = [&amp;#39;&amp;#39;, &amp;#39;&amp;#39;, &amp;#39;abc&amp;#39;, &amp;#39;def&amp;#39;, &amp;#39;ghi&amp;#39;, &amp;#39;jkl&amp;#39;, &amp;#39;mno&amp;#39;, &amp;#39;pqrs&amp;#39;, &amp;#39;tuv&amp;#39;, &amp;#39;wxyz&amp;#39;] result = [&amp;#39;&amp;#39;] for d in digits: d = int(d) tmp = [] for letter in letters[d]: for word in result: word += letter tmp.</description></item><item><title>19. Remove Nth Node From End of List</title><link>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/medium/19/</link><pubDate>Sun, 13 Nov 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/medium/19/</guid><description>LeetCode problem
Given the &amp;lsquo;head&amp;rsquo; of a linked list, remove the &amp;rsquo;nth&amp;rsquo; node from the end of the list and return its head.
Example 1:
Input: head = [1,2,3,4,5], n = 2 Output: [1,2,3,5] Example 2:
Input: head = [1], n = 1 Output: [] Idea:
Two pointers. Second pointer starts from nth position. Run while second pointer exist. First version:
# Definition for singly-linked list. # class ListNode: # def __init__(self, val=0, next=None): # self.val = val # self.</description></item><item><title>22. Generate Parentheses</title><link>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/medium/22/</link><pubDate>Wed, 16 Nov 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/medium/22/</guid><description>LeetCode problem
Given n pairs of parentheses, write a function to generate all combinations of well-formed parentheses.
Example 1:
Input: n = 3 Output: [&amp;quot;((()))&amp;quot;,&amp;quot;(()())&amp;quot;,&amp;quot;(())()&amp;quot;,&amp;quot;()(())&amp;quot;,&amp;quot;()()()&amp;quot;] Example 2:
Input: n = 1 Output: [&amp;quot;()&amp;quot;] Prerequirements Backtracking pattern
First accepted Idea:
class Solution: def generateParenthesis(self, n): ans = [] def dfs(l: int, r: int, s: str) -&amp;gt; None: if l == 0 and r == 0: ans.append(s) if l &amp;gt; 0: dfs(l - 1, r, s + &amp;#39;(&amp;#39;) if l &amp;lt; r: dfs(l, r - 1, s + &amp;#39;)&amp;#39;) dfs(n, n, &amp;#39;&amp;#39;) return ans</description></item><item><title>EC2</title><link>https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/ec2/</link><pubDate>Sat, 10 Sep 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/ec2/</guid><description>About AWS EC2 AWS EC2 User Guide Amazon Elastic Compute Cloud (EC2) - one of the most popular AWS services.
Allows:
to run different types of cloud instances and pay-per-use models. to control computing resources at the operating system level working in an Amazon computing environment. Digest EC2 &amp;amp; EBS EC2 (Elastic Compute Cloud) Instance EBS (Elastic Block Store) - Persistent storage volume AMI (Amazon Machine Image) - Packages OS and additional installations in a reusable template Instance and Instance Types: General Purpose (t-type and m-type), Compute Optimized(c-type), GPU Graphics, GPU Compute, Memory Optimized(r, × and z-type), and Storage Optimized(d, h and i-type) Purchasing Options: On Demand, Reserved, Scheduled, Spot, Dedicated Instance and Dedicated Host Spot: Partial hours are not billed if terminated by AWS EC2 Secure login information for your instances using key pairs Placement group: Cluster and Spread For root:</description></item><item><title>28. Find the Index of the First Occurrence in a String</title><link>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/medium/28.en./</link><pubDate>Sat, 19 Nov 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/medium/28.en./</guid><description>LeetCode problem
Given two strings needle and haystack, return the index of the first occurrence of needle in haystack, or -1 if needle is not part of haystack.
Example 1:
Input: haystack = &amp;ldquo;sadbutsad&amp;rdquo;, needle = &amp;ldquo;sad&amp;rdquo; Output: 0 Explanation: &amp;ldquo;sad&amp;rdquo; occurs at index 0 and 6. The first occurrence is at index 0, so we return 0.
Example 2:
Input: haystack = &amp;ldquo;leetcode&amp;rdquo;, needle = &amp;ldquo;leeto&amp;rdquo; Output: -1 Explanation: &amp;ldquo;leeto&amp;rdquo; did not occur in &amp;ldquo;leetcode&amp;rdquo;, so we return -1.</description></item><item><title>29. Divide Two Integers</title><link>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/medium/29/</link><pubDate>Sun, 20 Nov 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/medium/29/</guid><description>LeetCode problem
Given two integers dividend and divisor, divide two integers without using multiplication, division, and mod operator.
The integer division should truncate toward zero, which means losing its fractional part. For example, 8.345 would be truncated to 8, and -2.7335 would be truncated to -2.
Return the quotient after dividing dividend by divisor.
Note: Assume we are dealing with an environment that could only store integers within the 32-bit signed integer range: [−231, 231 − 1]. For this problem, if the quotient is strictly greater than 231 - 1, then return 231 - 1, and if the quotient is strictly less than -231, then return -231.</description></item><item><title>33. Search in Rotated Sorted Array</title><link>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/medium/33/</link><pubDate>Thu, 24 Nov 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/medium/33/</guid><description>LeetCode problem
There is an integer array nums sorted in ascending order (with distinct values).
Prior to being passed to your function, nums is possibly rotated at an unknown pivot index k (1 &amp;lt;= k &amp;lt; nums.length) such that the resulting array is [nums[k], nums[k+1], ..., nums[n-1], nums[0], nums[1], ..., nums[k-1]] (0-indexed). For example, [0,1,2,4,5,6,7] might be rotated at pivot index 3 and become [4,5,6,7,0,1,2].
Given the array nums after the possible rotation and an integer target, return the index of target if it is in nums, or -1 if it is not in nums.</description></item><item><title>34. Find First and Last Position of Element in Sorted Array</title><link>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/medium/34/</link><pubDate>Fri, 25 Nov 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/medium/34/</guid><description>LeetCode problem
Given an array of integers nums sorted in non-decreasing order, find the starting and ending position of a given target value.
If target is not found in the array, return [-1, -1].
You must write an algorithm with O(log n) runtime complexity.
Example 1:
Input: nums = [5,7,7,8,8,10], target = 8 Output: [3,4]
Example 2:
Input: nums = [5,7,7,8,8,10], target = 6 Output: [-1,-1]
Example 3:
Input: nums = [], target = 0 Output: [-1,-1]
Code Idea:</description></item><item><title>36. Valid Sudoku</title><link>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/medium/36/</link><pubDate>Sat, 03 Dec 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/medium/36/</guid><description>LeetCode problem
Determine if a 9 x 9 Sudoku board is valid. Only the filled cells need to be validated according to the following rules:
Each row must contain the digits 1-9 without repetition. Each column must contain the digits 1-9 without repetition. Each of the nine 3 x 3 sub-boxes of the grid must contain the digits 1-9 without repetition.
Note:
A Sudoku board (partially filled) could be valid but is not necessarily solvable. Only the filled cells need to be validated according to the mentioned rules.</description></item><item><title>38. Count and Say</title><link>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/medium/38/</link><pubDate>Thu, 08 Dec 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/medium/38/</guid><description>LeetCode problem
The count-and-say sequence is a sequence of digit strings defined by the recursive formula:
countAndSay(1) = &amp;quot;1&amp;quot; countAndSay(n) is the way you would &amp;ldquo;say&amp;rdquo; the digit string from countAndSay(n-1), which is then converted into a different digit string. To determine how you &amp;ldquo;say&amp;rdquo; a digit string, split it into the minimal number of substrings such that each substring contains exactly one unique digit. Then for each substring, say the number of digits, then say the digit. Finally, concatenate every said digit.</description></item><item><title>46. Permutations</title><link>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/medium/46/</link><pubDate>Sat, 17 Dec 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/medium/46/</guid><description>LeetCode problem
Given an array nums of distinct integers, return all the possible permutations. You can return the answer in any order.
Example 1:
Input: nums = [1,2,3] Output: [[1,2,3],[1,3,2],[2,1,3],[2,3,1],[3,1,2],[3,2,1]] Example 2:
Input: nums = [0,1] Output: [[0,1],[1,0]] Example 3:
Input: nums = [1] Output: [[1]] Idea:
Draw a decigion tree Fix when branch is ready to return Implementation:
Recursive: Go through every value in nums Pop value call perm() with updated nums from each call(step) append &amp;lsquo;poped&amp;rsquo; value from step 2 class Solution: def permute(self, nums: List[int]) -&amp;gt; List[List[int]]: result_permutation = [] if len(nums) == 1: # base case return [nums[:]] for _ in nums: tmp_removed = nums.</description></item><item><title>48. Rotate Image</title><link>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/medium/48/</link><pubDate>Sun, 18 Dec 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/medium/48/</guid><description>LeetCode problem
You are given an n x n 2D matrix representing an image, rotate the image by 90 degrees (clockwise).
You have to rotate the image in-place, which means you have to modify the input 2D matrix directly. DO NOT allocate another 2D matrix and do the rotation.
Example 1:
Input: matrix = [[1,2,3],[4,5,6],[7,8,9]] Output: [[7,4,1],[8,5,2],[9,6,3]] Example 2:
Input: matrix = [[5,1,9,11],[2,4,8,10],[13,3,6,7],[15,14,12,16]] Output: [[15,13,2,5],[14,3,4,1],[12,6,8,9],[16,7,10,11]] Idea:
class Solution: def rotate(self, matrix: List[List[int]]) -&amp;gt; None: &amp;#34;&amp;#34;&amp;#34; Do not return anything, modify matrix in-place instead.</description></item><item><title>49. Group Anagrams</title><link>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/medium/49/</link><pubDate>Wed, 21 Dec 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/medium/49/</guid><description>LeetCode problem
Given an array of strings strs, group the anagrams together. You can return the answer in any order.
An Anagram is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once.
Example 1:
Input: strs = [&amp;quot;eat&amp;quot;,&amp;quot;tea&amp;quot;,&amp;quot;tan&amp;quot;,&amp;quot;ate&amp;quot;,&amp;quot;nat&amp;quot;,&amp;quot;bat&amp;quot;] Output: [[&amp;quot;bat&amp;quot;],[&amp;quot;nat&amp;quot;,&amp;quot;tan&amp;quot;],[&amp;quot;ate&amp;quot;,&amp;quot;eat&amp;quot;,&amp;quot;tea&amp;quot;]] Example 2:
Input: strs = [&amp;quot;&amp;quot;] Output: [[&amp;quot;&amp;quot;]] Example 3:
Input: strs = [&amp;quot;a&amp;quot;] Output: [[&amp;quot;a&amp;quot;]] Idea:
class Solution: def groupAnagrams(self, strs: List[str]) -&amp;gt; List[List[str]]: dd = {} for s in strs: s_sort = &amp;#34;&amp;#34;.</description></item><item><title>50. Pow(x, n)</title><link>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/medium/50/</link><pubDate>Thu, 22 Dec 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/medium/50/</guid><description>LeetCode problem
Implement pow(x, n), which calculates x raised to the power n (i.e., x^n).
Example 1:
Input: x = 2.00000, n = 10 Output: 1024.00000 Example 2:
Input: x = 2.10000, n = 3 Output: 9.26100 Example 3:
Input: x = 2.00000, n = -2 Output: 0.25000 Explanation: 2-2 = 1/22 = 1/4 = 0.25 Approach 1:
class Solution: def myPow(self, x: float, n: int) -&amp;gt; float: return x ** n Approach 2:
Recursive
class Solution: def myPow(self, x, n): if not n: return 1 if n &amp;lt; 0: return 1 / self.</description></item><item><title>Elastic Beanstalk</title><link>https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/elasticbeanstalk/</link><pubDate>Sat, 10 Sep 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/elasticbeanstalk/</guid><description>About AWS Elastic Beanstalk AWS Elastic Beanstalk is an easy-to-use service for deploying and scaling web applications and services developed with Java, .NET, PHP, Node.js, Python, Ruby, Go, and Docker on familiar servers such as Apache, Nginx, Passenger, and IIS.
Deploying new application versions to existing resources in AWS Elastic Beanstalk happens much faster (typically under a minute) and once again is mostly dependent on the size of the new application version.
Digest When you want to use new run time capabilities with elastic bean stalk, it is better to use blue-green deployment Security group will not be removed when removing the stack with elastic bean stalk For long running tasks - Use Elastic Beanstalk worker environment to process the tasks asynchronously Launch configuration is used for modifying instance type, key pair, elastic block storage and other settings that can be configured only when launching the instance Rolling with Additional Batch and Immutable both involve provisioning new servers to ensure capacity is not reduced.</description></item><item><title>53. Maximum Subarray</title><link>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/medium/53/</link><pubDate>Mon, 26 Dec 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/medium/53/</guid><description>LeetCode problem
Given an integer array nums, find the subarray which has the largest sum and return its sum.
Example 1:
Input: nums = [-2,1,-3,4,-1,2,1,-5,4] Output: 6 Explanation: [4,-1,2,1] has the largest sum = 6. Example 2:
Input: nums = [1] Output: 1 Example 3:
Input: nums = [5,4,-1,7,8] Output: 23 Approach 1:
class Solution: def maxSubArray(self, nums: List[int]) -&amp;gt; int: max_ = nums[0] max2 = nums[0] if len(nums) == 1: return max_ for i in range(1, len(nums)): max_ = max(nums[i], nums[i] + max_) max2 = max(max_, max2) return max2</description></item><item><title>55. Jump Game</title><link>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/medium/55/</link><pubDate>Thu, 29 Dec 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/medium/55/</guid><description>LeetCode problem
You are given an integer array nums. You are initially positioned at the array&amp;rsquo;s first index, and each element in the array represents your maximum jump length at that position.
Return true if you can reach the last index, or false otherwise.
Example 1:
Input: nums = [2,3,1,1,4] Output: true Explanation: Jump 1 step from index 0 to 1, then 3 steps to the last index. Example 2:
Input: nums = [3,2,1,0,4] Output: false Explanation: You will always arrive at index 3 no matter what.</description></item><item><title>56. Merge Intervals</title><link>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/medium/56/</link><pubDate>Thu, 29 Dec 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/medium/56/</guid><description>LeetCode problem
Given an array of intervals where intervals[i] = [starti, endi], merge all overlapping intervals, and return an array of the non-overlapping intervals that cover all the intervals in the input.
Example 1:
Input: intervals = [[1,3],[2,6],[8,10],[15,18]] Output: [[1,6],[8,10],[15,18]] Explanation: Since intervals [1,3] and [2,6] overlap, merge them into [1,6]. Example 2:
Input: intervals = [[1,4],[4,5]] Output: [[1,5]] Explanation: Intervals [1,4] and [4,5] are considered overlapping. Approach 1:
class Solution: def merge(self, intervals: List[List[int]]) -&amp;gt; List[List[int]]: intervals.sort() res = [intervals[0]] for ir in range(1, len(intervals)): if intervals[ir][0] &amp;gt;= res[-1][0] and intervals[ir][0] &amp;lt;= res[-1][1]: # [1,3],[2,6] res[-1][0] = min(intervals[ir][0], res[-1][0]) res[-1][1] = max(intervals[ir][1], res[-1][1]) elif res[-1][0] &amp;gt;= intervals[ir][0] and res[-1][0] &amp;lt;= intervals[ir][1]: # [1,3],[0,4] res[-1][0] = min(intervals[ir][0], res[-1][0]) res[-1][1] = max(intervals[ir][1], res[-1][1]) else: res.</description></item><item><title>62. Unique Paths</title><link>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/medium/62/</link><pubDate>Mon, 09 Jan 2023 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/medium/62/</guid><description>LeetCode problem
There is a robot on an m x n grid. The robot is initially located at the top-left corner (i.e., grid[0][0]). The robot tries to move to the bottom-right corner (i.e., grid[m - 1][n - 1]). The robot can only move either down or right at any point in time.
Given the two integers m and n, return the number of possible unique paths that the robot can take to reach the bottom-right corner.
The test cases are generated so that the answer will be less than or equal to 2 * 10^9.</description></item><item><title>73. Set Matrix Zeroes</title><link>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/medium/73/</link><pubDate>Mon, 09 Jan 2023 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/medium/73/</guid><description>LeetCode problem
Given an m x n integer matrix matrix, if an element is 0, set its entire row and column to 0&amp;rsquo;s.
You must do it in place.
Example 1:
Input: matrix = [[1,1,1],[1,0,1],[1,1,1]] Output: [[1,0,1],[0,0,0],[1,0,1]] Example 2:
Input: matrix = [[0,1,2,0],[3,4,5,2],[1,3,1,5]] Output: [[0,0,0,0],[0,4,5,0],[0,3,1,0]] Approach 1:
Idea:
LeetCode Submission
class Solution: def setZeroes(self, matrix: List[List[int]]) -&amp;gt; None: rows = len(matrix) cols = len(matrix[0]) # 1. Check first row/column for zero&amp;#39;s first_row_has_zero = 0 in matrix[0] first_col_has_zero = 0 in list(zip(*matrix))[0] # 2.</description></item><item><title>75. Sort Colors</title><link>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/medium/75/</link><pubDate>Fri, 03 Mar 2023 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/medium/75/</guid><description>LeetCode problem
This problem is also known as the Dutch National Flag problem. One solution is to use three pointers to partition the array into three sections: red, white, and blue.
Here&amp;rsquo;s the algorithm:
Initialize three pointers: left, mid, and right. Initialize left to 0, mid to 0, and right to n-1, where n is the length of the input array. While mid is less than or equal to right: If nums[mid] is 0, swap nums[mid] with nums[left], increment mid and left.</description></item><item><title>78. Subsets</title><link>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/medium/78/</link><pubDate>Sat, 04 Mar 2023 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/medium/78/</guid><description>LeetCode problem
In this solution, we start with an empty list in the results array.
For each element in the nums array, we append that element to all of the subsets in the results array to create new subsets, and then add these new subsets to the results array.
By doing this for all elements in nums, we generate all possible subsets.
class Solution: def subsets(self, nums: List[int]) -&amp;gt; List[List[int]]: res = [[]] for i in nums: for j in range(len(res)): cur = [] cur.</description></item><item><title>116. Populating Next Right Pointers in Each Node</title><link>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/medium/116/</link><pubDate>Fri, 31 Mar 2023 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/medium/116/</guid><description>LeetCode problem
from collections import deque class Solution: def connect(self, root: &amp;#39;Optional[Node]&amp;#39;) -&amp;gt; &amp;#39;Optional[Node]&amp;#39;: if not root: return root queue = deque([root]) while queue: level_size = len(queue) for i in range(level_size): node = queue.popleft() if i &amp;lt; level_size - 1: node.next = queue[0] if node.left: queue.append(node.left) if node.right: queue.append(node.right) return root LeetCode Editorial:
Editorial</description></item><item><title>122. Best Time to Buy and Sell Stock II</title><link>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/medium/122/</link><pubDate>Fri, 31 Mar 2023 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/medium/122/</guid><description>LeetCode problem
To solve this problem, we can use a greedy approach.
The idea is to keep adding the profit whenever the price on the next day is higher than the price on the current day.
This way, we will maximize profit.
class Solution: def maxProfit(self, prices: List[int]) -&amp;gt; int: profit = 0 for i in range(1, len(prices)): if prices[i] &amp;gt; prices[i - 1]: profit += prices[i] - prices[i - 1] return profit LeetCode Editorial:
Editorial</description></item><item><title>128. Longest Consecutive Sequence</title><link>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/medium/128/</link><pubDate>Thu, 13 Apr 2023 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/medium/128/</guid><description>LeetCode problem
Save all numbers in set to make it possible to get number at O(1). For each element look for the current+1 element if exists. class Solution: def longestConsecutive(self, nums: List[int]) -&amp;gt; int: res = 0 nset = set(nums) for x in nset: if x - 1 not in nset: # prevent double calculations _max = 1 cur = x while cur + 1 in nset: _max += 1 cur += 1 res = max(_max, res) return res</description></item><item><title>Lambda</title><link>https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/lambda/</link><pubDate>Sun, 11 Sep 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/lambda/</guid><description>About AWS Lambda AWS Lambda User Guide AWS Lambda is a serverless computing service that runs program code in response to certain events and is responsible for automatically allocating the necessary computing resources.
AWS Lambda automatically runs program code in response to various events, such as HTTP requests through Amazon API Gateway, changing objects in Amazon Simple Storage Service garbage cans (Amazon S3), updating tables in Amazon DynamoDB or changing states in AWS Step Functions.
Supports for Java, Go, PowerShell, Node.</description></item><item><title>130. Surrounded Regions</title><link>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/medium/130/</link><pubDate>Fri, 21 Apr 2023 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/medium/130/</guid><description>LeetCode problem
Naive Solution:
A naive solution would be to iterate through each cell in the grid, and for each O, check if it is surrounded by X&amp;rsquo;s in all four directions (up, down, left, and right). If so, flip it to X. However, this method has a high time complexity and does not take advantage of any properties of the problem.
Approach: The more efficient solution is to perform a Depth-First Search (DFS) starting from the border O&amp;rsquo;s.</description></item><item><title>131. Palindrome Partitioning</title><link>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/medium/131/</link><pubDate>Sun, 23 Apr 2023 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/algorithms-101/leetcode/medium/131/</guid><description>LeetCode problem
Naive Solution:
A naive solution would be to generate all possible partitions of the given string and then check if every substring in each partition is a palindrome.
However, this approach would be inefficient, as there would be an exponential number of partitions to check.
Approach:
Using Backtracking.
Logic:
Define a helper function, is_palindrome, to check if a given substring is a palindrome. Define the backtrack function to find all palindrome partitions recursively. This function will take the current position in the string and the current partition as input arguments.</description></item><item><title>ElastiCache</title><link>https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/elasticache/</link><pubDate>Mon, 12 Sep 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/elasticache/</guid><description>About Documentation User Guide Amazon Elasticache is a fully managed Redis or Memcached in-memory data store.
It&amp;rsquo;s great for use cases like two-tier web applications where the most frequently accesses data is stored in ElastiCache so response time is optimal.
You can use ElastiCache for caching, which accelerates application and database performance, or as a primary data store for use cases that don&amp;rsquo;t require durability like session stores, gaming leaderboards, streaming, and analytics.
Compatible with Redis and Memcached</description></item><item><title>RDS</title><link>https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/rds/</link><pubDate>Mon, 12 Sep 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/rds/</guid><description>About Relational Database Service Managed DB service that uses SQL as query language Amazon Relational Database Service (Amazon RDS) is a collection of managed services that makes it simple to set up, operate, and scale databases in the cloud.
Documentation User Guide Supports engines:
Amazon Aurora with MySQL compatibility: 5432 Amazon Aurora with PostgreSQL compatibility: 5432 MySQL: 3306 MariaDB: 3306 PostgreSQL: 5432 Oracle: 1521 SQL Server: 1433 Engine modes:
Used in CreateDBCluster
global parallelquery serverless multimaster Backups Backups are enabled by default in RDS Automated backups</description></item><item><title>Round #849/1791 (Div. 4)</title><link>https://romankurnovskii.com/en/tracks/algorithms-101/codeforces/other/849-div-4-1791/</link><pubDate>Fri, 03 Feb 2023 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/algorithms-101/codeforces/other/849-div-4-1791/</guid><description>TODO G2 Contest date: 2023-02-03
Contest problems
Editorial
Template with function snippets
A. Codeforces Checking https://codeforces.com/contest/1791/problem/A
Solution:
def solve(letter): code = &amp;#34;codeforces&amp;#34; if letter in code: print(&amp;#34;YES&amp;#34;) else: print(&amp;#34;NO&amp;#34;) for _ in range(int(inp())): letter = inp() solve(letter) B. Following Directions https://codeforces.com/contest/1791/problem/B
geometry, implementation, *800
Solution:
def solve(n, s): x = 0 y = 0 for move in s: if move == &amp;#39;L&amp;#39;: x -= 1 elif move == &amp;#39;R&amp;#39;: x += 1 elif move == &amp;#39;U&amp;#39;: y += 1 elif move == &amp;#39;D&amp;#39;: y -= 1 if x == 1 and y == 1: print(&amp;#34;YES&amp;#34;) break else: print(&amp;#34;NO&amp;#34;) for _ in range(int(inp())): # attempts num = int(inp()) letter = inp() solve(num, letter) C.</description></item><item><title>API Gateway</title><link>https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/api-gateway/</link><pubDate>Tue, 13 Sep 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/api-gateway/</guid><description>About Documentation User Guide API Gateway provides the opportunity to create and expand your own REST and WebSocket APIs at any size.
API endpoints can be cached to accommodate for frequent similar requests.
Use Cases Build a network for micros­ervices archit­ectures.
Amazon CloudWatch metrics - Collects near-real-time metrics Examples: 4XXError (client-side errors), 5XXError(server-side errors), CacheHitCount Amazon CloudWatch Logs - Debug issues related to request execution AWS CloudTrail - Record of actions taken by a user, role, or an AWS service in API Gateway AWS X-Ray - Trace your request across different AWS Services Digests Concepts REST API, HTTP API, WebSocket API</description></item><item><title>CodeDeploy</title><link>https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/codedeploy/</link><pubDate>Fri, 16 Sep 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/codedeploy/</guid><description>About CodeDeploy is a fully managed deployment service that automates software deploy­ments to a variety of compute services such as EC2, Fargate, Lambda, &amp;amp; on-pre­mises servers
Documentation User Guide CodeDeploy can also deploy a serverless Lambda function.
CodeDeploy can be connected to CodePipeline and use artifacts from there.
Platforms Need to choose the compute platform:
EC2/On-premises. AWS Lambda. Amazon ECS. AppSpec File The application specification file (AppSpec file) is a YAML-formatted, or JSON-formatted file used by CodeDeploy to manage a deployment.</description></item><item><title>CodeBuild</title><link>https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/codebuild/</link><pubDate>Fri, 16 Sep 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/codebuild/</guid><description>About CodeBuild is a fully managed service that assembles source code, runs unit tests, &amp;amp; also generates artefacts ready to deploy.
Documentation User Guide CodeBuild is a code creation service that also produces code artefacts upon request.
CodeBuild is an alternative to other build tools such as Jenkins.
CodeBuild is integrated with KMS for encryption of build artifacts, IAM for build permissions, VPC for network security, and CloudTrail for logging API calls.
CodeBuild is a fully managed build service to compile source code, run unit tests and produce artifacts that are ready for deployment.</description></item><item><title>CodePipeline</title><link>https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/codepipeline/</link><pubDate>Fri, 16 Sep 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/codepipeline/</guid><description>About AWS CodePipeline is a fully managed continuous delivery service that helps you automate your release pipelines for fast and reliable application and infrastructure updates.
Documentation User Guide CodePipeline automates the build, test, and deploy phases of your release process every time there is a code change, based on the release model you define.
You can easily integrate AWS CodePipeline with third-party services such as GitHub or with your own custom plugin. With AWS CodePipeline, you only pay for what you use.</description></item><item><title>CodeArtifact</title><link>https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/codeartifact/</link><pubDate>Sun, 18 Sep 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/codeartifact/</guid><description>About AWS CodeArtifact is a fully managed artifact repository service that makes it easy for organizations of any size to securely store, publish, and share software packages used in their software development process.
Documentation User Guide CodeAr­tifact is a secure storage, publishing, and sharing of software code packages used in a development process organisation&amp;rsquo;s software development. CodeAr­tifact makes it easy for small organisations to store, publish, and share software packages.
CodeArtifact can be configured to automatically fetch software packages and dependencies from public artifact repositories.</description></item><item><title>X-Ray</title><link>https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/xray/</link><pubDate>Mon, 19 Sep 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/xray/</guid><description>About AWS X-Ray helps developers analyze and debug production, distributed applications, such as those built using a microservices architecture.
Documentation User Guide X-Ray allows software engineers to view the state of a system at a glance, identify potential bottlenecks, and make informed operational decisions to improve performance and reliability. X-Ray inspects application code using a combination of machine and customer-provided data to identify potential bottlenecks and analyze performance and performance trends for each test scenario.
Terminology AWS X-Ray receives data from services as segments.</description></item><item><title>Fault Injection Simulator</title><link>https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/fis/</link><pubDate>Mon, 19 Sep 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/fis/</guid><description>About AWS Fault Injection Simulator (FIS) is a fully managed service for running fault injection experiments on AWS that makes it easier to improve an application’s performance, observability, and resiliency.
Documentation User Guide Price Current price
With AWS FIS, you pay only for what you use. There are no upfront costs or minimum fees. You are charged based on the duration that an action is active. The AWS FIS price is $0.10 per action-minute.
Terminology and Concepts Everything starts with an experiment template.</description></item><item><title>Elastic Container Registry</title><link>https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/ecr/</link><pubDate>Tue, 20 Sep 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/ecr/</guid><description>About Amazon Elastic Container Registry (Amazon ECR) - Fully managed container registry offering high-performance hosting, so you can reliably deploy application images and artifacts anywhere
Documentation User Guide Hosted private Docker registry
Alternatives Docker Hub JFrog Artifactory Azure Container Registry Harbor Google Container Registry Red Hat Quay JFrog Container Registry Price Current price
Use Cases Store, encrypt, and manage container images
Manage software vulnerabilities Streamline your deployment workloads Manage image lifecycle policies Type: Containers
Same type services: Elastic Container Service (ECS), Elastic Container Registry (ECR), Elastic Kubernetes Service (EKS), Fargate</description></item><item><title>Elastic Container Service</title><link>https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/ecs/</link><pubDate>Tue, 20 Sep 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/ecs/</guid><description>About Documentation User Guide Highly secure, reliable, &amp;amp; scalable way to run contai­ners
Alternatives Google Container Engine (GKE) Azure Container Service IBM Bluemix Container Service Jelastic Multi-Cloud PaaS Terminology Amazon ECS Term Definition Cluster Logical Grouping of EC2 Instances Container Instance EC2 instance running the ECS agent Task Definition Blueprint that describes how a docker container should launch Task A running container using settings in a Task Definition Service Defines long running tasks – can control task count with Auto Scaling and attach an ELB Digest Microservices are built in multiple programming languages Containers simplify deployment of microservices: Step 1 : Create a self contained Docker image Application Runtime (JDK or Python), Application code and Dependencies Step 2 : Run it as a container any where Local machine OR Corporate data center OR Cloud Use On-Demand instances or Spot instances Launch type: EC2 or Fargate Data volumes attached to containers Deployment type: Rolling update Blue/green deployment (powered by AWS CodeDeploy) Task Placement Strategies: binpack - Leave least amount of unused CPU or memory.</description></item><item><title>Fargate</title><link>https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/fargate/</link><pubDate>Wed, 21 Sep 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/fargate/</guid><description>About Serverless version of ECS.
Serverless compute for contai­ners.
AWS Fargate is a serverless, pay-as-you-go compute engine that lets you focus on building applications without managing servers.
Deploy and manage your applications, not infrastructure. Fargate removes the operational overhead of scaling, patching, securing, and managing servers.
Compatible with both Amazon Elastic Container Service (ECS) and Amazon Elastic Kubernetes Service (EKS).
Documentation User Guide Alternatives Google Kubernetes Engine (GKE) Red Hat OpenShift Container Platform Azure Kubernetes Service (AKS) Rancher Azure Container Instances Cloud Foundry Oracle Cloud Infrastructure Container Engine for Kubernetes Price Current price</description></item><item><title>Elastic Kubernetes Service</title><link>https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/eks/</link><pubDate>Thu, 22 Sep 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/eks/</guid><description>About Kubernetes (K8) Docker Container/Cluster management
Run highly secure, reliable, and scalable containers
Documentation User Guide Alternatives Red Hat OpenShift Container Platform Azure Kubernetes Service (AKS) Rancher Google Kubernetes Engine (GKE) Oracle Cloud Infrastructure Container Engine for Kubernetes Mirantis Kubernetes Engine (formerly Docker Enterprise) Kubernetes Cloud Foundry Price Current price
Use Cases Build and run web applications Deploy across hybrid environments Model machine learning (ML) workflows ECS vs EKS Amazon provides the Elastic Container Service for Kubernetes (Amazon EKS) which can be used to deploy, manage, and scale containerized applications using Kubernetes on AWS.</description></item><item><title>Cognito</title><link>https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/cognito/</link><pubDate>Fri, 23 Sep 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/cognito/</guid><description>About Amazon Cognito - Simple and Secure User Sign-Up, Sign-In, and Access Control
Documentation User Guide Amazon Cognito lets you add user sign-up, sign-in, and access control to your web and mobile apps quickly and easily. Amazon Cognito scales to millions of users and supports sign-in with social identity providers, such as Apple, Facebook, Google, and Amazon, and enterprise identity providers via SAML 2.0 and OpenID Connect.
Users can sign in directly with a user name and password, or through a third party such as Facebook, Amazon, or Google.</description></item><item><title>Route 53</title><link>https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/route53/</link><pubDate>Fri, 23 Sep 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/route53/</guid><description>About Amazon Route 53 is a highly available and scalable Domain Name System (DNS) web service. Route 53 connects user requests to internet applications running on AWS or on-premises.
Documentation User Guide A highly available and scalable Domain Name System (DNS) web service used for domain registration, DNS routing, and health checking.
Can create and manage your public DNS records.
What is the difference between Route 53 and DNS?
Your DNS is the service that translates your domain name into an IP address.</description></item><item><title>EventBridge</title><link>https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/eventbridge/</link><pubDate>Sun, 25 Sep 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/eventbridge/</guid><description>About EventB­ridge is a serverless event bus that makes it easy to connect applic­ations together using data from apps, integrated SaaS apps, &amp;amp; AWS services.
Documentation User Guide EventB­ridge is a low-cost alternative to building a new backend infrastructure for every new app. With Serverless EventB­ridge, you can connect your existing apps with a few lines of code. You don’t have to build a new backend for every new app you want to connect to.
You can use existing infrastructure as a provider of event data, and connect your apps using Serverless EventB­ridge.</description></item><item><title>Step Functions</title><link>https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/step-functions/</link><pubDate>Tue, 27 Sep 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/step-functions/</guid><description>About AWS Step Functions is a low-code, visual workflow service that developers use to build distributed applications, automate IT and business processes, and build data and machine learning pipelines using AWS services.
Documentation User Guide Step Functions is a serverless function orches­trator that makes it easy to sequence Lambda functions &amp;amp; multiple AWS services into busine­ss-­cri­tical applic­ations.
Alternatives AWS lambda Airflow Google Cloud Workflows Microsoft Flow Price Pay only for what you use
Current price
Free Tier: 4,000 state transitions per month</description></item><item><title>Questions</title><link>https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/questions/</link><pubDate>Thu, 08 Sep 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/questions/</guid><description>On this page you can find 50 random questions.
To get prepared for exam you can use cloud-exam-prepare.com
Q1 - Q10 Q1 You are developing an API in Amazon API Gateway that several mobile applications will use to interface with a back end service in AWS being written by another developer. You can use a(n)____ integration for your API methods to develop and test your client applications before the other developer has completed work on the back end.</description></item><item><title>Linters &amp; Formatters Setup for Python, Groovy, JavaScript in VSCode</title><link>https://romankurnovskii.com/en/posts/python-groovy-lint-format-setup/</link><pubDate>Thu, 25 May 2023 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/posts/python-groovy-lint-format-setup/</guid><description>Python To set up Python with Black and Flake8, you will need a couple of configuration files: pyproject.toml for Black, and .flake8 for Flake8.
Black is a code formatter for Python. It reformats your entire file in place according to the Black code style, which is a strict subset of PEP 8. Black makes code review faster by producing the smallest diffs possible.
Flake8 is a powerful tool that checks your Python code against some of the style conventions in PEP 8.</description></item><item><title>Python docstring templates</title><link>https://romankurnovskii.com/en/posts/python-docstring-templates/</link><pubDate>Wed, 24 May 2023 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/posts/python-docstring-templates/</guid><description>Template def function_name(param1: Type1, param2: Type2, ...) -&amp;gt; ReturnType: &amp;#34;&amp;#34;&amp;#34;Brief description of the function. More detailed explanation of the function if necessary. This can span multiple lines as needed. Args: param1 (Type1): Description of param1. param2 (Type2): Description of param2. ... Returns: ReturnType: Description of the return value. Raises: ExceptionType: Explanation of the conditions under which this exception is raised. Example: &amp;gt;&amp;gt;&amp;gt; function_name(param1_value, param2_value) Expected output &amp;#34;&amp;#34;&amp;#34; ... Example With Type Hints def add_numbers(num1: int, num2: int = 5) -&amp;gt; int: &amp;#34;&amp;#34;&amp;#34;Adds two numbers together.</description></item><item><title>AI Midjourney generated</title><link>https://romankurnovskii.com/en/photos/midjourney/</link><pubDate>Sun, 14 May 2023 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/photos/midjourney/</guid><description> colorful abstract splashes floating around forming the loose shape of a gato, in the style of realistic anamorphic art, digital art wonders, flickr, bold yet graceful, colorful explosions, vivid realism, colorful curves colorful abstract splashes floating around forming the loose shape of a tree, in the style of realistic anamorphic art, digital art wonders, flickr, bold yet graceful, colorful explosions, vivid realism, colorful curves colorful abstract splashes floating around forming the loose shape of a rose, in the style of realistic anamorphic art, digital art wonders, flickr, bold yet graceful, colorful explosions, vivid realism, colorful curves colorful abstract splashes floating around forming the loose shape of a protea, in the style of realistic anamorphic art, digital art wonders, flickr, bold yet graceful, colorful explosions, vivid realism, colorful curves</description></item><item><title>Difference between Tries and Trees?</title><link>https://romankurnovskii.com/en/posts/tree-vs-trie-data-structures/</link><pubDate>Sat, 13 May 2023 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/posts/tree-vs-trie-data-structures/</guid><description>Despite their similar names, these structures serve different purposes, and understanding their differences is crucial to utilizing them effectively.
Tree A tree data structure is a collection of entities, called nodes, connected by edges.
Each node contains a value, and a list of references to its child nodes. The first node of the tree is called the root. If we visualize it, a tree data structure resembles an inverted tree, with the root at the top and the leaves (nodes without children) at the bottom.</description></item><item><title>How to publish JavaScript package to npm registry</title><link>https://romankurnovskii.com/en/posts/howto-publish-js-npm-project/</link><pubDate>Sat, 06 May 2023 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/posts/howto-publish-js-npm-project/</guid><description>In this post, we&amp;rsquo;ll dive deeper into the process of creating, structuring, and publishing a JavaScript package to the npm registry. We&amp;rsquo;ll use the repository https://github.com/romankurnovskii/npm-js-package-template as a reference for this guide.
TLDR Open template: https://github.com/romankurnovskii/npm-js-package-template Click Use this template Create repo from this template. git clone new repo update code src/index.ts, src/bin.ts How to check if bin script works from terminal:
npm link &amp;amp;&amp;amp; npm link mypackage mypackage Publish:
npm run prepublishOnly npm publish Folder Structure Let&amp;rsquo;s go through the folder structure of the repository:</description></item><item><title>Enhancing Trading Bot with Abstraction and Async Management</title><link>https://romankurnovskii.com/en/stories/004-trading-bot-refactor-orders/</link><pubDate>Tue, 02 May 2023 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/stories/004-trading-bot-refactor-orders/</guid><description>Abstraction Today worked on refining some abstraction level in framework. The main objective of today&amp;rsquo;s work was to enhance the abstraction in the classes and improve the overall code structure.
The goal was to make the code more adaptable and easier to maintain.
For example, instead of having Binance hardcoded in the from_binance_order method, now use the Exchanges enum, which makes the code more versatile and ready for additional exchanges in the future.
def from_binance_order(binance_order: BinanceOrder): exchange = Exchanges.</description></item><item><title>Round #867/1822 (Div. 3)</title><link>https://romankurnovskii.com/en/tracks/algorithms-101/codeforces/other/867-div-3-1822/</link><pubDate>Sat, 29 Apr 2023 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/algorithms-101/codeforces/other/867-div-3-1822/</guid><description>Contest problems A. TubeTube Feed Mushroom Filippov is having lunch and wants to watch a video on TubeTube. He has a specific amount of time for lunch, and he wants to make the best use of it by watching the most entertaining video that fits into his lunch break.
Given a list of videos, each with its duration and entertainment value, your task is to help Mushroom Filippov choose the best video to watch. He can only watch one video, and the video must not exceed his lunch break time.</description></item><item><title>Creating a GUI for a Trading Bot</title><link>https://romankurnovskii.com/en/stories/003-trading-bot-gui-init-tkinter/</link><pubDate>Fri, 28 Apr 2023 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/stories/003-trading-bot-gui-init-tkinter/</guid><description>The journey towards creating a light trading bot framework begins with a simple, intuitive graphical user interface (GUI). For this venture, I have chosen to rely on Python&amp;rsquo;s built-in Tkinter library to provide the fundamental building blocks for my GUI.
Embracing Simplicity The initial goal is to keep the GUI as straightforward as possible, focusing on the core functionalities required for a trading bot. The main elements incorporated are:
Start/Stop Buttons: These allow the user to control the operation of the bot.</description></item><item><title>Setup OpenVPN Server on AWS EC2 Ubuntu</title><link>https://romankurnovskii.com/en/stories/002-openvpn-aws-ec2-setup/</link><pubDate>Tue, 25 Apr 2023 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/stories/002-openvpn-aws-ec2-setup/</guid><description>Today, I embarked on a journey to create an accessible, affordable, and easy-to-use VPN solution that anyone can set up on their devices using AWS.
Finding a reasonably priced solution was critical. I opted for Amazon&amp;rsquo;s t3a.nano ARM Ubuntu image, which costs ~$0.0047/hour ~ $3.8/month.
Various Amazon EC2 instances and their prices are listed on Amazon&amp;rsquo;s On-Demand Pricing page.
Here is the list of all Ubuntu AMI images to identify the appropriate image for the project. The selected image combined with the CloudFormation template, which was inspired by the AWS CloudFormation General Reference, provides a seamless and consistent user experience.</description></item><item><title>Visualize Algorithms - Rediscovering Backtracking</title><link>https://romankurnovskii.com/en/stories/001-rediscovering-backtracking-algo/</link><pubDate>Mon, 24 Apr 2023 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/stories/001-rediscovering-backtracking-algo/</guid><description>Today, I tackled a LeetCode programming problem that pushed me to rediscover a forgotten concept and devise a creative solution to share my learning experience with others.
The problem centered around a backtracking algorithm. Although I had previously explored this topic, I couldn&amp;rsquo;t quite remember the exact steps and logic involved. Determined to refresh my memory, I set out not only to solve the problem but also to find a way to make it easier for myself and others to visualize and comprehend the algorithm in the future.</description></item><item><title>How to Create a React-Electron Application From Scratch</title><link>https://romankurnovskii.com/en/posts/howto-create-react-electron-app-ts/</link><pubDate>Sat, 22 Apr 2023 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/posts/howto-create-react-electron-app-ts/</guid><description>In this step-by-step tutorial, we&amp;rsquo;ll create a simple React-Electron application from scratch. Electron is a framework that allows you to build cross-platform desktop applications using web technologies such as HTML, CSS, and JavaScript. React is a popular JavaScript library for building user interfaces.
I use this clean template as a boilerplate for my projects.
TLDR Go to repo electron-react-template click Use this template to create a new repo and start coding. Prerequisites Before starting this tutorial, make sure you have the following tools installed on your system:</description></item><item><title>AI generated</title><link>https://romankurnovskii.com/en/photos/ai/</link><pubDate>Mon, 20 Mar 2023 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/photos/ai/</guid><description/></item><item><title>How to upload an opensource application to SourceForge</title><link>https://romankurnovskii.com/en/posts/how-to-upload-app-to-sourceforge/</link><pubDate>Thu, 16 Mar 2023 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/posts/how-to-upload-app-to-sourceforge/</guid><description>Step 1: Create a SourceForge account Go to the SourceForge website at https://sourceforge.net/ Click on the &amp;ldquo;Join&amp;rdquo; button in the top-right corner. Fill in the required fields, such as username, email, and password, then click &amp;ldquo;Register&amp;rdquo; You&amp;rsquo;ll receive a confirmation email from SourceForge. Click on the link provided to confirm your account. Step 2: Start a new project Log in to your SourceForge account. Click on the &amp;ldquo;Create&amp;rdquo; button in the top-right corner of the page. Select &amp;ldquo;Create Your Project Now&amp;rdquo; from the dropdown menu.</description></item><item><title>BrewMate</title><link>https://romankurnovskii.com/en/apps/brewmate/</link><pubDate>Mon, 13 Mar 2023 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/apps/brewmate/</guid><description>BrewMate is a macOS GUI application that makes it easy to search for, install, and uninstall Homebrew casks. You can also see the top downloaded casks for the last month.
Install Download the latest DMG file from the releases page or from sourceforge.net Double-click the DMG file to open it. Drag the BrewMate app to your Applications folder. Launch BrewMate from your Applications folder. or
brew install romankurnovskii/cask/brewmate --cask or
brew tap romankurnovskii/cask brew update brew install brewmate --cask FAQ Is this app free?</description></item><item><title>How to publish typescript package to npm registry</title><link>https://romankurnovskii.com/en/posts/howto-publish-ts-npm-project/</link><pubDate>Tue, 07 Mar 2023 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/posts/howto-publish-ts-npm-project/</guid><description> Open template: https://github.com/romankurnovskii/npm-typescript-package-template Click Use this template Create repo from this template. git clone new repo update code src/index.ts, src/bin.ts How to check if bin script works from terminal:
npm link &amp;amp;&amp;amp; npm link mypackage mypackage Publish:
npm run prepublishOnly npm publish</description></item><item><title>How to add copy code button on HUGO highligh code block</title><link>https://romankurnovskii.com/en/posts/hugo-add-copy-button-on-highlight-block/</link><pubDate>Sat, 04 Mar 2023 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/posts/hugo-add-copy-button-on-highlight-block/</guid><description>function addCopyButtonToCodeBlocks() { // Get all code blocks with a class of &amp;#34;language-*&amp;#34; const codeBlocks = document.querySelectorAll(&amp;#39;code[class^=&amp;#34;language-&amp;#34;]&amp;#39;); // For each code block, add a copy button inside the block codeBlocks.forEach(codeBlock =&amp;gt; { // Create the copy button element const copyButton = document.createElement(&amp;#39;button&amp;#39;); copyButton.classList.add(&amp;#39;copy-code-button&amp;#39;); copyButton.innerHTML = &amp;#39;&amp;lt;i class=&amp;#34;far fa-copy&amp;#34;&amp;gt;&amp;lt;/i&amp;gt;&amp;#39;; // Add a click event listener to the copy button copyButton.addEventListener(&amp;#39;click&amp;#39;, () =&amp;gt; { // Copy the code inside the code block to the clipboard const codeToCopy = codeBlock.innerText; navigator.clipboard.writeText(codeToCopy); // Update the copy button text to indicate that the code has been copied copyButton.</description></item><item><title>Bash code snippets</title><link>https://romankurnovskii.com/en/posts/bash-snippets/</link><pubDate>Sun, 12 Feb 2023 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/posts/bash-snippets/</guid><description>Rename all files by pattern in current directory files=(*) for file in &amp;#34;${files[@]}&amp;#34; do # Check if the file name contains the &amp;#34;№&amp;#34; symbol if [[ $file == *&amp;#34;№&amp;#34;* ]]; then # Remove everything before and including the &amp;#34;№&amp;#34; symbol new_file=${file##*&amp;#34;№&amp;#34;} mv &amp;#34;$file&amp;#34; &amp;#34;$new_file&amp;#34; echo &amp;#34;Renamed $file to $new_file&amp;#34; fi done Add substring to filename #!/bin/bash DIR=&amp;#34;/path/to/folder&amp;#34; cd &amp;#34;$DIR&amp;#34; # Rename all .png files and add &amp;#34;.ru&amp;#34; before .png for file in *.png; do base=$(basename &amp;#34;$file&amp;#34; .png) mv &amp;#34;$file&amp;#34; &amp;#34;${base}.</description></item><item><title>Git snippets</title><link>https://romankurnovskii.com/en/posts/git-snippets/</link><pubDate>Sun, 01 Jan 2023 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/posts/git-snippets/</guid><description>Github Actions Submodules Sync name: &amp;#39;Submodules Sync&amp;#39; on: schedule: - cron: &amp;#34;0 * * * *&amp;#34; jobs: sync: runs-on: ubuntu-latest steps: # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it - uses: actions/checkout@v2 with: submodules: true - name: Pull &amp;amp; update submodules recursively run: | git pull --recurse-submodules git submodule update --remote --recursive - name: Commit &amp;amp; push changes run: | git config --global user.name &amp;#39;Git bot&amp;#39; git config --global user.email &amp;#39;bot@noreply.github.com&amp;#39; git commit -am &amp;#34;Auto updated submodule references&amp;#34; &amp;amp;&amp;amp; git push || echo &amp;#34;No changes to commit&amp;#34; Free space in git repo Download BFG</description></item><item><title>Links</title><link>https://romankurnovskii.com/en/p/links/</link><pubDate>Sun, 01 Jan 2023 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/p/links/</guid><description>AI The curated list of AI tools for marketing Discover the newest AIs for any given task Create 1,000 AI art images a day for free openai examples openai answers from file AI-powered video summaries Chrome extension Free AI-generated Stock Images of People Soft/Architecture Block Diagram Maker Theme for Docs - MkDocs Media Fast and simple way to visualize your story - free 1 Storyboard and 10 Frames Video from Screenshot Other Create and sell your own personalized books and journals Books nice covers IL https://www.</description></item><item><title>Code style notes</title><link>https://romankurnovskii.com/en/posts/code-style/</link><pubDate>Wed, 21 Dec 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/posts/code-style/</guid><description>Release notes example Changed
feat(exports): export mergeConfig #5151 Fixed
fix(CancelledError): include config #4922 fix(general): removing multiple/trailing/leading whitespace #5022 fix(headers): decompression for responses without Content-Length header #5306 fix(webWorker): exception to sending form data in web worker #5139 Refactors
refactor(types): AxiosProgressEvent.event type to any #5308 refactor(types): add missing types for static AxiosError.from method #4956 Chores
chore(docs): remove README link to non-existent upgrade guide #5307 chore(docs): typo in issue template name #5159 Code format Python style JavaScript style</description></item><item><title>Python bitwise operators</title><link>https://romankurnovskii.com/en/posts/python-bitwise-operators/</link><pubDate>Sun, 20 Nov 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/posts/python-bitwise-operators/</guid><description>&amp;laquo; Left Shift Moves the bits of its first operand to the left by the number of places specified in its second operand.
Shifting a single bit to the left by one place doubles its value. Shifting to two places to the left by one place quadruple its value. $ a &amp;laquo; n = a * 2^n $
&amp;gt;&amp;gt;&amp;gt; 100 &amp;lt;&amp;lt; 1 200 &amp;gt;&amp;gt;&amp;gt; 100 &amp;lt;&amp;lt; 2 400 &amp;gt;&amp;gt;&amp;gt; 100 &amp;lt;&amp;lt; 3 800 &amp;raquo; Right Shift The rightmost bits always get dropped.</description></item><item><title>Support me</title><link>https://romankurnovskii.com/en/p/supportme/</link><pubDate>Sun, 23 Oct 2022 07:38:00 +0300</pubDate><guid>https://romankurnovskii.com/en/p/supportme/</guid><description> https://www.buymeacoffee.com/romankurnovskii https://rom.gumroad.com/ https://www.patreon.com/user?u=79828420</description></item><item><title>chart</title><link>https://romankurnovskii.com/en/posts/hugo-shortcode-examples/chart/</link><pubDate>Sun, 23 Oct 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/posts/hugo-shortcode-examples/chart/</guid><description>Display Chart.js diagrams/blocks
Sources</description></item><item><title>img</title><link>https://romankurnovskii.com/en/posts/hugo-shortcode-examples/img/</link><pubDate>Thu, 20 Oct 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/posts/hugo-shortcode-examples/img/</guid><description>My image float right, tall Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry&amp;rsquo;s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.</description></item><item><title>Cloud exam Quizz</title><link>https://romankurnovskii.com/en/apps/cloud-exam-quizz/</link><pubDate>Mon, 10 Oct 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/apps/cloud-exam-quizz/</guid><description>Goal: Check if you are ready to pass the Cloud exam
The application calculates progress after each answered question. Ability to answer at least one question and get a comment at the same time. No need to pass all questions before. It is convenient to spend 20 min a day Works from web/tablet/mobile Link: https://www.cloud-exam-prepare.com</description></item><item><title>Deposit Interactive Brokers from Israel Discount bank</title><link>https://romankurnovskii.com/en/posts/interactivebrokers-deposit/</link><pubDate>Fri, 07 Oct 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/posts/interactivebrokers-deposit/</guid><description>Web Create IB notification Login to https://www.interactivebrokers.co.uk/portal/#/ Click Deposit Click Use a new deposit method if no one exist Bank Wire -&amp;gt; Get instructions Account Number: Bank account number
Next you get Bank Wire Instructions These data you need to make a payment from Discount bank
Send money from Discount bank Login start.telebank.co.il Click: ביצוע העברה
Fill the form
Click המשך and proceed</description></item><item><title>JavaScript code snippets</title><link>https://romankurnovskii.com/en/posts/js-snippets/</link><pubDate>Thu, 15 Sep 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/posts/js-snippets/</guid><description>Web / Browser get base URL const getBaseURL = url =&amp;gt; url.replace(/[?#].*$/, &amp;#39;&amp;#39;); getBaseURL(&amp;#39;http://url.com/page?name=Adam&amp;amp;surname=Smith&amp;#39;); // &amp;#39;http://url.com/page&amp;#39; const url = new URL(&amp;#34;https://example.com/login?user=someguy&amp;amp;page=news&amp;#34;); url.origin // &amp;#34;https://example.com&amp;#34; url.host // &amp;#34;example.com&amp;#34; url.protocol // &amp;#34;https:&amp;#34; url.pathname // &amp;#34;/login&amp;#34; url.searchParams.get(&amp;#39;user&amp;#39;) // &amp;#34;someuser&amp;#34; get URL parameters as object const getURLParameters = url =&amp;gt; (url.match(/([^?=&amp;amp;]+)(=([^&amp;amp;]*))/g) || []).reduce( (a, v) =&amp;gt; ( (a[v.slice(0, v.indexOf(&amp;#39;=&amp;#39;))] = v.slice(v.indexOf(&amp;#39;=&amp;#39;) + 1)), a ), {} ); getURLParameters(&amp;#39;google.com&amp;#39;); // {} getURLParameters(&amp;#39;http://url.com/page?name=Adam&amp;amp;surname=Smith&amp;#39;); // {name: &amp;#39;Adam&amp;#39;, surname: &amp;#39;Smith&amp;#39;} // One line Object.fromEntries(&amp;#39;http://url.com/page?name=Adam&amp;amp;surname=Smith&amp;#39;.split(&amp;#39;?&amp;#39;)[1].split(&amp;#39;&amp;amp;&amp;#39;).map(x=&amp;gt;x.split(&amp;#39;=&amp;#39;))) if DOC element contains another element const elementContains = (parent, child) =&amp;gt; parent !</description></item><item><title>Serverless: Flask+API Gateway+Lambda+MongoDB</title><link>https://romankurnovskii.com/en/posts/serverless-flask-lambda-api-gateway-mongodb/</link><pubDate>Tue, 06 Sep 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/posts/serverless-flask-lambda-api-gateway-mongodb/</guid><description>&amp;ldquo;mongodb&amp;rdquo; free tier vs &amp;ldquo;documentdb&amp;rdquo;
Project structure - src - app.py - mongo.py - .env - requirements.txt - serverless.yml Sources
Add AIM user Setup specific user for serverless deployment
username: serverless-deployer
aws aim documentation Set policy Create:
ServerLessDeployerPolicyGroup ServerLessDeployerPolicy Policy:
{ &amp;#34;Statement&amp;#34;: [ { &amp;#34;Action&amp;#34;: [ &amp;#34;apigateway:*&amp;#34;, &amp;#34;cloudformation:CancelUpdateStack&amp;#34;, &amp;#34;cloudformation:ContinueUpdateRollback&amp;#34;, &amp;#34;cloudformation:CreateChangeSet&amp;#34;, &amp;#34;cloudformation:CreateStack&amp;#34;, &amp;#34;cloudformation:CreateUploadBucket&amp;#34;, &amp;#34;cloudformation:DeleteStack&amp;#34;, &amp;#34;cloudformation:Describe*&amp;#34;, &amp;#34;cloudformation:EstimateTemplateCost&amp;#34;, &amp;#34;cloudformation:ExecuteChangeSet&amp;#34;, &amp;#34;cloudformation:Get*&amp;#34;, &amp;#34;cloudformation:List*&amp;#34;, &amp;#34;cloudformation:UpdateStack&amp;#34;, &amp;#34;cloudformation:UpdateTerminationProtection&amp;#34;, &amp;#34;cloudformation:ValidateTemplate&amp;#34;, &amp;#34;dynamodb:CreateTable&amp;#34;, &amp;#34;dynamodb:DeleteTable&amp;#34;, &amp;#34;dynamodb:DescribeTable&amp;#34;, &amp;#34;dynamodb:DescribeTimeToLive&amp;#34;, &amp;#34;dynamodb:UpdateTimeToLive&amp;#34;, &amp;#34;ec2:AttachInternetGateway&amp;#34;, &amp;#34;ec2:AuthorizeSecurityGroupIngress&amp;#34;, &amp;#34;ec2:CreateInternetGateway&amp;#34;, &amp;#34;ec2:CreateNetworkAcl&amp;#34;, &amp;#34;ec2:CreateNetworkAclEntry&amp;#34;, &amp;#34;ec2:CreateRouteTable&amp;#34;, &amp;#34;ec2:CreateSecurityGroup&amp;#34;, &amp;#34;ec2:CreateSubnet&amp;#34;, &amp;#34;ec2:CreateTags&amp;#34;, &amp;#34;ec2:CreateVpc&amp;#34;, &amp;#34;ec2:DeleteInternetGateway&amp;#34;, &amp;#34;ec2:DeleteNetworkAcl&amp;#34;, &amp;#34;ec2:DeleteNetworkAclEntry&amp;#34;, &amp;#34;ec2:DeleteRouteTable&amp;#34;, &amp;#34;ec2:DeleteSecurityGroup&amp;#34;, &amp;#34;ec2:DeleteSubnet&amp;#34;, &amp;#34;ec2:DeleteVpc&amp;#34;, &amp;#34;ec2:Describe*&amp;#34;, &amp;#34;ec2:DetachInternetGateway&amp;#34;, &amp;#34;ec2:ModifyVpcAttribute&amp;#34;, &amp;#34;events:DeleteRule&amp;#34;, &amp;#34;events:DescribeRule&amp;#34;, &amp;#34;events:ListRuleNamesByTarget&amp;#34;, &amp;#34;events:ListRules&amp;#34;, &amp;#34;events:ListTargetsByRule&amp;#34;, &amp;#34;events:PutRule&amp;#34;, &amp;#34;events:PutTargets&amp;#34;, &amp;#34;events:RemoveTargets&amp;#34;, &amp;#34;iam:AttachRolePolicy&amp;#34;, &amp;#34;iam:CreateRole&amp;#34;, &amp;#34;iam:DeleteRole&amp;#34;, &amp;#34;iam:DeleteRolePolicy&amp;#34;, &amp;#34;iam:DetachRolePolicy&amp;#34;, &amp;#34;iam:GetRole&amp;#34;, &amp;#34;iam:PassRole&amp;#34;, &amp;#34;iam:PutRolePolicy&amp;#34;, &amp;#34;iot:CreateTopicRule&amp;#34;, &amp;#34;iot:DeleteTopicRule&amp;#34;, &amp;#34;iot:DisableTopicRule&amp;#34;, &amp;#34;iot:EnableTopicRule&amp;#34;, &amp;#34;iot:ReplaceTopicRule&amp;#34;, &amp;#34;kinesis:CreateStream&amp;#34;, &amp;#34;kinesis:DeleteStream&amp;#34;, &amp;#34;kinesis:DescribeStream&amp;#34;, &amp;#34;lambda:*&amp;#34;, &amp;#34;logs:CreateLogDelivery&amp;#34;, &amp;#34;logs:CreateLogGroup&amp;#34;, &amp;#34;logs:DeleteLogGroup&amp;#34;, &amp;#34;logs:DescribeLogGroups&amp;#34;, &amp;#34;logs:DescribeLogStreams&amp;#34;, &amp;#34;logs:FilterLogEvents&amp;#34;, &amp;#34;logs:GetLogEvents&amp;#34;, &amp;#34;logs:PutSubscriptionFilter&amp;#34;, &amp;#34;s3:CreateBucket&amp;#34;, &amp;#34;s3:DeleteBucket&amp;#34;, &amp;#34;s3:DeleteBucketPolicy&amp;#34;, &amp;#34;s3:DeleteObject&amp;#34;, &amp;#34;s3:DeleteObjectVersion&amp;#34;, &amp;#34;s3:GetObject&amp;#34;, &amp;#34;s3:GetObjectVersion&amp;#34;, &amp;#34;s3:ListAllMyBuckets&amp;#34;, &amp;#34;s3:ListBucket&amp;#34;, &amp;#34;s3:PutBucketNotification&amp;#34;, &amp;#34;s3:PutBucketPolicy&amp;#34;, &amp;#34;s3:PutBucketTagging&amp;#34;, &amp;#34;s3:PutBucketWebsite&amp;#34;, &amp;#34;s3:PutEncryptionConfiguration&amp;#34;, &amp;#34;s3:PutObject&amp;#34;, &amp;#34;sns:CreateTopic&amp;#34;, &amp;#34;sns:DeleteTopic&amp;#34;, &amp;#34;sns:GetSubscriptionAttributes&amp;#34;, &amp;#34;sns:GetTopicAttributes&amp;#34;, &amp;#34;sns:ListSubscriptions&amp;#34;, &amp;#34;sns:ListSubscriptionsByTopic&amp;#34;, &amp;#34;sns:ListTopics&amp;#34;, &amp;#34;sns:SetSubscriptionAttributes&amp;#34;, &amp;#34;sns:SetTopicAttributes&amp;#34;, &amp;#34;sns:Subscribe&amp;#34;, &amp;#34;sns:Unsubscribe&amp;#34;, &amp;#34;states:CreateStateMachine&amp;#34;, &amp;#34;states:DeleteStateMachine&amp;#34; ], &amp;#34;Effect&amp;#34;: &amp;#34;Allow&amp;#34;, &amp;#34;Resource&amp;#34;: &amp;#34;*&amp;#34; } ], &amp;#34;Version&amp;#34;: &amp;#34;2012-10-17&amp;#34; } Create user copy the API Key &amp;amp; Secret</description></item><item><title>cognito-token-observer</title><link>https://romankurnovskii.com/en/apps/npm/cognito-token-observer/</link><pubDate>Sun, 28 Aug 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/apps/npm/cognito-token-observer/</guid><description/></item><item><title>hugo-lunr-ml</title><link>https://romankurnovskii.com/en/apps/npm/hugo-lunr-ml/</link><pubDate>Fri, 22 Jul 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/apps/npm/hugo-lunr-ml/</guid><description/></item><item><title>Add search to Hugo multilingual static site with Lunr</title><link>https://romankurnovskii.com/en/posts/hugo-add-search-lunr-popup/</link><pubDate>Sat, 16 Jul 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/posts/hugo-add-search-lunr-popup/</guid><description>Initial I had the need to implement search functionality on my site. Content on is in different languages.
The goal is to impelemnt search for all pages and separate search results for each and every language.
How it works Hugo generates the search index. In this case it means that we get json file with every static page on the site.
To make search works we need to create index. lunr.js takes care of it.
Client send query -&amp;gt; our script &amp;ldquo;tries to find&amp;rdquo; in the index</description></item><item><title>Hugo resize a picture on click</title><link>https://romankurnovskii.com/en/posts/hugo-add-image-zoomin/</link><pubDate>Sat, 09 Jul 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/posts/hugo-add-image-zoomin/</guid><description>Introduction Hugo by default uses parsing of markdown files. This means that we get the html code as it is written in markdown.
In order to understand which images we can enhance, we add a separate tag/key/id to those images
Tools To implement the functionality, we need to:
Write/connect a script/handler that will perform the zoomin effect on the images we need Add the necessary metadata to the images, so the script can find them zoomin script To add the ability to zoom on click, we will use the medium-zoom package.</description></item><item><title>Automating Code Reviews with Amazon CodeGuru</title><link>https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/codeguru/automating-code-reviews-amazon-codeguru/</link><pubDate>Wed, 06 Jul 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/codeguru/automating-code-reviews-amazon-codeguru/</guid><description>Lab Automating Code Reviews with Amazon CodeGuru Associating Amazon CodeGuru with a CodeCommit Repository 1. Navigate to the Amazon CodeCommit console.
2. Click java-web-app:
3. Notice that at the moment, only a README file has been committed to the master branch. Next, you&amp;rsquo;ll associate CodeGuru with this repository, so that CodeGuru can begin to analyze the code therein.
4. Go to the CodeGuru dashboard.
5. Click Associate Repository and run analysis:
6. Select AWS CodeCommit as the provider, choose java-web-app from the repository dropdown, enter _master_into Source branch and click Associate:</description></item><item><title>Build A Log Aggregation System in AWS</title><link>https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/opensearch-service/build-log-aggregation-system/</link><pubDate>Wed, 06 Jul 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/opensearch-service/build-log-aggregation-system/</guid><description>Lab Monitor Like a DevOps Pro: Build A Log Aggregation System in AWS Navigating to Your Cloud&amp;rsquo;s Lambda Function 1. In the AWS Management Console search bar, enter Cloud Formation, and click the CloudFormation result under Services:
This will bring you to the CloudFormation Stacks table.
There will be one stack named cloudacademylabs in the table with a Status of CREATE_COMPLETE.
Note: If the stack hasn&amp;rsquo;t reached the Statusof CREATE_COMPLETE, try refreshing the page after a minute. It only takes a minute for the stack to fully create.</description></item><item><title>Create Classic Load Balancer</title><link>https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/elasticloadbalancing/create-amazon-load-balancing/</link><pubDate>Wed, 06 Jul 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/elasticloadbalancing/create-amazon-load-balancing/</guid><description>Practice Creating Classic Load Balancer Planning the Classic Load Balancer When you connected to the AWS account provided in the former step, you had a few things that were already deployed. This is the current infrastructure that was already deployed for you:
You already have a VPC with some subnets and 2 EC2 instances running inside the VPC in different Availability Zones. Both instances are inside the same Security Group called , which is allowing HTTP access from port 80 to anywhere (0.</description></item><item><title>Develop and Deploy an Application with AWS CodeStar</title><link>https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/codestar/develop-and-deploy-app-with-codestar/</link><pubDate>Wed, 06 Jul 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/codestar/develop-and-deploy-app-with-codestar/</guid><description>Lab Develop and Deploy an Application with AWS CodeStar Creating an AWS CodeStar Project 1. In the AWS Management Console search bar, enter CodeStar, and click the CodeStar result under Services:
2. On the welcome page, click Create project.
Take a moment to see all of the different templates available in AWS CodeStar.
3. Check the following boxes on the left filter bar to narrow down the listed templates:
AWS services: EC2 Application category: Web application Programming languages: Node.</description></item><item><title>Encrypting S3 Objects Using SSE-KMS</title><link>https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/kms/encrypting-s3-objects-using-sse-kms/</link><pubDate>Wed, 06 Jul 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/kms/encrypting-s3-objects-using-sse-kms/</guid><description>Lab Encrypting S3 Objects Using SSE-KMS Creating a Customer Master Key (CMK) 1. In the AWS Management Console search bar, enter KMS, and click the KMS result under Services:
2. Select Customer managed** keys** in the left pane of the KMS console.
Warning: Cloud Academy cleans up the lab environment for you after a lab is completed or terminated. As a precaution, AWS prevents keys from being deleted immediately. Rather, they are queued for deletion, and an expiration period is set (of 7-30 days).</description></item><item><title>Fan-Out Orders using Amazon SNS and SQS</title><link>https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/sqs/fan-out-orders-with-sns-sqs/</link><pubDate>Wed, 06 Jul 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/sqs/fan-out-orders-with-sns-sqs/</guid><description>Lab Fan-Out Orders using Amazon SNS and SQS Creating an Amazon SNS Topic and Amazon SQS Queues Here&amp;rsquo;s a diagram of what you will build and configure in this lab step:
In the search bar at the top, enter SNS and under Services, click the Simple Notification Service result: In the Create topic card on the right, in the Topic name textbox, enter new-orders and click Next step: The Create topic form will load.
By default, the Type of topic selected will be Standard.</description></item><item><title>Initializing Amazon EC2 Instances with AWS CloudFormation Init</title><link>https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/cloudformation/initializing-ec2-with-cloudformation/</link><pubDate>Wed, 06 Jul 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/cloudformation/initializing-ec2-with-cloudformation/</guid><description>Lab Initializing Amazon EC2 Instances with AWS CloudFormation Init Establishing Desired EC2 Instance State with AWS CloudFormation Init 1. In the AWS Console search bar, search for cloudformation and click the CloudFormation result under Services:
2. Click the Create stack dropdown menu and select With new resources:
3. In the Create stack form, in the Specify template section, ensure Amazon S3 URLis selected for the Template source.
4. Paste in the following URL in the Amazon S3 URL field:</description></item><item><title>Introduction to CloudWatch</title><link>https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/cloudwatch/introduction-to-cloudwatch/</link><pubDate>Wed, 06 Jul 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/cloudwatch/introduction-to-cloudwatch/</guid><description>Lab Introduction to CloudWatch Explore CloudWatch 1. AWS has done an excellent job defining CloudWatch key concepts. Read the abbreviated excerpt from their official documentation below to obtain an understanding of Metrics, Namespaces and Alarms:
Metrics
A metric is the fundamental concept in CloudWatch and represents a time-ordered set of data points. These data points can be either your custom metrics or metrics from other services in AWS. You or AWS products publish metric data points into CloudWatch and you retrieve statistics about those data points as an ordered set of time-series data.</description></item><item><title>Introduction to CodeCommit</title><link>https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/codecommit/introduction-codecommit/</link><pubDate>Wed, 06 Jul 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/codecommit/introduction-codecommit/</guid><description>Lab https://cloudacademy.com/lab/introduction-codecommit/
Create a repository 1. In the AWS Management Console search bar, enter CodeCommit, and click the CodeCommit result under Services:
2. Click Create repository:
3. In the Create repository form enter the following values accepting the defaults for values not specified:
Repository name: lab-repository You can leave the Description field empty for this lab. Usually this field would contain a short description of the purpose of the repository. Attaching meaningful descriptions to repositories makes managing large numbers of repositories easier.</description></item><item><title>Process Amazon SNS Notifications with AWS Lambda</title><link>https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/sns/aws-lambda-sns-notifications/</link><pubDate>Wed, 06 Jul 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/sns/aws-lambda-sns-notifications/</guid><description>Lab Process Amazon SNS Notifications with AWS Lambda Creating an Amazon SNS Topic 1. In the AWS Management Console search bar, enter SNS, and click the Simple Notification Service result under Services:
In the left-hand side menu, click Topics: If you can&amp;rsquo;t see the left-hand menu, to expand it, click the following:
Click Create topic: In the Create topic form, ensure to have selected the Standard type, and enter the following values accepting the defaults for values not specified: Name: lab-topic You can leave the Display name field empty for this Lab.</description></item><item><title>Sessionizing Clickstream Data with Amazon Kinesis Data Analytics</title><link>https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/kinesis/sessionizing-clickstream-data-kinesis-data-analytics/</link><pubDate>Wed, 06 Jul 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/kinesis/sessionizing-clickstream-data-kinesis-data-analytics/</guid><description>Lab Sessionizing Clickstream Data with Amazon Kinesis Data Analytics Creating an Amazon Kinesis Data Analytics Application 1. In the AWS Management Console search bar, enter Kinesis, and click the Kinesis result under Services:
You will be taken to the Amazon Kinesis dashboard.
In this lab, a Kinesis Data Stream has been pre-created for you. Under Data Streams you will see Total data streams is one:
2. In the left-hand menu, click Analytics applications and under that click SQL applications:</description></item><item><title>Israel - Haifa - Bahai Gardens</title><link>https://romankurnovskii.com/en/photos/22-07-02-israel-haifa-bahai-gardens/</link><pubDate>Sat, 02 Jul 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/photos/22-07-02-israel-haifa-bahai-gardens/</guid><description>Google maps Route</description></item><item><title>Introduction to DynamoDB</title><link>https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/dynamodb/introduction-dynamodb/</link><pubDate>Fri, 01 Jul 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/dynamodb/introduction-dynamodb/</guid><description>Lab
Creating a DynamoDB Table with a Partition Key 1. From the AWS Management Console, in the search bar at the top, enter DynamoDB, and under Services, click the DynamoDB result:
The Amazon DynamoDB product overview page will load.
2. To start creating a new DyanmoDB table, on the right-hand side, click Create table:
3. In the Table details section, enter the following:
Table Name: Partition Key: Enter Name and ensure type is 4. In the Settings section, select Customize settings:</description></item><item><title>Python Cheat Sheet</title><link>https://romankurnovskii.com/en/posts/python-snippets/</link><pubDate>Tue, 21 Jun 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/posts/python-snippets/</guid><description>def sum_of_digits(n): sum = 0 while n: sum += n % 10 n //= 10 return sum # Single line comments start with a number symbol. &amp;#34;&amp;#34;&amp;#34; Multiline strings can be written using three &amp;#34;s, and are often used as documentation. &amp;#34;&amp;#34;&amp;#34; #################################################### ## 1. Primitive Datatypes and Operators #################################################### # You have numbers 3 # =&amp;gt; 3 # Math is what you would expect 1 + 1 # =&amp;gt; 2 8 - 1 # =&amp;gt; 7 10 * 2 # =&amp;gt; 20 35 / 5 # =&amp;gt; 7.</description></item><item><title>How to Download and Install Linux RHEL 9 for Free</title><link>https://romankurnovskii.com/en/posts/howto-install-rhel-9-free/</link><pubDate>Fri, 17 Jun 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/posts/howto-install-rhel-9-free/</guid><description>Red Hat Enterprise Linux 9 (RHEL 9), codenamed Plow, has gone public (GA). Red Hat announced it on May 18, 2022. It replaced the beta version, which had been in existence since November 3, 2021.
RHEL 9 is the first few releases in the Red Hat family. It is the first major release since IBM acquired Red Hat in July 2019, and the first major release since abandoning the CentOS project in favor of CentOS Stream, which is now RHEL&amp;rsquo;s predecessor.</description></item><item><title>Top Docker Commands</title><link>https://romankurnovskii.com/en/posts/docker-commands/</link><pubDate>Tue, 07 Jun 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/posts/docker-commands/</guid><description>most popular docker images ## lists the images docker pull imagename ## Pull an image or a repository from a registry docker ps -a ## See a list of all containers, even the ones not running docker build -t imagename . ## Create image using this directory's Dockerfile docker run -p 4000:80 imagename ## Run &amp;quot;imagename&amp;quot; mapping port 4000 to 80 docker rmi ## removes the image docker rm ## removes the container docker stop ## stops the container docker volume ls ## lists the volumes docker kill ## kills the container docker logs ## see logs docker inspect ## shows all the info of a container docker docker cp ## Copy files/folders between a container and the local filesystem docker pull imagename ## Pull an image or a repository from a registry docker build -t imagename .</description></item><item><title>Tar command Cheat Sheet</title><link>https://romankurnovskii.com/en/posts/cheat-sheet-command-tar/</link><pubDate>Sun, 05 Jun 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/posts/cheat-sheet-command-tar/</guid><description>Common options z compress with gzip c create an archive u append files which are newer than the corresponding copy ibn the archive f filename of the archive v verbose, display what is inflated or deflated a unlike of z, determine compression based on file extension Create tar named archive.tar containing directory tar cf archive.tar /path/files Concatenate files into a single tar tar -cf archive.tar /path/files Extract the contents from archive.tar tar xf archive.tar Create a gzip compressed tar file name archive.</description></item><item><title>How to rename files in Python</title><link>https://romankurnovskii.com/en/posts/howto-rename-files-in-python/</link><pubDate>Sat, 04 Jun 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/posts/howto-rename-files-in-python/</guid><description>Learn different ways to rename files in Python using the os and pathlib modules.
os.rename Rename files with os
You can use
os.rename(old_name, new_name) For example we can combine it with os.path.splitext() to get the base name and file extension, and then combine it to a new name:
import os for file in os.listdir(): name, ext = os.path.splitext(file) new_name = f&amp;#34;{name}_new{ext}&amp;#34; os.rename(file, new_name) pathlib Rename files with pathlib
The same could be achieved with the pathlib module and</description></item><item><title>How to create a deep clone of an object in JavaScript</title><link>https://romankurnovskii.com/en/posts/howto-create-deepclone-js/</link><pubDate>Thu, 02 Jun 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/posts/howto-create-deepclone-js/</guid><description>We can use recursion. Use Object.assign() and an empty object ({}) to create a shallow clone of the original. Use Object.keys() and Array.prototype.forEach() to determine which key-value pairs need to be deep cloned.
const deepClone = obj =&amp;gt; { let clone = Object.assign({}, obj); Object.keys(clone).forEach( key =&amp;gt; (clone[key] = typeof obj[key] === &amp;#39;object&amp;#39; ? deepClone(obj[key]) : obj[key]) ); return Array.isArray(obj) &amp;amp;&amp;amp; obj.length ? (clone.length = obj.length) &amp;amp;&amp;amp; Array.from(clone) : Array.isArray(obj) ? Array.from(obj) : clone; }; const a = { foo: &amp;#39;bar&amp;#39;, obj: { a: 1, b: 2 } }; const b = deepClone(a); // a !</description></item><item><title>Mac Setup 2022</title><link>https://romankurnovskii.com/en/posts/mac-setup-development/</link><pubDate>Wed, 18 May 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/posts/mac-setup-development/</guid><description>MacBook Pro Specification 13-inch Apple M1 Pro M1 2020 16 GB RAM 512 GB SSD QWERTY = English/Hebrew macOS Monterey (Update always) Homebrew Install Homebrew as package manager for macOS:
## paste in terminal and follow the instructions /bin/bash -c &amp;#34;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)&amp;#34; Update everything in Homebrew to recent version:
brew update Add additional source for casks:
brew tap homebrew/cask-versions Install GUI applications (read more about these in GUI Applications):
brew install --cask \ appcleaner \ dbeaver-community \ deepl \ disk-inventory-x \ google-chrome \ google-drive \ grammarly \ itsycal \ firefox \ visual-studio-code \ all-in-one-messenger \ sublime-text \ docker \ rectangle \ discord \ vlc \ figma \ grammarly \ macx-youtube-downloader \ notion \ postman \ tor-browser \ transmission \ utm \ mongodb-compass \ obs \ spotify \ iterm2 \ rectangle \ sublime-text \ syncthing \ viber \ visual-studio-code \ yandex-disk \ zoom Install terminal applications (read more about these in Terminal Applications):</description></item><item><title>Markdown Cheat Sheet</title><link>https://romankurnovskii.com/en/posts/markdown-syntax/</link><pubDate>Thu, 21 Apr 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/posts/markdown-syntax/</guid><description>&lt;p>This article offers an example of the basic Markdown syntax that can be used and also shows whether the basic elements of HTML are decorated with CSS.&lt;/p></description></item><item><title>Some code snippets</title><link>https://romankurnovskii.com/en/posts/other-snippets/</link><pubDate>Mon, 22 Feb 2021 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/posts/other-snippets/</guid><description>pandoc mardown -&amp;gt; pdf
Create pdf file from .md in multiple folders
prepare:
brew install basictex # search for cyrillic fonts fc-list | grep к\ brew tap homebrew/cask-fonts brew install --cask font-m-plus brew tap homebrew/cask-fonts brew install --cask font-m-plus brew install --cask font-m-plus-1 brew install --cask font-m-plus-1-code ```sh pandoc --pdf-engine xelatex \ --variable mainfont=&amp;#34;M+ 1p&amp;#34; --variable sansfont=&amp;#34;M+ 1p&amp;#34; --variable monofont=&amp;#34;M+ 1m&amp;#34; \ -V geometry:&amp;#34;top=1cm, bottom=2cm, left=1cm, right=1cm&amp;#34; \ --file-scope \ --highlight-style=tango \ -s \ --toc-depth=1 \ --variable=toc-title:&amp;#34; &amp;#34; \ --top-level-division=chapter \ --standalone \ --self-contained \ --from=markdown \ $(find .</description></item><item><title>IT courses 2020</title><link>https://romankurnovskii.com/en/posts/diploma/</link><pubDate>Fri, 01 Jan 2021 15:31:25 +0200</pubDate><guid>https://romankurnovskii.com/en/posts/diploma/</guid><description>&lt;p>Interim metrics still in process&lt;/p>
&lt;p>For 2020:&lt;/p>
&lt;ul>
&lt;li>Time spent studying/practicing: ~5500 hours&lt;/li>
&lt;/ul></description></item><item><title/><link>https://romankurnovskii.com/en/tracks/90daysofdevops/monitoring/elastic-stack/extensions/apm-server/readme/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/90daysofdevops/monitoring/elastic-stack/extensions/apm-server/readme/</guid><description>APM Server extension The APM Server receives data from APM agents and transforms them into Elasticsearch documents that can be visualised in Kibana.
Usage To include APM Server in the stack, run Docker Compose from the root of the repository with an additional command line argument referencing the apm-server-compose.yml file:
docker-compose -f docker-compose.yml -f extensions/apm-server/apm-server-compose.yml up Meanwhile, you can navigate to the APM application in Kibana and follow the setup instructions to get started.
Connecting an agent to APM Server The most basic configuration to send traces to APM server is to specify the SERVICE_NAME and SERVICE_URL.</description></item><item><title/><link>https://romankurnovskii.com/en/tracks/90daysofdevops/monitoring/elastic-stack/extensions/curator/readme/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/90daysofdevops/monitoring/elastic-stack/extensions/curator/readme/</guid><description>Curator Elasticsearch Curator helps you curate or manage your indices.
Usage If you want to include the Curator extension, run Docker Compose from the root of the repository with an additional command line argument referencing the curator-compose.yml file:
docker-compose -f docker-compose.yml -f extensions/curator/curator-compose.yml up This sample setup demonstrates how to run curator every minute using cron.
All configuration files are available in the config/ directory.
Documentation Curator Reference</description></item><item><title/><link>https://romankurnovskii.com/en/tracks/90daysofdevops/monitoring/elastic-stack/extensions/enterprise-search/readme/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/90daysofdevops/monitoring/elastic-stack/extensions/enterprise-search/readme/</guid><description>Enterprise Search extension Elastic Enterprise Search is a suite of products for search applications backed by the Elastic Stack.
Requirements 2 GB of free RAM, on top of the resources required by the other stack components and extensions. Enterprise Search exposes the TCP port 3002 for its Web UI and API.
Usage Generate an encryption key Enterprise Search requires one or more encryption keys to be configured before the initial startup. Failing to do so prevents the server from starting.</description></item><item><title/><link>https://romankurnovskii.com/en/tracks/90daysofdevops/monitoring/elastic-stack/extensions/filebeat/readme/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/90daysofdevops/monitoring/elastic-stack/extensions/filebeat/readme/</guid><description>Filebeat Filebeat is a lightweight shipper for forwarding and centralizing log data. Installed as an agent on your servers, Filebeat monitors the log files or locations that you specify, collects log events, and forwards them either to Elasticsearch or Logstash for indexing.
Usage To include Filebeat in the stack, run Docker Compose from the root of the repository with an additional command line argument referencing the filebeat-compose.yml file:
docker-compose -f docker-compose.yml -f extensions/filebeat/filebeat-compose.yml up Configuring Filebeat The Filebeat configuration is stored in config/filebeat.</description></item><item><title/><link>https://romankurnovskii.com/en/tracks/90daysofdevops/monitoring/elastic-stack/extensions/logspout/readme/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/90daysofdevops/monitoring/elastic-stack/extensions/logspout/readme/</guid><description>Logspout extension Logspout collects all Docker logs using the Docker logs API, and forwards them to Logstash without any additional configuration.
Usage If you want to include the Logspout extension, run Docker Compose from the root of the repository with an additional command line argument referencing the logspout-compose.yml file:
docker-compose -f docker-compose.yml -f extensions/logspout/logspout-compose.yml up In your Logstash pipeline configuration, enable the udp input and set the input codec to json:
input { udp { port =&amp;gt; 5000 codec =&amp;gt; json } } Documentation https://github.</description></item><item><title/><link>https://romankurnovskii.com/en/tracks/90daysofdevops/monitoring/elastic-stack/extensions/metricbeat/readme/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/90daysofdevops/monitoring/elastic-stack/extensions/metricbeat/readme/</guid><description>Metricbeat Metricbeat is a lightweight shipper that you can install on your servers to periodically collect metrics from the operating system and from services running on the server. Metricbeat takes the metrics and statistics that it collects and ships them to the output that you specify, such as Elasticsearch or Logstash.
Usage To include Metricbeat in the stack, run Docker Compose from the root of the repository with an additional command line argument referencing the metricbeat-compose.yml file:
docker-compose -f docker-compose.</description></item><item><title/><link>https://romankurnovskii.com/en/tracks/90daysofdevops/monitoring/elastic-stack/extensions/readme/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/90daysofdevops/monitoring/elastic-stack/extensions/readme/</guid><description>Extensions Third-party extensions that enable extra integrations with the Elastic stack.</description></item><item><title>AWS Amplify - project setup with Github</title><link>https://romankurnovskii.com/en/posts/cloud-exam-quizz/amplify-setup-project/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/posts/cloud-exam-quizz/amplify-setup-project/</guid><description>Preface For Amplify project I use eu-west region github repo has to be ready private or public New project goto https://eu-west-1.console.aws.amazon.com/amplify/home?region=eu-west-1#/
New app → Host web app → Github
Add access to github repo Select repository Come back to Amplify and try again to choose repo Click Next
Update amplify.yml for node.js project
version: 1 frontend: phases: preBuild: commands: - yarn install build: commands: - yarn run build artifacts: baseDirectory: build files: - &amp;#39;**/*&amp;#39; cache: paths: - node_modules/**/* Next → Save and deploy Amplify starts to build project and generates project url.</description></item><item><title>AWS Amplify - Set custom domain</title><link>https://romankurnovskii.com/en/posts/cloud-exam-quizz/amplify-custom-domain/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/posts/cloud-exam-quizz/amplify-custom-domain/</guid><description>You can use any custom domain with Amplify and no need register it with AWS Route53.
I am adding domain at the setup app stage. Another way is from console.
Click Domain management. or
Add domain Write domain name -&amp;gt; Configure domain -&amp;gt; Save Nest starts SSL configuration process. Amplify provides with DNS data that you need to write in the domain register account. Once SSL creation starts you can get domain data
Action -&amp;gt; View DNS records</description></item><item><title>Docs</title><link>https://romankurnovskii.com/en/tracks/archive/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/archive/</guid><description>This page contains an archive of all posts.</description></item><item><title>Posts Archive</title><link>https://romankurnovskii.com/en/posts/archive/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/posts/archive/</guid><description>This page contains an archive of all posts.</description></item></channel></rss>