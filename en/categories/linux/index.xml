<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Linux on Roman Kurnovskii</title><link>https://romankurnovskii.com/en/categories/linux/</link><description>Recent content in Linux on Roman Kurnovskii</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>&amp;copy; 2025</copyright><lastBuildDate>Mon, 24 Feb 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://romankurnovskii.com/en/categories/linux/index.xml" rel="self" type="application/rss+xml"/><item><title>EC2 Initial Setup and SSH Connection</title><link>https://romankurnovskii.com/en/posts/linux/ec2-initial-setup/</link><pubDate>Mon, 24 Feb 2025 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/posts/linux/ec2-initial-setup/</guid><description>&lt;h2 id="step-1-launch-an-ec2-instance">Step 1: Launch an EC2 Instance&lt;/h2>
&lt;ol>
&lt;li>&lt;strong>Go to the AWS Console&lt;/strong> → Navigate to &lt;strong>EC2&lt;/strong>.&lt;/li>
&lt;li>Click &lt;strong>Launch Instance&lt;/strong>.&lt;/li>
&lt;li>Choose an &lt;strong>AMI&lt;/strong> (e.g., Amazon Linux, Ubuntu).&lt;/li>
&lt;li>Select an &lt;strong>instance type&lt;/strong> (e.g., &lt;code>t2.micro&lt;/code> for free tier).&lt;/li>
&lt;li>Configure &lt;strong>instance details&lt;/strong> (default settings are fine).&lt;/li>
&lt;li>Add &lt;strong>storage&lt;/strong> (default 8GB is sufficient, adjust as needed).&lt;/li>
&lt;li>Configure &lt;strong>security groups&lt;/strong>:
&lt;ul>
&lt;li>Allow &lt;strong>SSH (port 22)&lt;/strong> from &lt;code>My IP&lt;/code> (recommended).&lt;/li>
&lt;li>Add rules for other services (e.g., HTTP, HTTPS) if needed.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Choose or &lt;strong>create a key pair&lt;/strong> (important for SSH access).
&lt;img src="select-pem.en.png" width="50%" id="zoom-default" class="medium-zoom-image" loading="lazy">&lt;/li>
&lt;li>Click &lt;strong>Launch&lt;/strong>.
&lt;img src="launch.en.png" width="50%" id="zoom-default" class="medium-zoom-image" loading="lazy">&lt;/li>
&lt;/ol>
&lt;h2 id="step-2-connect-to-ec2-via-ssh">Step 2: Connect to EC2 via SSH&lt;/h2>
&lt;h3 id="using-a-pem-key-linuxmacos">Using a &lt;code>.pem&lt;/code> Key (Linux/macOS)&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>Move the key to a secure location:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>mv ~/Downloads/my-key.pem ~/.ssh/
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>Set permissions:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>chmod &lt;span style="color:#40a070">400&lt;/span> ~/.ssh/my-key.pem
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>Connect:
&lt;img src="public-ip.en.png" width="30%" id="zoom-default" class="medium-zoom-image" loading="lazy">&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>ssh -i ~/.ssh/my-key.pem admin@your-ec2-public-ip
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># ssh -i ~/.ssh/my-key.pem admin@52.31.239.202&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>Replace &lt;code>ec2-user/admin&lt;/code> with &lt;code>ubuntu&lt;/code> for Ubuntu AMIs.&lt;/li>
&lt;li>Replace your-ec2-public-ip with the instance’s public IP.&lt;/li>
&lt;/ul>
&lt;h3 id="using-putty-windows">Using PuTTY (Windows)&lt;/h3>
&lt;ol>
&lt;li>Convert .pem to .ppk using PuTTYgen.&lt;/li>
&lt;li>Open PuTTY.&lt;/li>
&lt;li>Under Session, enter your-ec2-public-ip in Host Name.&lt;/li>
&lt;li>Go to SSH → Auth, load the .ppk file.&lt;/li>
&lt;li>Click Open.&lt;/li>
&lt;/ol>
&lt;h2 id="step-3-configure-automatic-ssh-login">Step 3: Configure Automatic SSH Login&lt;/h2>
&lt;h3 id="method-1-add-key-to-ssh-agent-recommended">Method 1: Add Key to SSH Agent (Recommended)&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>Start the SSH agent (if required):&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020">eval&lt;/span> &lt;span style="color:#4070a0">&amp;#34;&lt;/span>&lt;span style="color:#007020;font-weight:bold">$(&lt;/span>ssh-agent -s&lt;span style="color:#007020;font-weight:bold">)&lt;/span>&lt;span style="color:#4070a0">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>Add the key:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>ssh-add ~/.ssh/my-key.pem
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>Now, connect with:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>ssh admin@your-ec2-public-ip
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol>
&lt;h3 id="method-2-add-key-to-ssh-config-file">Method 2: Add Key to SSH Config File&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>Open (or create) the SSH config file:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>nano ~/.ssh/config
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>Add the following:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-ini" data-lang="ini">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4070a0">Host my-ec2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4070a0">HostName your-ec2-public-ip&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4070a0">User ec2-user&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4070a0">IdentityFile ~/.ssh/my-key.pem&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>Save and exit (&lt;code>CTRL+X&lt;/code>, then &lt;code>Y&lt;/code>, then &lt;code>ENTER&lt;/code>).&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Now, connect easily with:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>ssh my-ec2
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol>
&lt;h2 id="connected">Connected&lt;/h2>
&lt;p>Once connected:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="../debian-vps-initial-setup/">Debian initial Setup&lt;/a>&lt;/li>
&lt;li>&lt;a href="../ubuntu-server-initial-setup/">Ubuntu initial Setup&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Set Up Your First VPS on Debian</title><link>https://romankurnovskii.com/en/posts/linux/debian-vps-initial-setup/</link><pubDate>Thu, 21 Nov 2024 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/posts/linux/debian-vps-initial-setup/</guid><description>&lt;h1 id="setting-up-your-first-vps-secure-configuration-guide">Setting Up Your First VPS: Secure Configuration Guide&lt;/h1>
&lt;p>When setting up a new VPS, securing access is critical to prevent unauthorized usage.&lt;/p>
&lt;p>In this guide, you&amp;rsquo;ll:&lt;/p>
&lt;ul>
&lt;li>create a new user&lt;/li>
&lt;li>disable SSH root access&lt;/li>
&lt;li>configure SSH key-based authentication for added security.&lt;/li>
&lt;/ul>
&lt;h2 id="update-and-upgrade-packages">Update and Upgrade Packages&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>apt update
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>apt upgrade -y
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="step-1-initial-login-as-root">Step 1: Initial Login as Root&lt;/h2>
&lt;p>By default, VPS providers often grant root access. Start by logging in using the provided credentials:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>ssh root@&amp;lt;your-server-ip&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="step-2-create-a-new-user">Step 2: Create a New User&lt;/h2>
&lt;p>Replace &lt;username> with your preferred username:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>useradd -m -s /bin/bash -G sudo &amp;lt;username&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>In case of delete the User:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>userdel -r &amp;lt;username&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>-r&lt;/code>: Removes the user&amp;rsquo;s home directory.&lt;/p>
&lt;h2 id="step-3-configure-ssh-key-based-authentication">Step 3: Configure SSH Key-Based Authentication&lt;/h2>
&lt;h3 id="31-generate-an-ssh-key-pair-local-machine">3.1. Generate an SSH Key Pair (Local Machine)&lt;/h3>
&lt;p>On your local machine (not the VPS), check if you already have an SSH key:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>ls ~/.ssh
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Look for files like &lt;code>id_rsa&lt;/code> and &lt;code>id_rsa.pub&lt;/code>. If these files exist, you already have an SSH key. Skip to &lt;strong>3.2&lt;/strong> to retrieve your public key.&lt;/p>
&lt;p>If no SSH key exists, generate one with the following command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>ssh-keygen -t rsa -b &lt;span style="color:#40a070">4096&lt;/span> -C &lt;span style="color:#4070a0">&amp;#34;your_email@example.com&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>&lt;code>-t rsa&lt;/code>: Specifies the RSA algorithm.&lt;/li>
&lt;li>&lt;code>-b 4096&lt;/code>: Sets the key size to 4096 bits (more secure).&lt;/li>
&lt;li>&lt;code>-C &amp;quot;your_email@example.com&amp;quot;&lt;/code>: Adds a comment to identify the key.&lt;/li>
&lt;/ul>
&lt;p>Follow the prompts:&lt;/p>
&lt;ul>
&lt;li>Press Enter to save the key in the default location (&lt;code>~/.ssh/id_rsa&lt;/code>).&lt;/li>
&lt;li>Optionally, set a passphrase for additional security.&lt;/li>
&lt;/ul>
&lt;h3 id="32-retrieve-your-public-key">3.2. Retrieve Your Public Key&lt;/h3>
&lt;p>Your public key is stored in the file &lt;code>~/.ssh/id_rsa.pub&lt;/code>. To display it, run:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>cat ~/.ssh/id_rsa.pub
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>You’ll see a string that starts with ssh-rsa:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>ssh-rsa AAAAB3Nza...your-key... your_email@example.com
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Copy this entire string to your clipboard.&lt;/p>
&lt;h3 id="33-add-your-public-key-to-the-vps">3.3. Add Your Public Key to the VPS&lt;/h3>
&lt;p>Log in to your VPS as &lt;username>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>su - &amp;lt;username&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Create the &lt;code>.ssh&lt;/code> directory in the home folder:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>mkdir -p ~/.ssh
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>chmod &lt;span style="color:#40a070">700&lt;/span> ~/.ssh
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Open the authorized_keys file:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>vi ~/.ssh/authorized_keys
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Paste your public key into the file and save it.&lt;/p>
&lt;p>Set the appropriate permissions:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>chmod &lt;span style="color:#40a070">600&lt;/span> ~/.ssh/authorized_keys
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="34-test-ssh-key-authentication">3.4. Test SSH Key Authentication&lt;/h3>
&lt;p>On your local machine, test the connection to your VPS using the myuser account:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>ssh &amp;lt;username&amp;gt;@&amp;lt;your-server-ip&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># if using port:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ssh -p &amp;lt;port&amp;gt; &amp;lt;username&amp;gt;@&amp;lt;your-server-ip&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>If the setup is correct, you’ll log in without being prompted for a password.&lt;/p>
&lt;h2 id="step-4-disable-root-ssh-login">Step 4: Disable Root SSH Login&lt;/h2>
&lt;p>Edit the SSH Configuration File&lt;/p>
&lt;p>Open the SSH daemon configuration file:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo vi /etc/ssh/sshd_config
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Update the Following Settings&lt;/p>
&lt;p>Disable root login:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>PermitRootLogin no
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Disable password authentication:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>PasswordAuthentication no
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Save and Exit the file, then restart the SSH service:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo systemctl restart sshd
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="step-5-final-security-check">Step 5: Final Security Check&lt;/h2>
&lt;p>Test New Configuration&lt;/p>
&lt;p>Open a new terminal and verify that:&lt;/p>
&lt;ul>
&lt;li>You can log in with the new user.&lt;/li>
&lt;li>Root login is disabled.&lt;/li>
&lt;li>Password-based login is disabled.&lt;/li>
&lt;li>Firewall Setup (Optional)&lt;/li>
&lt;/ul>
&lt;p>Enable the firewall and allow only SSH traffic:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>ufw allow OpenSSH
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ufw &lt;span style="color:#007020">enable&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="step-6-backup-and-monitor">Step 6: Backup and Monitor&lt;/h2>
&lt;p>Backup Your SSH Keys Ensure your private key is securely stored on your local machine.&lt;/p>
&lt;p>Monitor Login Attempts Check login activity using:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>cat /var/log/auth.log
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Initial Setup Guide for Ubuntu 22.04 on a VPS</title><link>https://romankurnovskii.com/en/posts/linux/ubuntu-server-initial-setup/</link><pubDate>Thu, 02 May 2024 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/posts/linux/ubuntu-server-initial-setup/</guid><description>&lt;h2 id="update-and-upgrade-packages">Update and Upgrade Packages&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>apt update
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>apt upgrade -y
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="setting-up-ssh-keys">Setting Up SSH Keys&lt;/h2>
&lt;p>Using SSH keys instead of passwords enhances security.&lt;/p>
&lt;p>On &lt;strong>local machine&lt;/strong>, generate an SSH key pair (if you don&amp;rsquo;t already have one):&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>ssh-keygen -t ed25519 -C &lt;span style="color:#4070a0">&amp;#34;your_email@example.com&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Next, copy your public SSH key to the new user&amp;rsquo;s account on your server. You can do this from your local machine:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>ssh-copy-id username@your_server_ip
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># or with provided port&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ssh-copy-id -p &lt;span style="color:#40a070">1234&lt;/span> username@your_server_ip
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This command uploads your public SSH key and configures the server to recognize it.&lt;/p>
&lt;h2 id="disabling-password-authentication">Disabling Password Authentication&lt;/h2>
&lt;p>To prevent SSH login using a username and password, edit the SSH configuration file:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>sudo nano /etc/ssh/sshd_config
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Find the following lines and modify them as shown:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-plaintext" data-lang="plaintext">&lt;span style="display:flex;">&lt;span>PasswordAuthentication no
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>UsePAM no
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>After making these changes, restart the SSH service to apply them:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo systemctl restart sshd
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Bash Special Variables $! $0 $? $$</title><link>https://romankurnovskii.com/en/posts/bash-variables/</link><pubDate>Tue, 14 Feb 2023 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/posts/bash-variables/</guid><description>&lt;h2 id="0---the-name-of-the-script">&lt;code>$0&lt;/code> - The Name of the Script&lt;/h2>
&lt;p>&lt;code>$0&lt;/code> represents the name of the Bash script as it was called.&lt;/p>
&lt;p>If you execute a script with &lt;code>bash myscript.sh&lt;/code>, then within &lt;code>myscript.sh&lt;/code>, &lt;code>$0&lt;/code> will be &lt;code>myscript.sh&lt;/code>.&lt;/p>
&lt;h2 id="1-2-3----positional-parameters">&lt;code>$1&lt;/code>, &lt;code>$2&lt;/code>, &lt;code>$3&lt;/code>, &amp;hellip; - Positional Parameters&lt;/h2>
&lt;p>These variables correspond to the arguments passed to the script. &lt;code>$1&lt;/code> is the first argument, &lt;code>$2&lt;/code> is the second, and so on.&lt;/p>
&lt;p>In the command &lt;code>bash myscript.sh arg1 arg2&lt;/code>, &lt;code>$1&lt;/code> equals &lt;code>arg1&lt;/code>, and &lt;code>$2&lt;/code> equals &lt;code>arg2&lt;/code>.&lt;/p>
&lt;h2 id="---pid-of-the-last-background-process">&lt;code>$!&lt;/code> - PID of the Last Background Process&lt;/h2>
&lt;p>This holds the process ID of the most recent background process. It&amp;rsquo;s particularly useful in managing parallel processing in scripts.&lt;/p>
&lt;h2 id="---number-of-parameters">&lt;code>$#&lt;/code> - Number of Parameters&lt;/h2>
&lt;p>&lt;code>$#&lt;/code> provides the count of arguments passed to the script, enabling scripts to adapt based on the number of inputs.&lt;/p>
&lt;h2 id="-and----all-positional-parameters">&lt;code>$*&lt;/code> and &lt;code>$@&lt;/code> - All Positional Parameters&lt;/h2>
&lt;p>Both &lt;code>$*&lt;/code> and &lt;code>$@&lt;/code> expand to all positional parameters, but they behave differently when quoted. &lt;code>&amp;quot;${*}&amp;quot;&lt;/code> merges all parameters into a single string, while &lt;code>&amp;quot;${@}&amp;quot;&lt;/code> treats each as a separate word.&lt;/p>
&lt;h2 id="---exit-status-of-the-last-command">&lt;code>$?&lt;/code> - Exit Status of the Last Command&lt;/h2>
&lt;p>The exit status of the most recently executed command is stored in &lt;code>$?&lt;/code>, where &lt;code>0&lt;/code> typically signifies success.&lt;/p>
&lt;h2 id="special-cases">Special Cases&lt;/h2>
&lt;ul>
&lt;li>&lt;code>$$&lt;/code> is the PID of the script itself.&lt;/li>
&lt;li>&lt;code>$-&lt;/code> shows the current options set for the shell&lt;/li>
&lt;/ul>
&lt;h2 id="dirname">dirname&lt;/h2>
&lt;p>Strips the last component from a file path.&lt;/p>
&lt;p>If you have a file path &lt;code>/home/user/documents/report.txt&lt;/code>, the &lt;code>dirname&lt;/code> command will extract and return &lt;code>/home/user/documents&lt;/code>, which is the directory part of the path.&lt;/p>
&lt;p>&lt;code>dirname&lt;/code> can be especially useful in scripting when you need to perform operations relative to the location of a script or file.&lt;/p></description></item><item><title>Bash code snippets</title><link>https://romankurnovskii.com/en/posts/bash-snippets/</link><pubDate>Sun, 12 Feb 2023 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/posts/bash-snippets/</guid><description>&lt;h2 id="rename-all-files-in-current-directory--remove-prefix">Rename all files in current directory / Remove prefix&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020">#!/bin/bash
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020">&lt;/span>&lt;span style="color:#bb60d5">REMOVE_PREFIX&lt;/span>&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#bb60d5">$1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bb60d5">files&lt;/span>&lt;span style="color:#666">=(&lt;/span>*&lt;span style="color:#666">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">for&lt;/span> file in &lt;span style="color:#4070a0">&amp;#34;&lt;/span>&lt;span style="color:#70a0d0">${&lt;/span>&lt;span style="color:#bb60d5">files&lt;/span>[@]&lt;span style="color:#70a0d0">}&lt;/span>&lt;span style="color:#4070a0">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">do&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">if&lt;/span> &lt;span style="color:#666">[[&lt;/span> &lt;span style="color:#bb60d5">$file&lt;/span> &lt;span style="color:#666">==&lt;/span> *&lt;span style="color:#4070a0">&amp;#34;&lt;/span>&lt;span style="color:#70a0d0">${&lt;/span>&lt;span style="color:#bb60d5">REMOVE_PREFIX&lt;/span>&lt;span style="color:#70a0d0">}&lt;/span>&lt;span style="color:#4070a0">&amp;#34;&lt;/span>* &lt;span style="color:#666">]]&lt;/span>; &lt;span style="color:#007020;font-weight:bold">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#60a0b0;font-style:italic"># Remove everything before and including the &amp;#34;№&amp;#34; symbol&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#bb60d5">new_file&lt;/span>&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#70a0d0">${&lt;/span>&lt;span style="color:#bb60d5">file&lt;/span>##*&lt;span style="color:#4070a0">&amp;#34;&lt;/span>&lt;span style="color:#70a0d0">${&lt;/span>&lt;span style="color:#bb60d5">REMOVE_PREFIX&lt;/span>&lt;span style="color:#70a0d0">}&lt;/span>&lt;span style="color:#4070a0">&amp;#34;&lt;/span>&lt;span style="color:#70a0d0">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> mv &lt;span style="color:#4070a0">&amp;#34;&lt;/span>&lt;span style="color:#bb60d5">$file&lt;/span>&lt;span style="color:#4070a0">&amp;#34;&lt;/span> &lt;span style="color:#4070a0">&amp;#34;&lt;/span>&lt;span style="color:#bb60d5">$new_file&lt;/span>&lt;span style="color:#4070a0">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020">echo&lt;/span> &lt;span style="color:#4070a0">&amp;#34;Renamed &lt;/span>&lt;span style="color:#bb60d5">$file&lt;/span>&lt;span style="color:#4070a0"> to &lt;/span>&lt;span style="color:#bb60d5">$new_file&lt;/span>&lt;span style="color:#4070a0">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">done&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>$ ./rename_files.sh abc
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>renamed file abc123.txt -&amp;gt; 123.txt
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="add-substring-to-filename">Add substring to filename&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020">#!/bin/bash
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bb60d5">DIR&lt;/span>&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#4070a0">&amp;#34;/path/to/folder&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020">cd&lt;/span> &lt;span style="color:#4070a0">&amp;#34;&lt;/span>&lt;span style="color:#bb60d5">$DIR&lt;/span>&lt;span style="color:#4070a0">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Rename all .png files and add &amp;#34;.ru&amp;#34; before .png&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">for&lt;/span> file in *.png; &lt;span style="color:#007020;font-weight:bold">do&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#bb60d5">base&lt;/span>&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#007020;font-weight:bold">$(&lt;/span>basename &lt;span style="color:#4070a0">&amp;#34;&lt;/span>&lt;span style="color:#bb60d5">$file&lt;/span>&lt;span style="color:#4070a0">&amp;#34;&lt;/span> .png&lt;span style="color:#007020;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> mv &lt;span style="color:#4070a0">&amp;#34;&lt;/span>&lt;span style="color:#bb60d5">$file&lt;/span>&lt;span style="color:#4070a0">&amp;#34;&lt;/span> &lt;span style="color:#4070a0">&amp;#34;&lt;/span>&lt;span style="color:#70a0d0">${&lt;/span>&lt;span style="color:#bb60d5">base&lt;/span>&lt;span style="color:#70a0d0">}&lt;/span>&lt;span style="color:#4070a0">.ru.png&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">done&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="git-pushpull-for-all-repos-in-path">Git Push/Pull for all repos in path&lt;/h2>
&lt;h3 id="git-pull">git pull&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bb60d5">files&lt;/span>&lt;span style="color:#666">=(&lt;/span>*&lt;span style="color:#666">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic">#!/bin/bash&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># For every item in the current directory&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">for&lt;/span> d in */; &lt;span style="color:#007020;font-weight:bold">do&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020">cd&lt;/span> &lt;span style="color:#4070a0">&amp;#34;&lt;/span>&lt;span style="color:#bb60d5">$d&lt;/span>&lt;span style="color:#4070a0">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">if&lt;/span> &lt;span style="color:#666">[[&lt;/span> -d &lt;span style="color:#4070a0">&amp;#34;.git&amp;#34;&lt;/span> &lt;span style="color:#666">]]&lt;/span>; &lt;span style="color:#007020;font-weight:bold">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020">echo&lt;/span> &lt;span style="color:#bb60d5">$d&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> git pull
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020">cd&lt;/span> ..
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">done&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="git-push">git push&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020">#!/bin/bash
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># For every item in the current directory&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">for&lt;/span> d in */; &lt;span style="color:#007020;font-weight:bold">do&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020">cd&lt;/span> &lt;span style="color:#4070a0">&amp;#34;&lt;/span>&lt;span style="color:#bb60d5">$d&lt;/span>&lt;span style="color:#4070a0">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">if&lt;/span> &lt;span style="color:#666">[[&lt;/span> -d &lt;span style="color:#4070a0">&amp;#34;.git&amp;#34;&lt;/span> &lt;span style="color:#666">]]&lt;/span>; &lt;span style="color:#007020;font-weight:bold">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020">echo&lt;/span> &lt;span style="color:#bb60d5">$d&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> git add .
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> git commit -m &lt;span style="color:#4070a0">&amp;#34;Auto apply&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#60a0b0;font-style:italic"># black . # python formatter&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#60a0b0;font-style:italic"># git add .&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#60a0b0;font-style:italic"># git commit -m &amp;#34;[chore] formatter&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> git push
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020">cd&lt;/span> ..
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">done&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="git-untrack">git untrack&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020">#!/bin/bash
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bb60d5">items_to_untrack&lt;/span>&lt;span style="color:#666">=(&lt;/span>&lt;span style="color:#4070a0">&amp;#34;.idea&amp;#34;&lt;/span> &lt;span style="color:#4070a0">&amp;#34;.vscode&amp;#34;&lt;/span> &lt;span style="color:#4070a0">&amp;#34;.DS_Store&amp;#34;&lt;/span> &lt;span style="color:#4070a0">&amp;#34;__pycache__&amp;#34;&lt;/span> &lt;span style="color:#4070a0">&amp;#34;node_modules&amp;#34;&lt;/span> &lt;span style="color:#4070a0">&amp;#34;.env&amp;#34;&lt;/span> &lt;span style="color:#4070a0">&amp;#34;.serverless&amp;#34;&lt;/span>&lt;span style="color:#666">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># For every item in the current directory&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">for&lt;/span> d in */; &lt;span style="color:#007020;font-weight:bold">do&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020">echo&lt;/span> &lt;span style="color:#bb60d5">$d&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020">cd&lt;/span> &lt;span style="color:#4070a0">&amp;#34;&lt;/span>&lt;span style="color:#bb60d5">$d&lt;/span>&lt;span style="color:#4070a0">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#60a0b0;font-style:italic"># Iterate over each item to untrack&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">for&lt;/span> item in &lt;span style="color:#4070a0">&amp;#34;&lt;/span>&lt;span style="color:#70a0d0">${&lt;/span>&lt;span style="color:#bb60d5">items_to_untrack&lt;/span>[@]&lt;span style="color:#70a0d0">}&lt;/span>&lt;span style="color:#4070a0">&amp;#34;&lt;/span>; &lt;span style="color:#007020;font-weight:bold">do&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#60a0b0;font-style:italic"># If the item exists&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">if&lt;/span> &lt;span style="color:#666">[[&lt;/span> -e &lt;span style="color:#4070a0">&amp;#34;&lt;/span>&lt;span style="color:#bb60d5">$item&lt;/span>&lt;span style="color:#4070a0">&amp;#34;&lt;/span> &lt;span style="color:#666">]]&lt;/span>; &lt;span style="color:#007020;font-weight:bold">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#60a0b0;font-style:italic"># Untrack the item&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> git rm -r --cached &lt;span style="color:#4070a0">&amp;#34;&lt;/span>&lt;span style="color:#bb60d5">$item&lt;/span>&lt;span style="color:#4070a0">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">done&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020">cd&lt;/span> ..
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">done&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>How to Download and Install Linux RHEL 9 for Free</title><link>https://romankurnovskii.com/en/posts/howto-install-rhel-9-free/</link><pubDate>Fri, 17 Jun 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/posts/howto-install-rhel-9-free/</guid><description>&lt;p>Red Hat Enterprise Linux 9 (RHEL 9), codenamed Plow, has gone public (GA). Red Hat announced it on May 18, 2022. It replaced the beta version, which had been in existence since November 3, 2021.&lt;/p>
&lt;p>RHEL 9 is the first few releases in the Red Hat family. It is the first major release since IBM acquired Red Hat in July 2019, and the first major release since abandoning the CentOS project in favor of CentOS Stream, which is now RHEL&amp;rsquo;s predecessor.&lt;/p>
&lt;p>RHEL 9 is the latest major version of RHEL and comes with a 5.14 kernel, lots of new software packages and a host of improvements. It emphasizes security, stability, flexibility and reliability.&lt;/p>
&lt;h2 id="description">Description&lt;/h2>
&lt;p>RHEL 9 ships with new versions of software including Python 3.9. Node.JS 16, GCC 11, Perl 5.32, Ruby 3.0, PHP 8.0, and many more.&lt;/p>
&lt;h2 id="preparing-for-installation">Preparing for installation&lt;/h2>
&lt;h3 id="registration-on-the-red-hat-portal">Registration on the Red Hat portal&lt;/h3>
&lt;p>Red Hat Developer Subscription is a free Red Hat Developer Program offer designed for individual developers who want to take full advantage of Red Hat Enterprise Linux.&lt;/p>
&lt;p>It gives developers access to all versions of Red Hat Enterprise Linux, as well as other Red Hat products such as add-ons, software updates and security bugs.&lt;/p>
&lt;p>First of all, make sure you have an active Red Hat account. If you don&amp;rsquo;t already have an account, go to the &lt;a href="https://access.redhat.com/">Red Hat Customer Portal&lt;/a>, click on &amp;ldquo;Register&amp;rdquo; and fill out your information to create a Red Hat account.
&lt;p class="md__image">
&lt;img
src="img/01.png"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;h3 id="downloading-the-installation-image">Downloading the installation image&lt;/h3>
&lt;p>After creating a Red Hat account, you can start downloading RHEL 9. To download Red Hat Enterprise Linux 9 &lt;strong>absolutely free&lt;/strong>, go to &lt;a href="https://developers.redhat.com/products/rhel/overview">Red Hat Developer Portal&lt;/a> and log in with your account credentials.
&lt;p class="md__image">
&lt;img
src="img/01-01.png"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;p>Then go to the &lt;a href="https://developers.redhat.com/products/rhel/download">download RHEL 9&lt;/a> page and click on the download button shown below.&lt;/p>
&lt;p>I&amp;rsquo;m using a MacBook M1, so I download the RHEL 9 image for the M1 processor aarch64
&lt;p class="md__image">
&lt;img
src="img/01-02.png"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;h3 id="virtual-machine">Virtual machine&lt;/h3>
&lt;p>I use the free &lt;a href="https://mac.getutm.app/">UTM virtual machine&lt;/a> as a virtual machine to install RHEL 9. You can install using &lt;a href="../mac-setup-development/#homebrew">Homebrew&lt;/a> by running the command &lt;code>brew install --cask utm&lt;/code>.&lt;/p>
&lt;h2 id="installing-red-hat-enterprise-linux-9">Installing Red Hat Enterprise Linux 9&lt;/h2>
&lt;h3 id="setting-up-the-utm-virtual-machine">Setting up the UTM virtual machine&lt;/h3>
&lt;p>In UTM click &lt;code>Create a New Virtual Machine&lt;/code> -&amp;gt; Virtualize
&lt;p class="md__image">
&lt;img
src="img/02-02.png"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;p>Choose the downloaded RHEL 9 image and click &lt;code>Continue&lt;/code>.
&lt;p class="md__image">
&lt;img
src="img/02-01.png"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;h3 id="main-setup-menu">Main Setup Menu&lt;/h3>
&lt;p>&lt;p class="md__image">
&lt;img
src="img/02.png"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;p>The marked fields need to be filled in&lt;/p>
&lt;p>Create Root Password
&lt;p class="md__image">
&lt;img
src="img/03.png"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
&lt;strong>User Creation&lt;/strong>. Create the user you want to log in with.
&lt;p class="md__image">
&lt;img
src="img/04.png"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;p>&lt;strong>Connect to Red Hat&lt;/strong>. Here we will use the account created above.&lt;/p>
&lt;p>Here you will enter your account data and click Register.
&lt;p class="md__image">
&lt;img
src="img/06.png"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
Press Done&lt;/p>
&lt;p>Under &lt;strong>Installation Destination&lt;/strong> choose your default drive.&lt;/p>
&lt;p>We can now continue with the installation. A &lt;em>&lt;strong>Begin installation&lt;/strong>&lt;/em> button will appear on the main screen&lt;br>
&lt;p class="md__image">
&lt;img
src="img/05.png"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;p>After installation is complete, we will have to reboot the system.
&lt;p class="md__image">
&lt;img
src="img/02-03.png"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
Sometimes rebooting will unload the installation image again. It&amp;rsquo;s necessary to either disable the disk in the installer setup or reboot the UTM.&lt;/p>
&lt;h2 id="running-red-hat-enterprise-linux-9">Running Red Hat Enterprise Linux 9&lt;/h2>
&lt;p>&lt;p class="md__image">
&lt;img
src="img/07.png"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;p>Enter your password and see the RHEL 9 desktop
&lt;p class="md__image">
&lt;img
src="img/07-01.png"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;p>To access the applications, click the &lt;strong>Activities&lt;/strong> button in the upper left corner&lt;/p>
&lt;h2 id="configuring-red-hat-enterprise-linux-9">Configuring Red Hat Enterprise Linux 9&lt;/h2>
&lt;h3 id="checking-the-root-user">Checking the ROOT user&lt;/h3>
&lt;p>In a Linux system users belong to different groups which have certain rights. If during the installation process we did not check the checkbox to make the user an administrator, by default he will not be able to install some system programs.&lt;/p>
&lt;p>Exit and log in as root (the same user we created earlier on the main screen). Press &lt;em>&lt;strong>Log out&lt;/strong>&lt;/em>
&lt;p class="md__image">
&lt;img
src="img/07-03.png"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;p>Now log in as &lt;strong>root&lt;/strong>. The user may not be listed. Press &lt;strong>Not listed&lt;/strong> and enter the account data.
&lt;p class="md__image">
&lt;img
src="img/07-04.png"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;p>Open terminal and check
&lt;p class="md__image">
&lt;img
src="img/07-05.png"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;h3 id="configuring-system-settings">Configuring system settings&lt;/h3>
&lt;h4 id="button-to-minimize-the-application">Button to minimize the application&lt;/h4>
&lt;p>The first thing that seems unusual about using the GUI is that there are no buttons to minimize windows
&lt;p class="md__image">
&lt;img
src="img/07-02.png"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;p>Install the necessary package&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>yum install gnome-tweaks -y
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;p class="md__image">
&lt;img
src="img/07-06.png"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;p>After installation, the Tweaks application will appear. Find it by searching.&lt;/p>
&lt;p>&lt;p class="md__image">
&lt;img
src="img/07-07.png"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;p>There are many other tweaks in the app as well. We will show you the minimize buttons for the applications.&lt;/p>
&lt;p>Let&amp;rsquo;s go to &lt;strong>Windows titlebars&lt;/strong> and set the Maximize, Minimize options&lt;/p>
&lt;p>&lt;p class="md__image">
&lt;img
src="img/07-08.png"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;h4 id="user-access-to-install-applications">User access to install applications&lt;/h4>
&lt;p>To avoid constantly switching to a root user to install applications, we can give the normal user access to install applications.
We will continue to do this as &lt;em>&lt;strong>root&lt;/strong>&lt;/em>.
Open /etc/sudoers and add the user&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>sudo vi /etc/sudoers
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Add user data to the end of the file. My user name: &lt;em>&lt;strong>rhel-user&lt;/strong>&lt;/em>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>rhel-user &lt;span style="color:#bb60d5">ALL&lt;/span>&lt;span style="color:#666">=&lt;/span> NOPASSWD: /usr/sbin/synaptic, /usr/bin/software-center, /usr/bin/apt-get, /usr/bin/dnf
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;p class="md__image">
&lt;img
src="img/07-09.png"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;p>Let&amp;rsquo;s install &lt;em>&lt;strong>Visual Studio Code&lt;/strong>&lt;/em> as a normal user
Installation consists of the following steps:&lt;/p>
&lt;ol>
&lt;li>adding the desired repository. Rights to add the repository (changing the files in the directory is still only for &lt;em>&lt;strong>root&lt;/strong>&lt;/em> user)&lt;/li>
&lt;li>Downloading and installing.&lt;/li>
&lt;/ol>
&lt;p>First step is done as root user
Go to &lt;a href="https://code.visualstudio.com/docs/setup/linux">https://code.visualstudio.com/docs/setup/linux&lt;/a>&lt;/p>
&lt;p>Copy the code and run it in the terminal&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>sudo rpm --import https://packages.microsoft.com/keys/microsoft.asc
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo sh -c &lt;span style="color:#4070a0">&amp;#39;echo -e &amp;#34;[code]\nname=Visual Studio Code\nbaseurl=https://packages.microsoft.com/yumrepos/vscode\nenabled=1\ngpgcheck=1\ngpgkey=https://packages.microsoft.com/keys/microsoft.asc&amp;#34; &amp;gt; /etc/yum.repos.d/vscode.repo&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>Switch to user &lt;em>&lt;strong>rhel-user&lt;/strong>&lt;/em>. This can also be done in the terminal.&lt;/li>
&lt;li>Updating the repositories&lt;/li>
&lt;li>Install VSCode&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>su rhel-user
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dnf check-update
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo dnf install code
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;p class="md__image">
&lt;img
src="img/07-10.png"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
&lt;p class="md__image">
&lt;img
src="img/07-11.png"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
&lt;p class="md__image">
&lt;img
src="img/07-12.png"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;h2 id="references">References&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://developers.redhat.com/products/rhel/getting-started">https://developers.redhat.com/products/rhel/getting-started&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.redhat.com/sysadmin/install-linux-rhel-9">https://www.redhat.com/sysadmin/install-linux-rhel-9&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Tar command Cheat Sheet</title><link>https://romankurnovskii.com/en/posts/cheat-sheet-command-tar/</link><pubDate>Sun, 05 Jun 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/posts/cheat-sheet-command-tar/</guid><description>&lt;h2 id="common-options">Common options&lt;/h2>
&lt;pre>&lt;code>z compress with gzip
c create an archive
u append files which are newer than
the corresponding copy ibn the archive
f filename of the archive
v verbose, display what is inflated or deflated
a unlike of z, determine compression based on file extension
&lt;/code>&lt;/pre>
&lt;h2 id="create-tar-named-archivetar-containing-directory">Create tar named archive.tar containing directory&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>tar cf archive.tar /path/files
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="concatenate-files-into-a-single-tar">Concatenate files into a single tar&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>tar -cf archive.tar /path/files
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="extract-the-contents-from-archivetar">Extract the contents from archive.tar&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>tar xf archive.tar
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="create-a-gzip-compressed-tar-file-name-archivetargz">Create a gzip compressed tar file name archive.tar.gz&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>tar czf archive.tar.gz /path/files
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="extract-a-gzip-compressed-tar-file">Extract a gzip compressed tar file&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>tar xzf archive.tar.gz
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="create-a-tar-file-with-bzip2-compression">Create a tar file with bzip2 compression&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>tar cjf archive.tar.bz2 /path/files
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="extract-a-bzip2-compressed-tar-file">Extract a bzip2 compressed tar file&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>tar xjf archive.tar.bz2
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="list-content-of-tar-file">List content of tar file&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>tar -tvf archive.tar
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item></channel></rss>