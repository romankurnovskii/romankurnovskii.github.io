<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>programming on Roman Kurnovskii</title><link>https://romankurnovskii.com/en/categories/programming/</link><description>Recent content in programming on Roman Kurnovskii</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>&amp;copy; 2022 &lt;a href="https://romankurnovskii.com">Roman Kurnovskii&lt;/a> personal page</copyright><lastBuildDate>Sat, 04 Jun 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://romankurnovskii.com/en/categories/programming/index.xml" rel="self" type="application/rss+xml"/><item><title>How to rename files in Python</title><link>https://romankurnovskii.com/en/posts/howto-rename-files-in-python/</link><pubDate>Sat, 04 Jun 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/posts/howto-rename-files-in-python/</guid><description>Learn different ways to rename files in Python using the os and pathlib modules.
os.rename Rename files with os
You can use
os.rename(old_name, new_name) For example we can combine it with os.path.splitext() to get the base name and file extension, and then combine it to a new name:
import os for file in os.listdir(): name, ext = os.path.splitext(file) new_name = f&amp;quot;{name}_new{ext}&amp;quot; os.rename(file, new_name) pathlib Rename files with pathlib
The same could be achieved with the pathlib module and</description></item></channel></rss>