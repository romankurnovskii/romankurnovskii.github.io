<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>programming on Roman Kurnovskii</title><link>https://romankurnovskii.com/en/categories/programming/</link><description>Recent content in programming on Roman Kurnovskii</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>&amp;copy; 2023 &lt;a href="https://romankurnovskii.com">Roman Kurnovskii&lt;/a> personal page</copyright><lastBuildDate>Sun, 12 Feb 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://romankurnovskii.com/en/categories/programming/index.xml" rel="self" type="application/rss+xml"/><item><title>Algorithms 101</title><link>https://romankurnovskii.com/en/tracks/algorithms-101/</link><pubDate>Sat, 15 Oct 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/algorithms-101/</guid><description>Smart / OKR What is SMART and OKR
SMART Specific:
Goal: prepare for contests. Pass 50-&amp;gt;75-&amp;gt;100% of contest problems in time Improve python skills. Improve understanding of common algorithms and data structures. Measurable: How will we know that change has occurred?
solve top 100 questions that cover common algorithms and data structures. Achievable:
participate in LeetCode contest, solve 50%+ problems in time. Relevant: Is it possible to achieve this objective?
achievable with practice. improve skills in solving business problems more efficiently, quickly, understandable.</description></item><item><title>Binary Tree</title><link>https://romankurnovskii.com/en/tracks/algorithms-101/data-structures/binary-tree/</link><pubDate>Thu, 09 Feb 2023 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/algorithms-101/data-structures/binary-tree/</guid><description>1. What is a Binary Tree?
A binary tree is a data structure in which each node has at most two children, which are referred to as the left child and the right child.
2. Representing a Binary Tree in Python
To represent a binary tree in Python, we can create a class called Node to represent each node in the tree. Each node will have a value and references to its left and right children.</description></item><item><title>Segment Tree</title><link>https://romankurnovskii.com/en/tracks/algorithms-101/data-structures/segment-tree/</link><pubDate>Thu, 09 Feb 2023 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/algorithms-101/data-structures/segment-tree/</guid><description>A Segment Tree is a data structure used for efficiently processing queries over intervals or ranges. It is commonly used for solving problems that involve finding information about a set of elements and their sub-intervals.
Since a Segment Tree is a binary tree, a simple linear array can be used to represent the Segment Tree. Before building the Segment Tree, one must figure what needs to be stored in the Segment Tree&amp;rsquo;s node?.
Each leaf node represents a single element, and each internal node represents the union of its children&amp;rsquo;s ranges.</description></item><item><title>LeetCode Problems</title><link>https://romankurnovskii.com/en/tracks/algorithms-101/problems/</link><pubDate>Sun, 16 Oct 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/algorithms-101/problems/</guid><description>Python template
Tips I learned Don&amp;rsquo;t code before &amp;ldquo;design&amp;rdquo; and understand the solution algorithm First 20 problems. Spent 5 min for thinking. Next look for 2-3 different approaches. Understand. Decide. Write. Resources https://walkccc.me/LeetCode/problems/ https://books.halfrost.com/leetcode/ https://grandyang.com/leetcode/ Competitive Programmer&amp;rsquo;s Handbook</description></item><item><title>Data Structures</title><link>https://romankurnovskii.com/en/tracks/algorithms-101/data-structures/</link><pubDate>Thu, 09 Feb 2023 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/algorithms-101/data-structures/</guid><description>Tree 1class Node: 2 def __init__(self, value): 3 self.value = value 4 self.children = {} 5 6 def insert(self, s, idx): 7 # idx: index of the current character in s 8 if idx != len(s): 9 self.children.setdefault(s[idx], Node(s[idx])) 10 self.children.get(s[idx]).insert(s, idx + 1) Fenwick Tree 1class Fenwick: #also known as Binary Indexed Tree (BIT) 2 def __init__(self, n): 3 self.n = n 4 self.bit = [0] * (n+1) 5 6 def add(self, idx, val): 7 while idx &amp;lt;= self.</description></item><item><title>Bash code snippets</title><link>https://romankurnovskii.com/en/posts/bash-snippets/</link><pubDate>Sun, 12 Feb 2023 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/posts/bash-snippets/</guid><description>Convert video -&amp;gt; audio with ffmpeg in current directory
1#!/bin/bash 2 3# Check if ffmpeg is installed 4command -v ffmpeg &amp;gt;/dev/null 2&amp;gt;&amp;amp;1 || { echo &amp;gt;&amp;amp;2 &amp;#34;ffmpeg is required but not installed. Aborting.&amp;#34;; exit 1; } 5 6# Get a list of all video files in the current directory 7video_files=(*.{mp4,mkv,flv,avi}) 8 9# Check if there are any video files in the current directory 10if [ ${#video_files[@]} -eq 0 ] 11 then 12 echo &amp;#34;No video files found in the current directory.</description></item><item><title>Python bitwise operators</title><link>https://romankurnovskii.com/en/posts/python-bitwise-operators/</link><pubDate>Sun, 20 Nov 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/posts/python-bitwise-operators/</guid><description>&amp;laquo; Left Shift Moves the bits of its first operand to the left by the number of places specified in its second operand.
Shifting a single bit to the left by one place doubles its value. Shifting to two places to the left by one place quadruple its value. $ a &amp;laquo; n = a * 2^n $
1&amp;gt;&amp;gt;&amp;gt; 100 &amp;lt;&amp;lt; 1 2200 3&amp;gt;&amp;gt;&amp;gt; 100 &amp;lt;&amp;lt; 2 4400 5&amp;gt;&amp;gt;&amp;gt; 100 &amp;lt;&amp;lt; 3 6800 &amp;raquo; Right Shift The rightmost bits always get dropped.</description></item><item><title>Hugo shortcode examples</title><link>https://romankurnovskii.com/en/posts/hugo-shortcode-examples/</link><pubDate>Thu, 20 Oct 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/posts/hugo-shortcode-examples/</guid><description>Source code of examples can be found in the repo
Image - insert resizable image in post</description></item><item><title>JavaScript code snippets</title><link>https://romankurnovskii.com/en/posts/js-snippets/</link><pubDate>Thu, 15 Sep 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/posts/js-snippets/</guid><description>Web / Browser get base URL 1const getBaseURL = url =&amp;gt; url.replace(/[?#].*$/, &amp;#39;&amp;#39;); 2 3getBaseURL(&amp;#39;http://url.com/page?name=Adam&amp;amp;surname=Smith&amp;#39;); 4// &amp;#39;http://url.com/page&amp;#39; 5 6const url = new URL(&amp;#34;https://example.com/login?user=someguy&amp;amp;page=news&amp;#34;); 7 8url.origin // &amp;#34;https://example.com&amp;#34; 9url.host // &amp;#34;example.com&amp;#34; 10url.protocol // &amp;#34;https:&amp;#34; 11url.pathname // &amp;#34;/login&amp;#34; 12url.searchParams.get(&amp;#39;user&amp;#39;) // &amp;#34;someuser&amp;#34; get URL parameters as object 1const getURLParameters = url =&amp;gt; 2 (url.match(/([^?=&amp;amp;]+)(=([^&amp;amp;]*))/g) || []).reduce( 3 (a, v) =&amp;gt; ( 4 (a[v.slice(0, v.indexOf(&amp;#39;=&amp;#39;))] = v.slice(v.indexOf(&amp;#39;=&amp;#39;) + 1)), a 5 ), 6 {} 7 ); 8 9getURLParameters(&amp;#39;google.com&amp;#39;); // {} 10getURLParameters(&amp;#39;http://url.</description></item><item><title>Add search to Hugo multilingual static site with Lunr</title><link>https://romankurnovskii.com/en/posts/hugo-add-search-lunr-popup/</link><pubDate>Sat, 16 Jul 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/posts/hugo-add-search-lunr-popup/</guid><description>Initial I had the need to implement search functionality on my site. Content on is in different languages.
The goal is to impelemnt search for all pages and separate search results for each and every language.
How it works Hugo generates the search index. In this case it means that we get json file with every static page on the site.
To make search works we need to create index. lunr.js takes care of it.</description></item><item><title>Hugo resize a picture on click</title><link>https://romankurnovskii.com/en/posts/hugo-add-image-zoomin/</link><pubDate>Sat, 09 Jul 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/posts/hugo-add-image-zoomin/</guid><description>Introduction Hugo by default uses parsing of markdown files. This means that we get the html code as it is written in markdown.
In order to understand which images we can enhance, we add a separate tag/key/id to those images
Tools To implement the functionality, we need to:
Write/connect a script/handler that will perform the zoomin effect on the images we need Add the necessary metadata to the images, so the script can find them zoomin script To add the ability to zoom on click, we will use the medium-zoom package.</description></item><item><title>Python Cheat Sheet</title><link>https://romankurnovskii.com/en/posts/python-snippets/</link><pubDate>Tue, 21 Jun 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/posts/python-snippets/</guid><description>1def sum_of_digits(n): 2 sum = 0 3 while n: 4 sum += n % 10 5 n //= 10 6 return sum 1# Single line comments start with a number symbol. 2 3&amp;#34;&amp;#34;&amp;#34; Multiline strings can be written 4 using three &amp;#34;s, and are often used 5 as documentation. 6&amp;#34;&amp;#34;&amp;#34; 7 8#################################################### 9## 1. Primitive Datatypes and Operators 10#################################################### 11 12# You have numbers 133 # =&amp;gt; 3 14 15# Math is what you would expect 161 + 1 # =&amp;gt; 2 178 - 1 # =&amp;gt; 7 1810 * 2 # =&amp;gt; 20 1935 / 5 # =&amp;gt; 7.</description></item><item><title>How to rename files in Python</title><link>https://romankurnovskii.com/en/posts/howto-rename-files-in-python/</link><pubDate>Sat, 04 Jun 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/posts/howto-rename-files-in-python/</guid><description>Learn different ways to rename files in Python using the os and pathlib modules.
os.rename Rename files with os
You can use
1os.rename(old_name, new_name) For example we can combine it with os.path.splitext() to get the base name and file extension, and then combine it to a new name:
1import os 2for file in os.listdir(): 3 name, ext = os.path.splitext(file) 4 new_name = f&amp;#34;{name}_new{ext}&amp;#34; 5 os.rename(file, new_name) pathlib Rename files with pathlib
The same could be achieved with the pathlib module and</description></item><item><title>How to create a deep clone of an object in JavaScript</title><link>https://romankurnovskii.com/en/posts/howto-create-deepclone-js/</link><pubDate>Thu, 02 Jun 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/posts/howto-create-deepclone-js/</guid><description>We can use recursion. Use Object.assign() and an empty object ({}) to create a shallow clone of the original. Use Object.keys() and Array.prototype.forEach() to determine which key-value pairs need to be deep cloned.
1const deepClone = obj =&amp;gt; { 2 let clone = Object.assign({}, obj); 3 Object.keys(clone).forEach( 4 key =&amp;gt; (clone[key] = typeof obj[key] === &amp;#39;object&amp;#39; ? deepClone(obj[key]) : obj[key]) 5 ); 6 return Array.isArray(obj) &amp;amp;&amp;amp; obj.length 7 ? (clone.length = obj.length) &amp;amp;&amp;amp; Array.from(clone) 8 : Array.</description></item></channel></rss>