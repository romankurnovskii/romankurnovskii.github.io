<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>CheatSheet on Roman Kurnovskii</title><link>https://romankurnovskii.com/en/categories/cheatsheet/</link><description>Recent content in CheatSheet on Roman Kurnovskii</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>&amp;copy; 2023 &lt;a href="https://romankurnovskii.com">Roman Kurnovskii&lt;/a> personal page</copyright><lastBuildDate>Sun, 12 Feb 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://romankurnovskii.com/en/categories/cheatsheet/index.xml" rel="self" type="application/rss+xml"/><item><title>Bash code snippets</title><link>https://romankurnovskii.com/en/posts/bash-snippets/</link><pubDate>Sun, 12 Feb 2023 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/posts/bash-snippets/</guid><description>Convert video -&amp;gt; audio with ffmpeg in current directory
1#!/bin/bash 2 3# Check if ffmpeg is installed 4command -v ffmpeg &amp;gt;/dev/null 2&amp;gt;&amp;amp;1 || { echo &amp;gt;&amp;amp;2 &amp;#34;ffmpeg is required but not installed. Aborting.&amp;#34;; exit 1; } 5 6# Get a list of all video files in the current directory 7video_files=(*.{mp4,mkv,flv,avi}) 8 9# Check if there are any video files in the current directory 10if [ ${#video_files[@]} -eq 0 ] 11 then 12 echo &amp;#34;No video files found in the current directory.</description></item><item><title>Git snippets</title><link>https://romankurnovskii.com/en/posts/git-snippets/</link><pubDate>Sun, 01 Jan 2023 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/posts/git-snippets/</guid><description>Free space in git repo Download BFG
Remove history files bigger than 100Kb:
cd repo java -jar bfg-1.14.0.jar --strip-blobs-bigger-than 100K . git reflog expire --expire=now --all &amp;amp;&amp;amp; git gc --prune=now --aggressive Removing an entire commit:
Replace &amp;ldquo;SHA&amp;rdquo; with the reference you want to get rid of. The &amp;ldquo;^&amp;rdquo; in that command is literal.
git rebase -p --onto SHA^ SHA We want to remove commits 2 &amp;amp; 4 from the repo. (Higher the the number newer the commit; 0 is the oldest commit and 4 is the latest commit)</description></item><item><title>JavaScript code snippets</title><link>https://romankurnovskii.com/en/posts/js-snippets/</link><pubDate>Thu, 15 Sep 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/posts/js-snippets/</guid><description>Web / Browser get base URL 1const getBaseURL = url =&amp;gt; url.replace(/[?#].*$/, &amp;#39;&amp;#39;); 2 3getBaseURL(&amp;#39;http://url.com/page?name=Adam&amp;amp;surname=Smith&amp;#39;); 4// &amp;#39;http://url.com/page&amp;#39; 5 6const url = new URL(&amp;#34;https://example.com/login?user=someguy&amp;amp;page=news&amp;#34;); 7 8url.origin // &amp;#34;https://example.com&amp;#34; 9url.host // &amp;#34;example.com&amp;#34; 10url.protocol // &amp;#34;https:&amp;#34; 11url.pathname // &amp;#34;/login&amp;#34; 12url.searchParams.get(&amp;#39;user&amp;#39;) // &amp;#34;someuser&amp;#34; get URL parameters as object 1const getURLParameters = url =&amp;gt; 2 (url.match(/([^?=&amp;amp;]+)(=([^&amp;amp;]*))/g) || []).reduce( 3 (a, v) =&amp;gt; ( 4 (a[v.slice(0, v.indexOf(&amp;#39;=&amp;#39;))] = v.slice(v.indexOf(&amp;#39;=&amp;#39;) + 1)), a 5 ), 6 {} 7 ); 8 9getURLParameters(&amp;#39;google.com&amp;#39;); // {} 10getURLParameters(&amp;#39;http://url.</description></item><item><title>Python Cheat Sheet</title><link>https://romankurnovskii.com/en/posts/python-snippets/</link><pubDate>Tue, 21 Jun 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/posts/python-snippets/</guid><description>1def sum_of_digits(n): 2 sum = 0 3 while n: 4 sum += n % 10 5 n //= 10 6 return sum 1# Single line comments start with a number symbol. 2 3&amp;#34;&amp;#34;&amp;#34; Multiline strings can be written 4 using three &amp;#34;s, and are often used 5 as documentation. 6&amp;#34;&amp;#34;&amp;#34; 7 8#################################################### 9## 1. Primitive Datatypes and Operators 10#################################################### 11 12# You have numbers 133 # =&amp;gt; 3 14 15# Math is what you would expect 161 + 1 # =&amp;gt; 2 178 - 1 # =&amp;gt; 7 1810 * 2 # =&amp;gt; 20 1935 / 5 # =&amp;gt; 7.</description></item><item><title>Top Docker Commands</title><link>https://romankurnovskii.com/en/posts/docker-commands/</link><pubDate>Tue, 07 Jun 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/posts/docker-commands/</guid><description>most popular docker images ## lists the images docker pull imagename ## Pull an image or a repository from a registry docker ps -a ## See a list of all containers, even the ones not running docker build -t imagename . ## Create image using this directory's Dockerfile docker run -p 4000:80 imagename ## Run &amp;quot;imagename&amp;quot; mapping port 4000 to 80 docker rmi ## removes the image docker rm ## removes the container docker stop ## stops the container docker volume ls ## lists the volumes docker kill ## kills the container docker logs ## see logs docker inspect ## shows all the info of a container docker docker cp ## Copy files/folders between a container and the local filesystem docker pull imagename ## Pull an image or a repository from a registry docker build -t imagename .</description></item><item><title>Tar command Cheat Sheet</title><link>https://romankurnovskii.com/en/posts/cheat-sheet-command-tar/</link><pubDate>Sun, 05 Jun 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/posts/cheat-sheet-command-tar/</guid><description>Common options z compress with gzip c create an archive u append files which are newer than the corresponding copy ibn the archive f filename of the archive v verbose, display what is inflated or deflated a unlike of z, determine compression based on file extension Create tar named archive.tar containing directory 1tar cf archive.tar /path/files Concatenate files into a single tar 1tar -cf archive.tar /path/files Extract the contents from archive.tar 1tar xf archive.tar Create a gzip compressed tar file name archive.</description></item><item><title>Markdown Cheat Sheet</title><link>https://romankurnovskii.com/en/posts/markdown-syntax/</link><pubDate>Thu, 21 Apr 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/posts/markdown-syntax/</guid><description>&lt;p>This article offers an example of the basic Markdown syntax that can be used and also shows whether the basic elements of HTML are decorated with CSS.&lt;/p></description></item></channel></rss>