<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>cheatsheet on Roman Kurnovskii</title><link>https://romankurnovskii.com/en/categories/cheatsheet/</link><description>Recent content in cheatsheet on Roman Kurnovskii</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>&amp;copy; 2022 &lt;a href="https://romankurnovskii.com">Roman Kurnovskii&lt;/a> personal page</copyright><lastBuildDate>Sun, 01 Jan 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://romankurnovskii.com/en/categories/cheatsheet/index.xml" rel="self" type="application/rss+xml"/><item><title>Git snippets</title><link>https://romankurnovskii.com/en/posts/git-snippets/</link><pubDate>Sun, 01 Jan 2023 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/posts/git-snippets/</guid><description>Free space in git repo Download BFG
Remove history files bigger than 100Kb:
cd repo java -jar bfg-1.14.0.jar --strip-blobs-bigger-than 100K . git reflog expire --expire=now --all &amp;amp;&amp;amp; git gc --prune=now --aggressive Removing an entire commit:
Replace &amp;ldquo;SHA&amp;rdquo; with the reference you want to get rid of. The &amp;ldquo;^&amp;rdquo; in that command is literal.
git rebase -p --onto SHA^ SHA We want to remove commits 2 &amp;amp; 4 from the repo. (Higher the the number newer the commit; 0 is the oldest commit and 4 is the latest commit)</description></item><item><title>JavaScript code snippets</title><link>https://romankurnovskii.com/en/posts/js-snippets/</link><pubDate>Thu, 15 Sep 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/posts/js-snippets/</guid><description>Web / Browser get base URL const getBaseURL = url =&amp;gt; url.replace(/[?#].*$/, ''); getBaseURL('http://url.com/page?name=Adam&amp;amp;surname=Smith'); // 'http://url.com/page' const url = new URL(&amp;quot;https://example.com/login?user=someguy&amp;amp;page=news&amp;quot;); url.origin // &amp;quot;https://example.com&amp;quot; url.host // &amp;quot;example.com&amp;quot; url.protocol // &amp;quot;https:&amp;quot; url.pathname // &amp;quot;/login&amp;quot; url.searchParams.get('user') // &amp;quot;someuser&amp;quot; get URL parameters as object const getURLParameters = url =&amp;gt; (url.match(/([^?=&amp;amp;]+)(=([^&amp;amp;]*))/g) || []).reduce( (a, v) =&amp;gt; ( (a[v.slice(0, v.indexOf('='))] = v.slice(v.indexOf('=') + 1)), a ), {} ); getURLParameters('google.com'); // {} getURLParameters('http://url.com/page?name=Adam&amp;amp;surname=Smith'); // {name: 'Adam', surname: 'Smith'} // One line Object.</description></item><item><title>Python Cheat Sheet</title><link>https://romankurnovskii.com/en/posts/python-snippets/</link><pubDate>Tue, 21 Jun 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/posts/python-snippets/</guid><description># Single line comments start with a number symbol. &amp;quot;&amp;quot;&amp;quot; Multiline strings can be written using three &amp;quot;s, and are often used as documentation. &amp;quot;&amp;quot;&amp;quot; #################################################### ## 1. Primitive Datatypes and Operators #################################################### # You have numbers 3 # =&amp;gt; 3 # Math is what you would expect 1 + 1 # =&amp;gt; 2 8 - 1 # =&amp;gt; 7 10 * 2 # =&amp;gt; 20 35 / 5 # =&amp;gt; 7.0 # Integer division rounds down for both positive and negative numbers.</description></item><item><title>Top Docker Commands</title><link>https://romankurnovskii.com/en/posts/docker-commands/</link><pubDate>Tue, 07 Jun 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/posts/docker-commands/</guid><description>most popular docker images ## lists the images docker pull imagename ## Pull an image or a repository from a registry docker ps -a ## See a list of all containers, even the ones not running docker build -t imagename . ## Create image using this directory's Dockerfile docker run -p 4000:80 imagename ## Run &amp;quot;imagename&amp;quot; mapping port 4000 to 80 docker rmi ## removes the image docker rm ## removes the container docker stop ## stops the container docker volume ls ## lists the volumes docker kill ## kills the container docker logs ## see logs docker inspect ## shows all the info of a container docker docker cp ## Copy files/folders between a container and the local filesystem docker pull imagename ## Pull an image or a repository from a registry docker build -t imagename .</description></item><item><title>Tar command Cheat Sheet</title><link>https://romankurnovskii.com/en/posts/cheat-sheet-command-tar/</link><pubDate>Sun, 05 Jun 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/posts/cheat-sheet-command-tar/</guid><description>Common options z compress with gzip c create an archive u append files which are newer than the corresponding copy ibn the archive f filename of the archive v verbose, display what is inflated or deflated a unlike of z, determine compression based on file extension Create tar named archive.tar containing directory tar cf archive.tar /path/files Concatenate files into a single tar tar -cf archive.tar /path/files Extract the contents from archive.tar tar xf archive.tar Create a gzip compressed tar file name archive.</description></item><item><title>Markdown Cheat Sheet</title><link>https://romankurnovskii.com/en/posts/markdown-syntax/</link><pubDate>Thu, 21 Apr 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/posts/markdown-syntax/</guid><description>&lt;p>This article offers an example of the basic Markdown syntax that can be used and also shows whether the basic elements of HTML are decorated with CSS.&lt;/p></description></item></channel></rss>