<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>AWS Certified Developer (DVA-C01 -> DVA-C02) on Roman Kurnovskii</title><link>https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/</link><description>Recent content in AWS Certified Developer (DVA-C01 -> DVA-C02) on Roman Kurnovskii</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>&amp;copy; 2025</copyright><lastBuildDate>Thu, 08 Sep 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/index.xml" rel="self" type="application/rss+xml"/><item><title>IAM</title><link>https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/iam/</link><pubDate>Fri, 09 Sep 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/iam/</guid><description>&lt;h2 id="about">About&lt;/h2>
&lt;p>IAM - AWS Identity and Access Management&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://aws.amazon.com/iam/">AWS IAM&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.aws.amazon.com/iam/?id=docs_gateway">AWS IAM User Guide&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>AWS Identity and Access Management (IAM) allows to securely control user access to AWS services and resources.&lt;/p>
&lt;p>Designed for organizations with &lt;strong>multiple users or systems&lt;/strong> that use AWS products such as Amazon EC2, Amazon RDS, and AWS Management Console.&lt;/p>
&lt;p>With IAM, you can centrally manage users, security credentials such as access keys, and permissions that control user access to AWS resources.&lt;/p>
&lt;p>&lt;p class="md__image">
&lt;img
src="https://d1.awsstatic.com/product-marketing/IAM/iam-how-it-works-diagram.04a2c4e4a1e8848155840676fa97ff2146d19012.png"
id="zoom-default"
alt="Amazon IAM Flow"
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;p>There are three ways IAM authenticates a principal:&lt;/p>
&lt;ul>
&lt;li>User Name/Password&lt;/li>
&lt;li>Access Key&lt;/li>
&lt;li>Access Key/Session Token&lt;/li>
&lt;/ul>
&lt;h2 id="digest">Digest&lt;/h2>
&lt;ul>
&lt;li>IAM consists of the following:
&lt;ul>
&lt;li>Users&lt;/li>
&lt;li>Groups&lt;/li>
&lt;li>Roles&lt;/li>
&lt;li>Policy Documents&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>IAM is Global. It doesn&amp;rsquo;t apply to any specific region.&lt;/li>
&lt;li>There is no charge to use IAM.&lt;/li>
&lt;li>IAM is compliant with Payment Card Industry (PCI) Data Security Standard (DSS)&lt;/li>
&lt;li>The &amp;ldquo;root account&amp;rdquo; has complete Admin access.&lt;/li>
&lt;li>&lt;strong>Don&amp;rsquo;t use &amp;ldquo;root account&amp;rdquo;&lt;/strong> for everyday use. Instead, create users. A new user will have NO permissions by default. Grant least privilege needed for their job.&lt;/li>
&lt;li>New user will be assigned with password, Access Key ID &amp;amp; Secret Access Keys. The password will be used to login to AWS management console. Access Key ID &amp;amp; Secret Access Key will be used to login via the APIs and CLI&lt;/li>
&lt;li>Always setup MFA on your root account.&lt;/li>
&lt;li>Use Groups to assign permissions to IAM users&lt;/li>
&lt;li>Use Roles to Delegate permissions. Role is more secure than creating individual user. Roles gives temporary credentials for access; whereas User has long term credentials.&lt;/li>
&lt;li>Create and customize &lt;a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_passwords_account-policy.html">password rotation policies&lt;/a>&lt;/li>
&lt;li>Policies can be attached to users, groups and roles. Use AWS defined policies, assign permissions wherever possible. Policy is defined in JSON format and contains version, statements, - effect, action, resource, principal, and condition.&lt;/li>
&lt;li>STS &lt;a href="https://docs.aws.amazon.com/STS/latest/APIReference/welcome.html">Security Token Service&lt;/a> provides temporary security credentials to the trusted users. STS is global and there is no charge to use it.&lt;/li>
&lt;li>Digest: &lt;a href="https://tutorialsdojo.com/aws-identity-and-access-management-iam/">https://tutorialsdojo.com/aws-identity-and-access-management-iam/&lt;/a>&lt;/li>
&lt;li>IAM best practices - Question might ask you to identify best practices among the given choices. &lt;a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/best-practices.html">https://docs.aws.amazon.com/IAM/latest/UserGuide/best-practices.html&lt;/a>&lt;/li>
&lt;li>Difference between when to use Role and User.&lt;/li>
&lt;li>IAM Policy Simulator - service for testing and troubleshooting IAM Policies. &lt;a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_testing-policies.html">Details&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>&lt;p class="md__image">
&lt;img
src="./img/sap_aws_iam_managed_policies.png"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;h2 id="practice">Practice&lt;/h2>
&lt;div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
&lt;iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" loading="eager" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/FUoRNeQm6RY?autoplay=0&amp;amp;controls=1&amp;amp;end=0&amp;amp;loop=0&amp;amp;mute=0&amp;amp;start=0" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" title="A step-by-step guide to setting up AWS Identity and Access Management">&lt;/iframe>
&lt;/div>
&lt;p>Go to &lt;a href="https://us-east-1.console.aws.amazon.com/iam/home#/">IAM page&lt;/a>&lt;/p>
&lt;h3 id="creating-iam-groups">Creating IAM groups&lt;/h3>
&lt;p>On the &lt;strong>User Groups&lt;/strong> page, click &lt;strong>Create group&lt;/strong>&lt;/p>
&lt;p>&lt;p class="md__image">
&lt;img
src="./img/01.png"
id="zoom-default"
alt="01.png"
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;ol>
&lt;li>Specify the name of the group. Mine is: &lt;strong>DevOps&lt;/strong>.&lt;/li>
&lt;li>Add permission to view EC2: &lt;strong>AmazonEC2ReadOnlyAccess&lt;/strong>.&lt;/li>
&lt;li>create&lt;/li>
&lt;/ol>
&lt;p>&lt;p class="md__image">
&lt;img
src="./img/02.png"
id="zoom-default"
alt="Amazon EC2 Read Only Access"
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;p>The group was created&lt;/p>
&lt;p>&lt;p class="md__image">
&lt;img
src="./img/03.png"
id="zoom-default"
alt="IAM Group"
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;h3 id="creating-iam-users">Creating IAM users&lt;/h3>
&lt;p>On the &lt;strong>Users&lt;/strong> page, click &lt;strong>Create user&lt;/strong>
&lt;p class="md__image">
&lt;img
src="./img/04.png"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;p>Type in user name (login)
&lt;p class="md__image">
&lt;img
src="./img/05.png"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;h3 id="permissions">Permissions&lt;/h3>
&lt;p>Add user to the group
&lt;p class="md__image">
&lt;img
src="./img/06.png"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;h3 id="tags">Tags&lt;/h3>
&lt;p>Skip section or put tags. It is useful and popular to set tags for resources in companies with a lot of connected AWS resources&lt;/p>
&lt;h3 id="loginpassword">Login/Password&lt;/h3>
&lt;p>At the last step, download the &lt;code>.csv&lt;/code> file with login, keys and password. You will need the password later to log in as this user.
On this page there is a link to log in. We will use it in the next step
&lt;p class="md__image">
&lt;img
src="./img/07.png"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;h3 id="logging-in-as-a-new-user">Logging in as a new user&lt;/h3>
&lt;p>&lt;p class="md__image">
&lt;img
src="./img/08.png"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;h4 id="checking-privileges">Checking privileges&lt;/h4>
&lt;p>This user has access to view EC2 instances. Let&amp;rsquo;s check whether or not the S3 garbage cans have access.&lt;/p>
&lt;p>Let&amp;rsquo;s try to create an S3 bucket
&lt;p class="md__image">
&lt;img
src="./img/09.png"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;p>After trying to create a recycle bucket, we get a window indicating no permissions
&lt;p class="md__image">
&lt;img
src="./img/10.png"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;h2 id="questions">Questions&lt;/h2>
&lt;h3 id="q1">Q1&lt;/h3>
&lt;p>&lt;strong>A client has contracted you to review their existing AWS environment and recommend and implement best practice changes. You begin by reviewing existing users and Identity Access Management. You found out improvements that can be made with the use of the root account and Identity Access Management.&lt;/strong>&lt;/p>
&lt;p>&lt;strong>What are the best practice guidelines for use of the root account?&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>Never use the root account.&lt;/li>
&lt;li>Use the root account only to create administrator accounts.&lt;/li>
&lt;li>Use the root account to create your first IAM user and then lock away the root account.&lt;/li>
&lt;li>Use the root account to create all other accounts, and share the root account with one backup administrator.&lt;/li>
&lt;/ol>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/best-practices.html#lock-away-credentials" target="_blank">lock-away-credentials&lt;/a>
&lt;p>&lt;mark style="color:white">1&lt;/mark>&lt;/p>
&lt;/div>
&lt;/details>
&lt;h3 id="q2">Q2&lt;/h3>
&lt;p>&lt;strong>Your organization has an AWS setup and planning to build Single Sign-On for users to authenticate with on-premise Microsoft Active Directory Federation Services (ADFS) and let users log in to the AWS console using AWS STS Enterprise Identity Federation.&lt;/strong>&lt;/p>
&lt;p>&lt;strong>Which of the following services do you need to call from AWS STS service after you authenticate with your on-premise?&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>AssumeRoleWithSAML&lt;/li>
&lt;li>GetFederationToken&lt;/li>
&lt;li>AssumeRoleWithWebIdentity&lt;/li>
&lt;li>GetCallerIdentity&lt;/li>
&lt;/ol>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;a href="https://docs.aws.amazon.com/STS/latest/APIReference/API_AssumeRoleWithSAML.html" target="_blank">https://docs.aws.amazon.com/STS/latest/APIReference/API_AssumeRoleWithSAML.html&lt;/a>
&lt;a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers_saml.html" target="_blank">https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers_saml.html&lt;/a>
&lt;p>&lt;mark style="color:white">1&lt;/mark>&lt;/p>
&lt;/div>
&lt;/details>
&lt;h3 id="q3">Q3&lt;/h3>
&lt;p>&lt;strong>Alice is building a mobile application. She planned to use Multi-Factor Authentication (MFA) when accessing some AWS resources.&lt;/strong>&lt;/p>
&lt;p>&lt;strong>Which of the following APIs will be leveraged to provide temporary security credentials?&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>AssumeRoleWithSAML&lt;/li>
&lt;li>GetFederationToken&lt;/li>
&lt;li>GetSessionToken&lt;/li>
&lt;li>AssumeRoleWithWebIdentity&lt;/li>
&lt;/ol>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;p>&lt;a href="https://docs.aws.amazon.com/STS/latest/APIReference/API_GetSessionToken.html">https://docs.aws.amazon.com/STS/latest/APIReference/API_GetSessionToken.html&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://docs.aws.amazon.com/STS/latest/APIReference/API_AssumeRoleWithWebIdentity.html">AssumeRoleWithWebIdentity&lt;/a> - does not support MFA&lt;/p>
&lt;p>&lt;mark style="color:white">3&lt;/mark>&lt;/p>
&lt;/div>
&lt;/details>
&lt;h3 id="q4">Q4&lt;/h3>
&lt;p>&lt;strong>A leading insurance firm has several new members in its development team. The solutions architect was instructed to provision access to certain IAM users who perform application development tasks in the VPC.&lt;/strong>&lt;/p>
&lt;p>&lt;strong>The access should allow the users to create and configure various AWS resources, such as deploying Windows EC2 servers. In addition, the users should be able to see the permissions in AWS Organizations to view information about the user’s organization, including the master account email and organization limitations.&lt;/strong>&lt;/p>
&lt;p>&lt;strong>Which of the following should the solutions architect implement to follow the standard security advice of granting the least privilege?&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>Attach the PowerUserAccess AWS managed policy to the IAM users.&lt;/li>
&lt;li>Attach the AdministratorAccess AWS managed policy to the IAM users.&lt;/li>
&lt;li>Create a new IAM role and attach the SystemAdministrator AWS managed policy to it. Assign the IAM Role to the IAM users.&lt;/li>
&lt;li>Create a new IAM role and attach the AdministratorAccess AWS managed policy to it. Assign the IAM Role to the IAM users.&lt;/li>
&lt;/ol>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;p>AWS managed policies for job functions are designed to closely align to common job functions in the IT industry. You can use these policies to easily grant the permissions needed to carry out the tasks expected of someone in a specific job function.&lt;/p>
&lt;p>These policies consolidate permissions for many services into a single policy that’s easier to work with than having permissions scattered across many policies.&lt;/p>
&lt;p>For Developer Power Users, you can use the AWS managed policy name: PowerUserAccess if you have users who perform application development tasks. This policy will enable them to create and configure resources and services that support AWS aware application development.&lt;/p>
&lt;p>The first statement of this policy uses the NotAction element to allow all actions for all AWS services and for all resources except AWS Identity and Access Management and AWS Organizations. The second statement grants IAM permissions to create a service-linked role.&lt;/p>
&lt;p>This is required by some services that must access resources in another service, such as an Amazon S3 bucket. It also grants Organizations permissions to view information about the user’s organization, including the master account email and organization limitations.&lt;/p>
&lt;p>&lt;mark style="color:white">1&lt;/mark>&lt;/p>
&lt;/div>
&lt;/details>
&lt;h3 id="q5">Q5&lt;/h3>
&lt;p>&lt;strong>A company has 100 AWS accounts that are consolidated using AWS Organizations. The accountants from the finance department log in as IAM users in the TD-Finance AWS account. The finance team members need to read the consolidated billing information in the TD-Master AWS master account that pays the charges of all the member (linked) accounts. The required IAM access to the AWS billing services has already been provisioned in the master account.&lt;/strong>&lt;/p>
&lt;p>&lt;strong>The Security Officer should ensure that the finance team must not be able to view any other resources in the master account.&lt;/strong>&lt;/p>
&lt;p>&lt;strong>Which of the following grants the finance team the necessary permissions for the above requirement?&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>Set up an IAM group for the finance users in the TD-Finance account then attach a ViewBilling permission and AWS managed ReadOnlyAccess IAM policy to the group.&lt;/li>
&lt;li>Set up individual IAM users for the finance users in the TD-Master account then attach the AWS managed ReadOnlyAccess IAM policy to the group with cross-account access.&lt;/li>
&lt;li>Set up an AWS IAM role in the TD-Finance account with the ViewBilling permission then grant the finance users in the TD-Master account the permission to assume that role.&lt;/li>
&lt;li>Set up an IAM role in the TD-Master account with the ViewBilling permission then grant the finance users in the TD-Finance account the permission to assume the role.&lt;/li>
&lt;/ol>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;p>You can use the consolidated billing feature in AWS Organizations to consolidate billing and payment for multiple AWS accounts or multiple Amazon Internet Services Pvt. Ltd (AISPL) accounts. Every organization in AWS Organizations has a master (payer) account that pays the charges of all the member (linked) accounts.&lt;/p>
&lt;ul>
&lt;li>ModifyAccount – Allow or deny IAM users permission to modify Account Settings.&lt;/li>
&lt;li>ModifyAccount – Allow or deny IAM users permission to modify Account Settings.&lt;/li>
&lt;li>ModifyBilling – Allow or deny IAM users permission to modify billing settings.&lt;/li>
&lt;li>ModifyPaymentMethods – Allow or deny IAM users permission to modify payment methods.&lt;/li>
&lt;li>ViewAccount – Allow or deny IAM users permission to view account settings.&lt;/li>
&lt;li>ViewBilling – Allow or deny IAM users permission to view billing pages in the console.&lt;/li>
&lt;li>ViewPaymentMethods – Allow or deny IAM users permission to view payment methods.&lt;/li>
&lt;li>ViewUsage – Allow or deny IAM users permission to view AWS usage reports.&lt;/li>
&lt;/ul>
&lt;p>Use policies to grant permissions to perform an operation in AWS. When you use an action in a policy, you usually allow or deny access to the API operation or CLI command with the same name. However, in some cases, a single action controls access to more than one operation.&lt;/p>
&lt;p>&lt;mark style="color:white">4&lt;/mark>&lt;/p>
&lt;/div>
&lt;/details>
&lt;h2 id="resources">Resources&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/best-practices.html">Security best practices in IAM&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://catalog.us-east-1.prod.workshops.aws/workshops/8efd4edb-2b91-49fd-b1b8-3e3b5e71aa03/en-US/iam">IAM Hands-On Lab&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://workshops.aws/categories/IAM">IAM Workshops&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://awssecworkshops.com/getting-started/">Security workshop&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://tutorialsdojo.com/aws-identity-and-access-management-iam/">tutorialsdojo digest&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="community-posts">Community posts&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="https://dev.to/romankurnovskii/aws-iam-cheet-sheet-3if4">https://dev.to/romankurnovskii/aws-iam-cheet-sheet-3if4&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>EC2</title><link>https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/ec2/</link><pubDate>Sat, 10 Sep 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/ec2/</guid><description>&lt;h2 id="about">About&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://aws.amazon.com/ec2/">AWS EC2&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.aws.amazon.com/ec2/?id=docs_gateway">AWS EC2 User Guide&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Amazon Elastic Compute Cloud (EC2) - one of the most popular AWS services.&lt;/p>
&lt;p>Allows:&lt;/p>
&lt;ul>
&lt;li>to run different types of cloud instances and pay-per-use models.&lt;/li>
&lt;li>to control computing resources at the operating system level&lt;/li>
&lt;li>working in an Amazon computing environment.&lt;/li>
&lt;/ul>
&lt;h2 id="digest">Digest&lt;/h2>
&lt;ul>
&lt;li>EC2 &amp;amp; EBS&lt;/li>
&lt;li>EC2 (Elastic Compute Cloud) Instance&lt;/li>
&lt;li>EBS (Elastic Block Store) - Persistent storage volume&lt;/li>
&lt;li>AMI (Amazon Machine Image) - Packages OS and additional installations in a reusable template&lt;/li>
&lt;li>Instance and Instance Types: General Purpose (t-type and m-type), Compute Optimized(c-type), GPU Graphics, GPU Compute, Memory Optimized(r, × and z-type), and Storage Optimized(d, h and i-type)&lt;/li>
&lt;li>Purchasing Options: On Demand, Reserved, Scheduled, Spot, Dedicated Instance and Dedicated Host&lt;/li>
&lt;li>Spot: Partial hours are not billed if terminated by AWS EC2&lt;/li>
&lt;li>Secure login information for your instances using key pairs&lt;/li>
&lt;li>Placement group: Cluster and Spread&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>For root:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>General purpose SSD (balances price &amp;amp; performance)&lt;/li>
&lt;li>Provisioned OPS SD (Highest performance for mission critical low-latency or high throughput workloads)&lt;/li>
&lt;li>Magnetic HDD (previous generation)&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>For other:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Throughput Provisioned HDD (low cost for frequently accessed, throughput intensive workloads)&lt;/li>
&lt;li>Cold HDD (lowest cost for less frequently workloads)&lt;/li>
&lt;li>Instance Store - temporary storage volume in which data is deleted when you STOP or TERMINATE your instance&lt;/li>
&lt;/ul>
&lt;h2 id="price">Price&lt;/h2>
&lt;p>&lt;strong>Pricing models:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>On Demand - pay a fixed rate by the hour/second with no commitment. You can provision and terminate it at any given time.&lt;/li>
&lt;li>Reserved - you get capacity reservation, basically purchase an instance for a fixed time of period. The longer, the cheaper.&lt;/li>
&lt;li>Spot - Enables you to bid whatever price you want for instances or pay the spot price. Dedicated Hosts - physical EC2 server dedicated for your use.&lt;/li>
&lt;/ul>
&lt;p>&lt;a href="https://aws.amazon.com/ec2/pricing/">Current price&lt;/a>&lt;/p>
&lt;h2 id="practice">Practice&lt;/h2>
&lt;div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
&lt;iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" loading="eager" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/Lng4wP26_nk?autoplay=0&amp;amp;controls=1&amp;amp;end=0&amp;amp;loop=0&amp;amp;mute=0&amp;amp;start=0" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" title="YouTube video">&lt;/iframe>
&lt;/div>
&lt;h3 id="tldr">TL;DR&lt;/h3>
&lt;ol>
&lt;li>Choose a region close to you&lt;/li>
&lt;li>Go to EC2 service&lt;/li>
&lt;li>Click on &amp;ldquo;Instances&amp;rdquo; in the menu and click on &amp;ldquo;Launch instances&amp;rdquo;&lt;/li>
&lt;li>Choose image: Amazon Linux 2&lt;/li>
&lt;li>Choose instance type: t2.micro&lt;/li>
&lt;li>Make sure &amp;ldquo;Delete on Termination&amp;rdquo; is checked in the storage section&lt;/li>
&lt;li>Under the &amp;ldquo;User data&amp;rdquo; field the following:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>yum update -y
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>yum install -y httpd
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>systemctl start httpd
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>systemctl &lt;span style="color:#007020">enable&lt;/span> httpd
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020">echo&lt;/span> &lt;span style="color:#4070a0">&amp;#34;&amp;lt;h1&amp;gt;Hello from web!&amp;lt;/h1&amp;gt;&amp;#34;&lt;/span> &amp;gt; /var/www/html/index.html
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="8">
&lt;li>Add tags with the following keys and values:&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>key &amp;ldquo;Type&amp;rdquo; and the value &amp;ldquo;web&amp;rdquo;&lt;/li>
&lt;li>key &amp;ldquo;Name&amp;rdquo; and the value &amp;ldquo;web-1&amp;rdquo;&lt;/li>
&lt;/ul>
&lt;ol start="9">
&lt;li>In the security group section, add a rule to accept HTTP traffic (TCP) on port 80 from anywhere&lt;/li>
&lt;li>Click on &amp;ldquo;Review&amp;rdquo; and then click on &amp;ldquo;Launch&amp;rdquo; after reviewing.&lt;/li>
&lt;li>If you don&amp;rsquo;t have a key pair, create one and download it.&lt;/li>
&lt;li>Now HTTP traffic (port 80) should be accepted from anywhere&lt;/li>
&lt;/ol>
&lt;h3 id="create-an-ec2-instance">Create an EC2 Instance&lt;/h3>
&lt;p>Go to &lt;a href="https://us-west-2.console.aws.amazon.com/ec2/v2/home?region=us-west-2">EC2 page&lt;/a> -&amp;gt; Launch Instance&lt;/p>
&lt;p>&lt;p class="md__image">
&lt;img
src="./img/01.png"
id="zoom-default"
alt="01.png"
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;h4 id="ec2-image">EC2 image&lt;/h4>
&lt;p>Choose the image we want
&lt;p class="md__image">
&lt;img
src="./img/02.png"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;h4 id="create-keys">Create keys&lt;/h4>
&lt;p>Let&amp;rsquo;s create a key to use to connect to the instance externally&lt;/p>
&lt;p>&lt;p class="md__image">
&lt;img
src="./img/03.png"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;p>Enter any name you want. Leave all other parameters by default&lt;/p>
&lt;p>&lt;p class="md__image">
&lt;img
src="./img/04.png"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;p>After the key is created it will start automatic downloading. You need it to connect to EC2 from your local terminal&lt;/p>
&lt;h4 id="network-settings">Network Settings&lt;/h4>
&lt;p>Under &lt;strong>Network Settings&lt;/strong> I leave &lt;strong>Allow SSH traffic from&lt;/strong>&lt;/p>
&lt;p>&lt;p class="md__image">
&lt;img
src="./img/05.png"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;h4 id="create">Create&lt;/h4>
&lt;p>Click &lt;strong>Launch Instance&lt;/strong>&lt;/p>
&lt;p>The Instance has been created and is available for connection&lt;/p>
&lt;p>&lt;p class="md__image">
&lt;img
src="./img/06.png"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;h3 id="connecting-to-ec2-from-the-terminal">Connecting to EC2 from the terminal&lt;/h3>
&lt;p>Connect to EC2 from a local terminal&lt;/p>
&lt;p>Let&amp;rsquo;s move previously created and downloaded &lt;mark>mykey&lt;/mark> key to home folder of current user and give permissions to file &lt;code>CHMOD 400&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020">cd&lt;/span> ~
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020">cd&lt;/span> Downloads/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mv mykey.pem &lt;span style="color:#bb60d5">$HOME&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020">cd&lt;/span> ..
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>chmod &lt;span style="color:#40a070">400&lt;/span> mykey.pem
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;p class="md__image">
&lt;img
src="./img/07.png"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;p>To connect, we need a public iPv4 address. Find it on the instance page&lt;/p>
&lt;p>&lt;p class="md__image">
&lt;img
src="./img/08.png"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;p>Connect with the command &lt;code>ssh&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>ssh -i mykey.pem ec2-user@52.24.109.78
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;p class="md__image">
&lt;img
src="./img/03.png"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;h2 id="questions">Questions&lt;/h2>
&lt;h3 id="q1">Q1&lt;/h3>
&lt;p>&lt;strong>A company is migrating a legacy application to Amazon EC2. The application uses a username and password stored in the source code to connect to a MySQL database. The database will be migrated to an Amazon RDS for MySQL DB instance. As part of the migration, the company wants to implement a secure way to store and automatically rotate the database credentials.&lt;/strong>&lt;/p>
&lt;p>&lt;strong>Which approach meets these requirements?&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>Store the database credentials in environment variables in an Amazon Machine Image (AMI). Rotate the credentials by replacing the AMI.&lt;/li>
&lt;li>Store the database credentials in AWS Systems Manager Parameter Store. Configure Parameter Store to automatically rotate the credentials.&lt;/li>
&lt;li>Store the database credentials in environment variables on the EC2 instances. Rotate the credentials by relaunching the EC2 instances.&lt;/li>
&lt;li>Store the database credentials in AWS Secrets Manager. Configure Secrets Manager to automatically rotate the credentials&lt;/li>
&lt;/ol>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;p>&lt;a href="https://aws.amazon.com/secrets-manager/">AWS Secrets Manager&lt;/a>&lt;/p>
&lt;p>Secrets Manager offers &lt;a href="https://aws.amazon.com/blogs/security/rotate-amazon-rds-database-credentials-automatically-with-aws-secrets-manager/">secret rotation&lt;/a>&lt;/p>
&lt;p>&lt;mark style="color:white">4&lt;/mark>&lt;/p>
&lt;/div>
&lt;/details>
&lt;h3 id="q2">Q2&lt;/h3>
&lt;p>&lt;strong>An organization needs to provision a new Amazon EC2 instance with a persistent block storage volume to migrate data from its on-premises network to AWS. The required maximum performance for the storage volume is 64,000 IOPS.&lt;/strong>&lt;/p>
&lt;p>&lt;strong>In this scenario, which of the following can be used to fulfill this requirement?&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>Directly attach multiple Instance Store volumes in an EC2 instance to deliver maximum IOPS performance.&lt;/li>
&lt;li>Launch a Nitro-based EC2 instance and attach a Provisioned IOPS SSD EBS volume (io1) with 64,000 IOPS.&lt;/li>
&lt;li>Launch an Amazon EFS file system and mount it to a Nitro-based Amazon EC2 instance and set the performance mode to Max I/O.&lt;/li>
&lt;li>Launch any type of Amazon EC2 instance and attach a Provisioned IOPS SSD EBS volume (io1) with 64,000 IOPS.&lt;/li>
&lt;/ol>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;p>An Amazon EBS volume is a durable, block-level storage device that you can attach to your instances. After you attach a volume to an instance, you can use it as you would use a physical hard drive. EBS volumes are flexible.&lt;/p>
&lt;p>The AWS Nitro System is the underlying platform for the latest generation of EC2 instances that enables AWS to innovate faster, further reduce the cost of the customers, and deliver added benefits like increased security and new instance types.&lt;/p>
&lt;p>Amazon EBS is a persistent block storage volume. It can persist independently from the life of an instance. Since the scenario requires you to have an EBS volume with up to 64,000 IOPS, you have to launch a Nitro-based EC2 instance.&lt;/p>
&lt;p>&lt;a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-volume-types.html#EBSVolumeTypes_piops">Amazon EBS volume types&lt;/a>&lt;/p>
&lt;p>&lt;mark style="color:white">2&lt;/mark>&lt;/p>
&lt;/div>
&lt;/details>
&lt;h3 id="q3">Q3&lt;/h3>
&lt;p>&lt;strong>A Database Specialist manages an EBS-Optimized Amazon RDS for MySQL DB instance with Provisioned IOPS storage. The users recently raised a database IO latency issue during peak hours when it was always under a heavy workload. Upon review, the Specialist noticed that the RDS DB instance was barely using the maximum IOPS configured but was fully utilizing the maximum bandwidth for the required throughput. CloudWatch metrics showed that CPU and Memory utilization were at optimum levels.&lt;/strong>&lt;/p>
&lt;p>&lt;strong>Which action should the Database Specialist take to fix the performance issue?&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>Change the underlying EBS storage type of the instance to General Purpose (SSD).&lt;/li>
&lt;li>Modify the DB instance to an EBS-Optimized instance class with higher maximum bandwidth.&lt;/li>
&lt;li>Disable EBS optimization on the MySQL DB instance to allow higher maximum bandwidth.&lt;/li>
&lt;li>Modify the DB instance to increase the size and corresponding Provisioned IOPS allocated to the storage.&lt;/li>
&lt;/ol>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;p>Amazon RDS volumes are built using Amazon EBS volumes, except for Amazon Aurora, which uses an SSD-backed virtualized storage layer purpose-built for database workloads. RDS currently supports both magnetic and SSD-based storage volume types. There are two supported Amazon EBS SSD-based storage types, Provisioned IOPS (called io1) and General Purpose (called gp2).&lt;/p>
&lt;p>Provisioned IOPS storage is a storage type that delivers predictable performance and consistently low latency. If your workload is I/O constrained, using Provisioned IOPS SSD storage can increase the number of I/O requests that the system can process concurrently.&lt;/p>
&lt;p>Provisioned IOPS SSD storage provides a way to reserve I/O capacity by specifying IOPS. However, as with any other system capacity attribute, its maximum throughput under load is constrained by the resource that is consumed first. That resource might be network bandwidth, CPU, memory, or database internal resources.&lt;/p>
&lt;p>EBS–optimized instances deliver dedicated bandwidth to Amazon EBS. When attached to an EBS–optimized instance, Provisioned IOPS SSD (io1) volumes are designed to achieve their provisioned performance, 99.9% of the time. Choose an EBS–optimized instance that provides more dedicated Amazon EBS throughput than your application needs; otherwise, the connection between Amazon EBS and Amazon EC2 can become a performance bottleneck.&lt;/p>
&lt;p>&lt;mark style="color:white">2&lt;/mark>&lt;/p>
&lt;/div>
&lt;/details>
&lt;h3 id="q4">Q4&lt;/h3>
&lt;p>&lt;strong>A developer deployed an application to an Amazon EC2 instance. The application needs to know the public IPv4 address of the instance.&lt;/strong>&lt;/p>
&lt;p>&lt;strong>How can the application find this information?&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>Query the instance metadata from &lt;a href="http://169.254.169.254/latest/meta-data/">http://169.254.169.254/latest/meta-data/&lt;/a>.&lt;/li>
&lt;li>Query the instance user data from &lt;a href="http://169.254.169.254/latest/user-data/">http://169.254.169.254/latest/user-data/&lt;/a>.&lt;/li>
&lt;li>Query the Amazon Machine Image (AMI) information from &lt;a href="http://169.254">http://169.254&lt;/a> 169.254/latest/meta-data/ami/.&lt;/li>
&lt;li>Check the hosts file of the operating system.&lt;/li>
&lt;/ol>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;p>&lt;mark style="color:white">1&lt;/mark>&lt;/p>
&lt;/div>
&lt;/details>
&lt;h3 id="q5">Q5&lt;/h3>
&lt;p>&lt;strong>You are configuring a Jenkins project that is installed on an Amazon &lt;a href="../ec2">EC2&lt;/a> instance running a Windows operating system. You want this Jenkins project to integrate with AWS CodePipeline.&lt;/strong>&lt;/p>
&lt;p>&lt;strong>Which actions should you take to make this function perform correctly? (2 answers)&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>Restart all Amazon &lt;a href="../ec2">EC2&lt;/a> instances that are running a Windows operating system.&lt;/li>
&lt;li>Provide the IAM user credentials to integrate AWS CodePipeline.&lt;/li>
&lt;li>Fill out the required fields for your proxy host.&lt;/li>
&lt;li>Modify the PATH variable to include the directory where you installed Jenkins on all Amazon &lt;a href="../ec2">EC2&lt;/a> instance that are running a Windows operating system.&lt;/li>
&lt;/ol>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;p>&lt;a href="https://docs.aws.amazon.com/codepipeline/latest/userguide/tutorials-four-stage-pipeline.html">https://docs.aws.amazon.com/codepipeline/latest/userguide/tutorials-four-stage-pipeline.html&lt;/a>&lt;/p>
&lt;p>&lt;mark style="color:white">2, 3&lt;/mark>&lt;/p>
&lt;/div>
&lt;/details>
&lt;h2 id="resources">Resources&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://catalog.us-east-1.prod.workshops.aws/workshops/8efd4edb-2b91-49fd-b1b8-3e3b5e71aa03/en-US/ec2/ec2linux">EC2 Linux Hands-On Lab&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://aws.amazon.com/ebs/faqs/">EB FAQ&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://tutorialsdojo.com/amazon-elastic-compute-cloud-amazon-ec2/">EC2 Digest&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://tutorialsdojo.com/amazon-ebs/">EB Digest&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="community-posts">Community posts&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="https://dev.to/romankurnovskii/aws-ec2-cheat-sheet-2mhp">https://dev.to/romankurnovskii/aws-ec2-cheat-sheet-2mhp&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Elastic Beanstalk</title><link>https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/elasticbeanstalk/</link><pubDate>Sat, 10 Sep 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/elasticbeanstalk/</guid><description>&lt;h2 id="about">About&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://aws.amazon.com/elasticbeanstalk/?id=docs_gateway">AWS Elastic Beanstalk&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>AWS Elastic Beanstalk is an easy-to-use service for deploying and scaling web applications and services developed with Java, .NET, PHP, Node.js, Python, Ruby, Go, and Docker on familiar servers such as Apache, Nginx, Passenger, and IIS.&lt;/p>
&lt;p>Deploying &lt;strong>new application&lt;/strong> versions &lt;strong>to existing&lt;/strong> resources in AWS Elastic Beanstalk happens &lt;strong>much faster&lt;/strong> (typically under a minute) and once again is mostly dependent on the size of the new application version.&lt;/p>
&lt;p>&lt;p class="md__image">
&lt;img
src="./img/clearbox-flow-00.png"
id="zoom-default"
alt="flow"
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;h2 id="digest">Digest&lt;/h2>
&lt;ul>
&lt;li>When you want to use new run time capabilities with elastic bean stalk, it is better to use blue-green deployment&lt;/li>
&lt;li>Security group will not be removed when removing the stack with elastic bean stalk&lt;/li>
&lt;li>For long running tasks - Use &lt;code>Elastic Beanstalk&lt;/code> worker environment to process the tasks asynchronously&lt;/li>
&lt;li>Launch configuration is used for modifying instance type, key pair, elastic block storage and other settings that can be configured only when launching the instance&lt;/li>
&lt;li>Rolling with Additional Batch and Immutable both involve provisioning new servers to ensure capacity is not reduced. All At Once means the application will be offline for the duration of the update. Performing a Rolling Update without an additional batch of servers means a reduction in capacity. &lt;a href="https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/using-features.deploy-existing-version.html">https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/using-features.deploy-existing-version.html&lt;/a>&lt;/li>
&lt;li>For Blue green deployment - Use Elastic beanstalk swap URL feature or route 53 with weighted routing policies&lt;/li>
&lt;li>You create your own Elastic Beanstalk platform using Packer, which is an open-source tool for creating machine images for many platforms, including AMIs for use
with Amazon Elastic Compute Cloud (Amazon EC2).&lt;/li>
&lt;/ul>
&lt;h2 id="price">Price&lt;/h2>
&lt;p>There is no additional charge for AWS Elastic Beanstalk. Only the AWS resources required to store and run applications are charged.&lt;/p>
&lt;h2 id="concepts">Concepts&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/concepts.html">AWS doc&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="applications">Applications&lt;/h3>
&lt;p>An application is a collection of different elements, such as environments, environment configurations, and application versions.&lt;/p>
&lt;p>You can have multiple application versions held within an application.&lt;/p>
&lt;h3 id="application-version">Application Version&lt;/h3>
&lt;p>An application version is a very specific reference to a section of deployable code. The application version will point typically to simple storage service (S3) where the deployable code may reside.&lt;/p>
&lt;h3 id="environment-configurations">Environment Configurations&lt;/h3>
&lt;p>An environment configuration is a collection of parameters and settings that dictate how an environment will have its resources provisioned by Elastic Beanstalk and how these resources will behave.&lt;/p>
&lt;h3 id="environment">Environment&lt;/h3>
&lt;p>An environment refers to an application version that has been deployed on AWS resources. These resources are configured and provisioned by AWS Elastic Beanstalk. At this stage the application is deployed as a solution and becomes operational within your environment.&lt;/p>
&lt;p>The “environment” is comprised of ALL the resources created by Elastic Beanstalk and not just an EC2 instance with your uploaded code.&lt;/p>
&lt;h3 id="environment-tier">Environment Tier&lt;/h3>
&lt;p>Reflects on how Elastic Beanstalk provisions resources based on what the application is designed to do. If the application manages and handles HTTP requests, then the app will be run in a web server environment.&lt;/p>
&lt;p>&lt;p class="md__image">
&lt;img
src="https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/images/wizard-choosetier.png"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;h3 id="configuration-template">Configuration Template&lt;/h3>
&lt;p>This is the template that provides the baseline for creating a new, unique, environment configuration.&lt;/p>
&lt;h3 id="platform">Platform&lt;/h3>
&lt;p>Culmination of components in which you can build your application upon using Elastic Beanstalk. These are comprised of the OS of the instance, the programming language, the server type (web or application), and components of Elastic Beanstalk&lt;/p>
&lt;h2 id="deployment-policies">Deployment policies&lt;/h2>
&lt;ul>
&lt;li>&lt;strong>All at once&lt;/strong> – deploys the new version to all instances simultaneously and will be out of service for a short time.&lt;/li>
&lt;li>&lt;strong>Rolling&lt;/strong> – deploys the new version in batches.&lt;/li>
&lt;li>&lt;strong>Rolling with additional batch&lt;/strong> – deploys the new version in batches, but first launch a new batch of instances.&lt;/li>
&lt;li>&lt;strong>Immutable&lt;/strong> – deploys the new version to a new set of instances.&lt;/li>
&lt;li>&lt;strong>Traffic splitting&lt;/strong> – deploys the new version to a new set of instances and temporarily split incoming client traffic.&lt;/li>
&lt;/ul>
&lt;p>&lt;p class="md__image">
&lt;img
src="./img/18.png"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;h2 id="practice">Practice&lt;/h2>
&lt;div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
&lt;iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" loading="eager" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/Kt55Q3ijoh4?autoplay=0&amp;amp;controls=1&amp;amp;end=0&amp;amp;loop=0&amp;amp;mute=0&amp;amp;start=0" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" title="YouTube video">&lt;/iframe>
&lt;/div>
&lt;h3 id="controlled-deployment-with-aws-elastic-beanstalk">Controlled deployment with AWS Elastic Beanstalk&lt;/h3>
&lt;p>Lab &lt;a href="https://cloudacademy.com/lab/run-controlled-deploy-aws-elastic-beanstalk/?context_resource=lp&amp;amp;context_id=4364">Controlled deployment with AWS Elastic Beanstalk&lt;/a>&lt;/p>
&lt;p>In this lab, we will deploy several application version updates in a load-balanced, auto-scaling environment.&lt;/p>
&lt;p>The first update is deployed using a simple deployment. The second update is deployed using a `blue-green&amp;rsquo; deployment, where a separate environment is created to run the new version of the application, and the DNS switch switches incoming traffic to the new environment.&lt;/p>
&lt;p>The final deployment architecture will look like this&lt;/p>
&lt;p>&lt;p class="md__image">
&lt;img
src="./img/02.png"
id="zoom-default"
alt="02.png"
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;h4 id="loading-the-application">Loading the application&lt;/h4>
&lt;p>In this review, I&amp;rsquo;m using the code that Cloudacademy provided me, but I have a ready-made launch script that you can download from Elastic Beanstalk: &lt;a href="./files/nodejs.zip">download&lt;/a>&lt;/p>
&lt;h5 id="create">Create&lt;/h5>
&lt;p>Go to &lt;strong>Elastic Beanstalk&lt;/strong> page and click &lt;code>Create Application&lt;/code>.&lt;/p>
&lt;p>&lt;p class="md__image">
&lt;img
src="./img/03.png"
id="zoom-default"
alt="03.png"
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;h5 id="set-name">Set Name&lt;/h5>
&lt;p>Specify a name for the new application
&lt;p class="md__image">
&lt;img
src="./img/04.png"
id="zoom-default"
alt="04.png"
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;h5 id="choose-platform">Choose platform&lt;/h5>
&lt;p>Under &lt;code>Platform&lt;/code> choose the desired platform of the application. In our case - &lt;code>Node.js&lt;/code>.
&lt;p class="md__image">
&lt;img
src="./img/05.png"
id="zoom-default"
alt="05.png"
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;h5 id="download-source-code">Download source code&lt;/h5>
&lt;p>Under &lt;code>Source code origin&lt;/code> specify the version of the application and download the archive with the application. &lt;a href="./files/nodejs.zip">Example&lt;/a>&lt;/p>
&lt;p>&lt;p class="md__image">
&lt;img
src="./img/06.png"
id="zoom-default"
alt="06.png"
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;h5 id="application-configuration">Application Configuration&lt;/h5>
&lt;p>Change the preset &lt;code>Configuration&lt;/code> to &lt;code>Custom configuration&lt;/code>:&lt;/p>
&lt;p>&lt;p class="md__image">
&lt;img
src="./img/07.png"
id="zoom-default"
alt="07.png"
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;p>Click &lt;strong>Edit&lt;/strong> under &lt;strong>Rolling updates and deployments&lt;/strong>&lt;/p>
&lt;p>In the default configuration, updates are distributed to all instances at the same time. This leads to application downtime, which is unacceptable for production environments.&lt;/p>
&lt;p>We will set &lt;code>Rolling&lt;/code> and &lt;code>Batch size&lt;/code> to 30%&lt;/p>
&lt;p>&lt;p class="md__image">
&lt;img
src="./img/08.png"
id="zoom-default"
alt="08.png"
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;h5 id="network">Network&lt;/h5>
&lt;p>Back in the main application form, click &lt;strong>Edit&lt;/strong> in the &lt;strong>Network&lt;/strong> configuration.&lt;/p>
&lt;p>On the &lt;strong>Modify network&lt;/strong> form, configure the following values, then &lt;strong>Save&lt;/strong>.&lt;/p>
&lt;p>&lt;strong>VPC&lt;/strong>: Select VPC with CIDR block &lt;strong>10.0.0.0/16&lt;/strong>. This will not be the default VPC.
&lt;strong>Load balancer settings&lt;/strong>:
&lt;strong>Load balancer subnets&lt;/strong>: Select subnets with CIDR blocks &lt;strong>10.0.100.0/24&lt;/strong>(&lt;strong>us-west-2a&lt;/strong>)and &lt;strong>10.0.101.0/24&lt;/strong> (&lt;strong>us-west-2b&lt;/strong>). These are public subnets. The application load balancer requires at least two subnets in different availability zones
&lt;strong>Instance settings&lt;/strong>:
* &lt;strong>Instance subnets&lt;/strong>: Select a subnet with CIDR block &lt;strong>10.0.1.0/24&lt;/strong>. This is a private subnet.&lt;/p>
&lt;p>&lt;p class="md__image">
&lt;img
src="./img/09.png"
id="zoom-default"
alt="09.png"
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;p>&lt;p class="md__image">
&lt;img
src="./img/10.png"
id="zoom-default"
alt="10.png"
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;h5 id="confirmation">Confirmation&lt;/h5>
&lt;p>Press &lt;code>Create app&lt;/code>.&lt;/p>
&lt;p>The app creation process takes from 5 minutes.&lt;/p>
&lt;p>Then go to Dasboard
&lt;p class="md__image">
&lt;img
src="./img/11.png"
id="zoom-default"
alt="11.png"
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;p>This concludes the loading phase of the app in Elastic Beanstalk. Next, let&amp;rsquo;s break down how to switch the downloading of the new version of the application to the clients.&lt;/p>
&lt;h4 id="downloading-version-2-of-the-app">Downloading version 2 of the app&lt;/h4>
&lt;h5 id="downloading-version-20">Downloading version 2.0&lt;/h5>
&lt;p>Press &lt;code>Upload and deploy&lt;/code> and download the updated code. For example, you can change the text in the same source code for comparison.&lt;/p>
&lt;p>&lt;p class="md__image">
&lt;img
src="./img/12.png"
id="zoom-default"
alt="12.png"
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;p>Specify new version and publication settings
&lt;p class="md__image">
&lt;img
src="./img/13.png"
id="zoom-default"
alt="13.png"
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;h4 id="version-comparison">Version comparison&lt;/h4>
&lt;p>Now we can compare both versions by following the links. In my case the applications look like this&lt;/p>
&lt;p>&lt;p class="md__image">
&lt;img
src="./img/15.png"
id="zoom-default"
alt="15.png"
loading="lazy"
/>
&lt;/p>
&lt;p class="md__image">
&lt;img
src="./img/14.png"
id="zoom-default"
alt="14.png"
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;h4 id="changing-the-url-of-the-apps">Changing the url of the apps&lt;/h4>
&lt;p>Now let&amp;rsquo;s swap the apps around. So that a user who previously went to one address will now see the 2nd version of the app.&lt;/p>
&lt;p>Under &lt;code>Actions&lt;/code>, click on &lt;code>Swap environment URLs&lt;/code> and then select the app you want to swap&lt;/p>
&lt;p>&lt;p class="md__image">
&lt;img
src="./img/16.png"
id="zoom-default"
alt="16.png"
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;h5 id="removing-elastic-beanstalk-resources">Removing Elastic Beanstalk resources&lt;/h5>
&lt;p>Elastic Beanstalk runs EC2 instances as well as other services to deploy applications. But you can remove all services from a single window.&lt;/p>
&lt;ol>
&lt;li>go to the Applications section&lt;/li>
&lt;li>Select an application.f&lt;/li>
&lt;li>Click on Actions -&amp;gt; Terminate environment Translated with &amp;lt;www.DeepL.com/Translator&amp;gt; (free version)&lt;/li>
&lt;/ol>
&lt;p>&lt;p class="md__image">
&lt;img
src="./img/17.png"
id="zoom-default"
alt="17.png"
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;h2 id="questions">Questions&lt;/h2>
&lt;h3 id="q1">Q1&lt;/h3>
&lt;p>&lt;strong>You are building a web application that will run in an AWS ElasticBeanstalk environment. You need to add and configure an Amazon ElastiCache cluster into the environment immediately after the application is deployed.&lt;/strong>&lt;/p>
&lt;p>&lt;strong>What is the most efficient method to ensure that the cluster is deployed immediately after the EB application is deployed?&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>Use the AWS Management Console to create and configure the cluster.&lt;/li>
&lt;li>Create a cron job to schedule the cluster deployment using the &lt;strong>&lt;em>aws cloudformation deploy&lt;/em>&lt;/strong> command&lt;/li>
&lt;li>Create a configuration file with the .config extension and place it into the .ebextensions folder in the application package.&lt;/li>
&lt;li>Build an AWS Lambda function that polls to the ElasticBeanstalk environment deployments and create and configure the Amazon ElastiCache cluster.&lt;/li>
&lt;/ol>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;p>[&lt;a href="https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/environment-resources.html">AWS Secrets Manager&lt;/a>](&lt;a href="https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/environment-resources.html">https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/environment-resources.html&lt;/a>)&lt;/p>
&lt;p>&lt;mark style="color:white">3&lt;/mark>&lt;/p>
&lt;/div>
&lt;/details>
&lt;h3 id="q2">Q2&lt;/h3>
&lt;p>&lt;strong>Emily is building a web application using AWS ElasticBeanstalk. The application uses static images like icons, buttons and logos. Emily is looking for a way to serve these static images in a performant way that will not disrupt user sessions.&lt;/strong>&lt;/p>
&lt;p>&lt;strong>Which of the following options would meet this requirement?&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>Use an Amazon Elastic File System (EFS) volume to serve the static image files.&lt;/li>
&lt;li>Configure the AWS ElasticBeanstalk proxy server to serve the static image files.&lt;/li>
&lt;li>Use an Amazon S3 bucket to serve the static image files.&lt;/li>
&lt;li>Use an Amazon Elastic Block Store (EBS) volume to serve the static image files.&lt;/li>
&lt;/ol>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;p>&lt;a href="https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/environment-cfg-staticfiles.html">https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/environment-cfg-staticfiles.html&lt;/a>&lt;/p>
&lt;p>An Amazon S3 bucket would work, but the AWS ElasticBeanstalk proxy server would need to route the requests to the static files to a different place anytime they need to be shown.&lt;/p>
&lt;p>&lt;mark style="color:white">2&lt;/mark>&lt;/p>
&lt;/div>
&lt;/details>
&lt;h3 id="q3">Q3&lt;/h3>
&lt;p>&lt;strong>An online shopping platform has been deployed to AWS using Elastic Beanstalk. They simply uploaded their Node.js application, and Elastic Beanstalk automatically handles the details of capacity provisioning, load balancing, scaling, and application health monitoring. Since the entire deployment process is automated, the DevOps team is not sure where to get the application log files of their shopping platform.&lt;/strong>&lt;/p>
&lt;p>&lt;strong>In Elastic Beanstalk, where does it store the application files and server log files?&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>Application files are stored in S3. The server log files can only be stored in the attached EBS volumes of the EC2 instances, which were launched by AWS Elastic Beanstalk.&lt;/li>
&lt;li>Application files are stored in S3. The server log files can be stored directly in Glacier or in CloudWatch Logs.&lt;/li>
&lt;li>Application files are stored in S3. The server log files can be optionally stored in CloudTrail or in CloudWatch Logs.&lt;/li>
&lt;li>Application files are stored in S3. The server log files can also optionally be stored in S3 or in CloudWatch Logs.&lt;/li>
&lt;/ol>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;p>AWS Elastic Beanstalk stores your application files and optionally, server log files in Amazon S3. If you are using the AWS Management Console, the AWS Toolkit for Visual Studio, or AWS Toolkit for Eclipse, an Amazon S3 bucket will be created in your account and the files you upload will be automatically copied from your local client to Amazon S3.&lt;/p>
&lt;p>Optionally, you may configure Elastic Beanstalk to copy your server log files every hour to Amazon S3. You do this by editing the environment configuration settings.&lt;/p>
&lt;p>With CloudWatch Logs, you can monitor and archive your Elastic Beanstalk application, system, and custom log files from Amazon EC2 instances of your environments. You can also configure alarms that make it easier for you to react to specific log stream events that your metric filters extract.&lt;/p>
&lt;p>The CloudWatch Logs agent installed on each Amazon EC2 instance in your environment publishes metric data points to the CloudWatch service for each log group you configure.&lt;/p>
&lt;p>Each log group applies its own filter patterns to determine what log stream events to send to CloudWatch as data points. Log streams that belong to the same log group share the same retention, monitoring, and access control settings. You can configure Elastic Beanstalk to automatically stream logs to the CloudWatch service.&lt;/p>
&lt;p>The option that says: &lt;em>Application files are stored in S3. The server log files can be optionally stored in CloudTrail or in CloudWatch Logs&lt;/em> is incorrect because the server log files can optionally be stored in either S3 or CloudWatch Logs, but not directly to CloudTrail as this service is primarily used for auditing API calls.&lt;/p>
&lt;p>&lt;mark style="color:white">4&lt;/mark>&lt;/p>
&lt;/div>
&lt;/details>
&lt;h3 id="q4">Q4&lt;/h3>
&lt;p>&lt;strong>A former colleague reached out to you for consultation. He uploads a Django project in Elastic Beanstalk through CLI using instructions he read in a blog post, but for some reason he could not create the environment he needs for his project. He encounters an error message saying “The instance profile aws-elasticbeanstalk-ec2-role associated with the environment does not exist.”&lt;/strong>&lt;/p>
&lt;p>&lt;strong>What are the possible causes of this issue? (Select TWO.)&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>He selected the wrong platform for the Django code.&lt;/li>
&lt;li>Elastic Beanstalk CLI did not create one because your IAM role has no permission to create roles.&lt;/li>
&lt;li>Instance profile container for the role needs to be manually replaced every time a new environment is launched.&lt;/li>
&lt;li>You have not associated an Elastic Beanstalk role to your CLI.&lt;/li>
&lt;li>IAM role already exists but has insufficient permissions that Elastic Beanstalk needs.&lt;/li>
&lt;/ol>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;p>AWS EB CLI cannot create the instance profile for your beanstalk environment if your IAM role has no access to creating roles.&lt;/p>
&lt;p>This error is also thrown when the instance profile has insufficient or outdates policies that beanstalk needs to function. More details on this can be seen on the references provided.&lt;/p>
&lt;p>&lt;mark style="color:white">2, 5&lt;/mark>&lt;/p>
&lt;/div>
&lt;/details>
&lt;h2 id="resources">Resources&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/tutorials.html">https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/tutorials.html&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/tutorials.html">Tutorials and samples&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="community-posts">Community posts&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="https://dev.to/romankurnovskii/todo-aws-aws-elastic-beanstalk-cheat-sheet-1718">https://dev.to/romankurnovskii/todo-aws-aws-elastic-beanstalk-cheat-sheet-1718&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://dev.to/romankurnovskii/aws-elastic-beanstalk-top-questions-certified-developer-exam-478g">https://dev.to/romankurnovskii/aws-elastic-beanstalk-top-questions-certified-developer-exam-478g&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Lambda</title><link>https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/lambda/</link><pubDate>Sun, 11 Sep 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/lambda/</guid><description>&lt;h2 id="about">About&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://aws.amazon.com/lambda/">AWS Lambda&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.aws.amazon.com/lambda/?id=docs_gateway">AWS Lambda User Guide&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>AWS Lambda is a &lt;a href="https://aws.amazon.com/serverless/">serverless computing service&lt;/a> that runs program code in response to certain events and is responsible for automatically allocating the necessary computing resources.&lt;/p>
&lt;p>AWS Lambda automatically runs program code in response to &lt;a href="http://docs.aws.amazon.com/lambda/latest/dg/intro-core-components.html#intro-core-components-event-sources">various events&lt;/a>, such as HTTP requests through &lt;a href="https://aws.amazon.com/api-gateway/">Amazon API Gateway&lt;/a>, changing objects in &lt;a href="https://aws.amazon.com/s3/">Amazon Simple Storage Service&lt;/a> garbage cans (Amazon S3), updating tables in &lt;a href="https://aws.amazon.com/dynamodb/">Amazon DynamoDB&lt;/a> or changing states in &lt;a href="https://aws.amazon.com/step-functions/">AWS Step Functions&lt;/a>.&lt;/p>
&lt;p>Supports for Java, Go, PowerShell, Node.js, C#, Python and Ruby. It also provides a Runtime API which allows you to use any &lt;strong>additional programming languages&lt;/strong> to author your functions. A runtime is a program that runs a Lambda function&amp;rsquo;s handler method when the function is invoked. You can include a runtime in your function&amp;rsquo;s deployment package in the form of an executable file named bootstrap&lt;/p>
&lt;p>&lt;p class="md__image">
&lt;img
src="https://d1.awsstatic.com/product-marketing/Lambda/Diagrams/product-page-diagram_Lambda-RealTimeFileProcessing.a59577de4b6471674a540b878b0b684e0249a18c.png"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;p>When you &lt;a href="https://docs.aws.amazon.com/lambda/latest/dg/configuration-versions.html">publish a version&lt;/a>, AWS Lambda makes a snapshot copy of the Lambda function code (and configuration) in the $LATEST version. A published version is immutable.&lt;/p>
&lt;p>&lt;strong>Lambda execution role&lt;/strong> is an IAM role that grants the function permission to access AWS services and resources. Under Attach permissions policies, choose the AWS managed policies &lt;code>AWSLambdaBasicExecutionRole&lt;/code> and &lt;code>AWSXRayDaemonWriteAccess&lt;/code>.&lt;/p>
&lt;p>&lt;a href="https://docs.aws.amazon.com/lambda/latest/dg/lambda-intro-execution-role.html#permissions-executionrole-features">AWS managed policies for Lambda features&lt;/a>&lt;/p>
&lt;h2 id="digest">Digest&lt;/h2>
&lt;ul>
&lt;li>Types of lambda invocation
&lt;ul>
&lt;li>RequestResponse.&lt;/li>
&lt;li>Event.&lt;/li>
&lt;li>Dryrun.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Lambda execution context is a temporary runtime environment that initializes any external dependencies of our Lambda function code, such as database connections or HTTP endpoints&lt;/li>
&lt;li>Lambda &lt;strong>Environment variables&lt;/strong> are variables that enable you to dynamically pass settings to your function code and libraries, without making changes to your code. Environment variables are key-value pairs that you create and modify as part of your function configuration.&lt;/li>
&lt;li>Lambda concurrent executions = (invocations per second) x (average execution duration in seconds). Concurrency limit of lambda execution, Default 1000 Reserved - 900 unreserved 100. Will get &lt;strong>throttled&lt;/strong> if it exceeds &lt;strong>concurrency limit&lt;/strong>&lt;/li>
&lt;li>&lt;strong>AWS_PROXY&lt;/strong> in API gateway is primarily used for Lambda proxy integration.&lt;/li>
&lt;li>A Lambda &lt;strong>authorizer&lt;/strong> is an API Gateway feature that uses a Lambda function to control access to your API. Lambda authorizer can be used for custom authorization scheme. 2 types:
&lt;ul>
&lt;li>Token based.&lt;/li>
&lt;li>Request parameter based Lambda authorizer.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Lambda deployment configuration:
&lt;ul>
&lt;li>HalfAtATime&lt;/li>
&lt;li>Canary&lt;/li>
&lt;li>Linear.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>AWS Lambda compute platform deployments cannot use an in-place deployment type&lt;/li>
&lt;li>Increasing memory in lambda will increase CPU in lambda&lt;/li>
&lt;li>Lambda Versioning:
&lt;ul>
&lt;li>By default, each AWS Lambda function has a single current version of the code. Clients of Lambda function can call a specific version or at the latest implementation&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Lambda Alias: You can create one or more aliases for our AWS Lambda function. A Lambda alias is like a pointer to a specific Lambda function version. Users can access the function version using the alias ARN&lt;/li>
&lt;li>Lambda@Edge is a feature of Amazon CloudFront that lets you run code closer to users of your application, which improves performance and reduces latency&lt;/li>
&lt;li>Lambda Layer - Layer is a ZIP archive that contains libraries, a custom runtime, or other dependencies. With layers, you can use libraries in your function without needing to include them in your deployment package&lt;/li>
&lt;li>&lt;strong>Amazon DynamoDB&lt;/strong> is integrated with AWS Lambda so that you can trigger pieces of code that automatically respond to events in DynamoDB Streams. AWSLambdaDynamoDBExecutionRole is required to enable Lambda to work with DynamoDB&lt;/li>
&lt;li>&lt;strong>API Gateway&lt;/strong> - Stage variables are name-value pairs that you can define as configuration attributes associated with a deployment stage of a REST API.&lt;/li>
&lt;li>Integrating &lt;strong>Cloud Watch Events&lt;/strong> with lambda can be used for &lt;strong>scheduling events&lt;/strong>&lt;/li>
&lt;li>If there is an incompatible output returned from a Lambda proxy integration backend, it will return 502&lt;/li>
&lt;li>To &lt;strong>resolve lambda throttled&lt;/strong> exception when using Cognito events, perform retry on sync.&lt;/li>
&lt;li>Lambda Event hook running order:
&lt;ul>
&lt;li>start -&amp;gt; BeforeAllowTraffic -&amp;gt; AllowTraffic -&amp;gt; After AllowTraffic -&amp;gt; End&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>AWS Lambda runs function code securely within a VPC b default. To enable your Lambda function to access resources inside your private VPC, you must provide additional VPC-specific configuration information that includes VPC subnet IDs and security group IDs. AWS&lt;/li>
&lt;li>Lambda uses this information to set up elastic network interfaces (&lt;a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-eni.html">ENIs&lt;/a>) that enable your function to connect securely to other resources within your private VPC&lt;/li>
&lt;li>Lambda &lt;strong>Asynchronous invocation&lt;/strong> can be triggered by Amazon Simple Storage Service, Amazon Simple Notification Service, Amazon Simple Email Service, AWS CloudFormation, Amazon CloudWatch Logs, Amazon CloudWatch Events, AWS CodeCommit, AWS Config.&lt;/li>
&lt;li>Lambda Limits: &lt;a href="https://docs.aws.amazon.com/lambda/latest/dg/gettingstarted-limits.html">https://docs.aws.amazon.com/lambda/latest/dg/gettingstarted-limits.html&lt;/a>&lt;/li>
&lt;li>Lambda provides 500 MB of additional disk space as a workspace.&lt;/li>
&lt;li>Lambda logs all stout for a lambda function to CloudWatch Logs. Any additional logging calls used in the function will also be sent to CloudWatch Logs.&lt;/li>
&lt;li>To connect to a VPC, lambda &lt;strong>function execution role&lt;/strong> must have the following permissions: ec2:Create Networkinterface, ec2:DescribeNetworkinterfaces, ec2:Delete Networkinterface. These permissions are included in the AWSLambdaVPCAccessExecutionRole managed policy&lt;/li>
&lt;li>When lambda execution is hit by concurrency limit, you need to request AWS to increase concurrency limit&lt;/li>
&lt;li>For stream-based services like Dynamo b streams, that don&amp;rsquo;t invoke Lambda functions directly, the event source mapping configuration should be made on the Lambda side.&lt;/li>
&lt;li>A deployment package is a ZIP archive that contains your function code and dependencies.&lt;/li>
&lt;li>You can unload the package directly to lambda. Or you can use an Amazon S3 bucket and then upload it to lambda. If the deployment package is larger than 50 MB. you must use Amazon 53&lt;/li>
&lt;li>Lambda can incur a first run penalty also called &lt;strong>cold starts.&lt;/strong> Cold starts can cause slower than expected behavior on infrequently run functions or functions with high concurrency demands&lt;/li>
&lt;/ul>
&lt;h2 id="price">Price&lt;/h2>
&lt;p>&lt;a href="https://aws.amazon.com/lambda/pricing/">Price&lt;/a>&lt;/p>
&lt;p>Price x86&lt;/p>
&lt;ul>
&lt;li>0.000016667 USD per gigabyte-second&lt;/li>
&lt;li>0,20 USD per 1 million requests&lt;/li>
&lt;/ul>
&lt;p>Arm price&lt;/p>
&lt;ul>
&lt;li>0,0000133334 USD for each gigabyte-second&lt;/li>
&lt;li>0,20 USD for 1 million queries&lt;/li>
&lt;/ul>
&lt;h2 id="practice">Practice&lt;/h2>
&lt;div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
&lt;iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" loading="eager" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/hxAkVn1u0cc?autoplay=0&amp;amp;controls=1&amp;amp;end=0&amp;amp;loop=0&amp;amp;mute=0&amp;amp;start=0" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" title="YouTube video">&lt;/iframe>
&lt;/div>
&lt;p>In the AWS Management Console search bar, type Lambda and select Lambda under &amp;ldquo;&lt;strong>&lt;strong>Services&lt;/strong>&lt;/strong>&amp;rdquo;:&lt;/p>
&lt;p>&lt;p class="md__image">
&lt;img
src="./img/lambda-1.png"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;p>&lt;a href="https://us-west-2.console.aws.amazon.com/lambda/home?region=us-west-2">https://us-west-2.console.aws.amazon.com/lambda/home?region=us-west-2#&lt;/a>&lt;/p>
&lt;p>On page &lt;strong>Functions&lt;/strong> click &lt;strong>Create a function&lt;/strong>&lt;/p>
&lt;p>&lt;p class="md__image">
&lt;img
src="./img/lambda-2.png"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;p>&lt;strong>Author from scratch&lt;/strong> is selected and enter the following values in the bottom form:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Function name&lt;/strong>: *MyCustomFunc&lt;/li>
&lt;li>&lt;strong>Runtime&lt;/strong>: Node.js 16.X&lt;/li>
&lt;/ul>
&lt;p>I select this section because I use the cloudacademy account. This role gives you permission to create functions&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Permissions&lt;/strong>: &lt;strong>Change default execution role&lt;/strong>.
&lt;ul>
&lt;li>&lt;strong>Execution Role&lt;/strong>: Select &lt;strong>Use an existing role&lt;/strong>.&lt;/li>
&lt;li>&lt;strong>Existing role&lt;/strong>: Select the role beginning with &lt;strong>cloudacademylabs-LambdaExecutionRole&lt;/strong>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>&lt;p class="md__image">
&lt;img
src="./img/lambda-3.png"
id="zoom-default"
alt="Lambda"
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;h3 id="create-function">Create function&lt;/h3>
&lt;p>I&amp;rsquo;m writing a function to view the log, I&amp;rsquo;ll add a print to the terminal. And I&amp;rsquo;ll also add processing of the message I receive (In the next step in the testing section)&lt;/p>
&lt;p>The function takes as an object &lt;code>event&lt;/code> which contains an array of Records. On the 1st (0) position the object &lt;code>Sns&lt;/code> (name of the service SNS Notifications).&lt;/p>
&lt;p>In the object itself there will be 2 values:&lt;/p>
&lt;ul>
&lt;li>cook_secs - cooking time (microwave)&lt;/li>
&lt;li>req_secs - cooking time (prepare)&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>console.log(&lt;span style="color:#4070a0">&amp;#39;Loading function&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>exports.handler &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#007020;font-weight:bold">function&lt;/span>(event, context) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> console.log(JSON.stringify(event, &lt;span style="color:#007020;font-weight:bold">null&lt;/span>, &lt;span style="color:#40a070">2&lt;/span>));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">const&lt;/span> message &lt;span style="color:#666">=&lt;/span> JSON.parse(event.Records[&lt;span style="color:#40a070">0&lt;/span>].Sns.Message);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">if&lt;/span> (message.cook_secs &lt;span style="color:#666">&amp;lt;&lt;/span> message.req_secs) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">if&lt;/span> (message.pre) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> context.succeed(&lt;span style="color:#4070a0">&amp;#34;User ended &amp;#34;&lt;/span> &lt;span style="color:#666">+&lt;/span> message.pre &lt;span style="color:#666">+&lt;/span> &lt;span style="color:#4070a0">&amp;#34; preset early&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">else&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> context.succeed(&lt;span style="color:#4070a0">&amp;#34;User ended custom cook time early&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> context.succeed();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>};
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="deploy">Deploy&lt;/h3>
&lt;p>&lt;p class="md__image">
&lt;img
src="./img/lambda-4.png"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;h3 id="test">Test&lt;/h3>
&lt;p>This functionality allows you to test how the function reacts to certain events. Let&amp;rsquo;s try to add an event from SNS Notifications.&lt;/p>
&lt;p>Let&amp;rsquo;s choose from the list&lt;/p>
&lt;p>&lt;p class="md__image">
&lt;img
src="./img/lambda-5.png"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;p>We get a template in which we make some changes, adjust the field &lt;code>Message&lt;/code> - the one that we will process in our function.&lt;/p>
&lt;p>Field &lt;code>Message&lt;/code> - string, so our object will need to be wrapped in quotes&lt;/p>
&lt;p>To make the handler understand that we put quotation marks inside quotation marks, we must put a special symbol &lt;code>\&lt;/code> before the quotation mark.&lt;/p>
&lt;p>Finally we update one line and save it - &lt;strong>Create&lt;/strong>&lt;/p>
&lt;p>&lt;p class="md__image">
&lt;img
src="./img/lambda-6.png"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;p>Now we click the &lt;strong>Test&lt;/strong> button.&lt;/p>
&lt;p>Since &lt;code>cook_secs&lt;/code> in our event was less than &lt;code>req_secs&lt;/code>, the function printed the first condition, and below in &lt;strong>Function Logs&lt;/strong> we see the message that we print when we initialize the &lt;code>Loading function&lt;/code>&lt;/p>
&lt;p>&lt;p class="md__image">
&lt;img
src="./img/lambda-7.png"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;h2 id="questions">Questions&lt;/h2>
&lt;h3 id="q1">Q1&lt;/h3>
&lt;p>&lt;strong>When working with a published version of the AWS Lambda function, you should note that the _____.&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>Use the AWS Management Console to create and configure the cluster.&lt;/li>
&lt;li>Create a cron job to schedule the cluster deployment using the &lt;code>_aws cloudformation deploy_&lt;/code> command&lt;/li>
&lt;li>Create a configuration file with the .config extension and place it into the .ebextensions folder in the application package.&lt;/li>
&lt;li>Build an AWS Lambda function that polls to the ElasticBeanstalk environment deployments and create and configure the Amazon ElastiCache cluster.&lt;/li>
&lt;/ol>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;p>&lt;a href="https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/environment-resources.html">AWS Secrets Manager&lt;/a>&lt;/p>
&lt;p>&lt;mark style="color:white">C&lt;/mark>&lt;/p>
&lt;/div>
&lt;/details>
&lt;h3 id="q2">Q2&lt;/h3>
&lt;p>&lt;strong>A developer is building a streamlined development process for Lambda functions related to S3 storage.The developer needs a consistent, reusable code blueprint that can be easily customized to manage Lambda function definition and deployment, the S3 events to be managed and the Identity Access Management (IAM) policies definition.&lt;/strong>&lt;/p>
&lt;p>&lt;strong>Which of the following AWS solutions offers is best suited for this objective?&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>&lt;a href="https://aws.amazon.com/developer/tools/">AWS Software Development Kits (SDKs)&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://aws.amazon.com/serverless/sam/">AWS Serverless Application Model (SAM)&lt;/a> templates&lt;/li>
&lt;li>&lt;a href="https://aws.amazon.com/systems-manager/">AWS Systems Manager&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://romankurnovskii.com/en/tags/step-functions/">AWS Step Functions&lt;/a>&lt;/li>
&lt;/ol>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;p>&lt;a href="https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/what-is-sam.html">Serverless Application Model&lt;/a>&lt;/p>
&lt;p>&lt;mark style="color:white">2&lt;/mark>&lt;/p>
&lt;/div>
&lt;/details>
&lt;h3 id="q3">Q3&lt;/h3>
&lt;p>&lt;strong>A developer is adding sign-up and sign-in functionality to an application. The application is required to make an API call to a custom analytics solution to log user sign-in events&lt;/strong>&lt;/p>
&lt;p>&lt;strong>Which combination of actions should the developer take to satisfy these requirements? (Select TWO.)&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>Use Amazon Cognito to provide the sign-up and sign-in functionality&lt;/li>
&lt;li>Use AWS IAM to provide the sign-up and sign-in functionality&lt;/li>
&lt;li>Configure an AWS Config rule to make the API call triggered by the post-authentication event&lt;/li>
&lt;li>Invoke an Amazon API Gateway method to make the API call triggered by the post-authentication event&lt;/li>
&lt;li>Execute an AWS Lambda function to make the API call triggered by the post-authentication event&lt;/li>
&lt;/ol>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;p>Amazon Cognito adds user sign-up, sign-in, and access control to web and mobile applications quickly and easily. Users can also create an AWS Lambda function to make an API call to a custom analytics solution and then trigger that function with an Amazon Cognito post authentication trigger.&lt;/p>
&lt;p>&lt;mark style="color:white">1, 5&lt;/mark>&lt;/p>
&lt;/div>
&lt;/details>
&lt;h3 id="q4">Q4&lt;/h3>
&lt;p>&lt;strong>A developer is designing a web application that allows the users to post comments and receive a real-time feedback.&lt;/strong>&lt;/p>
&lt;p>&lt;strong>Which architectures meet these requirements? (Select TWO.)&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>Create an AWS AppSync schema and corresponding APIs. Use an &lt;a href="../dynamodb">Amazon DynamoDB&lt;/a> table as the data store.&lt;/li>
&lt;li>Create a WebSocket API in Amazon API Gateway. Use an &lt;a href="../lambda">AWS Lambda&lt;/a> function as the backend and an &lt;a href="../dynamodb">Amazon DynamoDB&lt;/a> table as the data store&lt;/li>
&lt;li>Create an AWS Elastic Beanstalk application backed by an Amazon RDS database. Configure the application to allow long-lived TCP/IP sockets.&lt;/li>
&lt;li>Create a GraphQL endpoint in Amazon API Gateway. Use an &lt;a href="../dynamodb">Amazon DynamoDB&lt;/a> table as the data store.&lt;/li>
&lt;li>Enable WebSocket on Amazon CloudFront. Use an &lt;a href="../lambda">AWS Lambda&lt;/a> function as the origin and an Amazon Aurora DB cluster as the data store&lt;/li>
&lt;/ol>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;p>&lt;a href="https://aws.amazon.com/appsync/">AWS AppSync&lt;/a> simplifies application development by letting users create a flexible API to securely access, manipulate, and combine data from one or more data sources. AWS AppSync is a managed service that uses GraphQL to make it easy for applications to get the exact data they need.&lt;/p>
&lt;p>AWS AppSync allows users to build scalable applications, including those requiring &lt;a href="https://docs.aws.amazon.com/appsync/latest/devguide/real-time-data.html">real-time updates&lt;/a>, on a range of data sources, including Amazon DynamoDB. In &lt;a href="../api-gateway">Amazon API Gateway&lt;/a>, users can &lt;a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api.html">create a WebSocket API&lt;/a> as a stateful frontend for an AWS service (such as &lt;a href="../lambda">AWS Lambda&lt;/a> or DynamoDB) or for an HTTP endpoint.&lt;/p>
&lt;p>The WebSocket API invokes the backend based on the content of the messages it receives from client applications. Unlike a REST API, which receives and responds to requests, a WebSocket API supports two-way communication between client applications and the backend.&lt;/p>
&lt;p>&lt;mark style="color:white">1, 2&lt;/mark>&lt;/p>
&lt;/div>
&lt;/details>
&lt;h3 id="q5">Q5&lt;/h3>
&lt;p>&lt;strong>A food delivery company is building a feature that requests reviews from customers after their orders are delivered. The solution should be a short-running process that can message customers simultaneously at various contact points including email, text, and mobile push notifications.&lt;/strong>&lt;/p>
&lt;p>&lt;strong>Which approach best meets these requirements?&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>Use EventBridge with Kinesis Data Streams to send messages.&lt;/li>
&lt;li>Use a Step Function to send &lt;a href="../sqs">SQS&lt;/a> messages.&lt;/li>
&lt;li>Use a &lt;a href="../lambda">Lambda function&lt;/a> to send &lt;a href="../sns">SNS&lt;/a> messages.&lt;/li>
&lt;li>Use AWS Batch and &lt;a href="../sns">SNS&lt;/a> to send messages.&lt;/li>
&lt;/ol>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;p>&lt;a href="https://docs.aws.amazon.com/sns/latest/dg/welcome.html">https://docs.aws.amazon.com/sns/latest/dg/welcome.html&lt;/a>&lt;/p>
&lt;p>&lt;mark style="color:white">3&lt;/mark>&lt;/p>
&lt;/div>
&lt;/details>
&lt;h2 id="resources">Resources&lt;/h2>
&lt;h3 id="community-posts">Community posts&lt;/h3></description></item><item><title>ElastiCache</title><link>https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/elasticache/</link><pubDate>Mon, 12 Sep 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/elasticache/</guid><description>&lt;h1 id="about">About&lt;/h1>
&lt;ul>
&lt;li>&lt;a href="https://aws.amazon.com/elasticache/">Documentation&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.aws.amazon.com/elasticache/?id=docs_gateway">User Guide&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Amazon Elasticache is a fully managed Redis or Memcached in-memory data store.&lt;/p>
&lt;p>It&amp;rsquo;s great for use cases like two-tier web applications where the most frequently accesses data is stored in ElastiCache so response time is optimal.&lt;/p>
&lt;p>You can use ElastiCache for caching, which accelerates application and database performance, or as a primary data store for use cases that don&amp;rsquo;t require durability like session stores, gaming leaderboards, streaming, and analytics.&lt;/p>
&lt;p>Compatible with Redis and Memcached&lt;/p>
&lt;p>&lt;p class="md__image">
&lt;img
src="https://d1.awsstatic.com/elasticache/EC_Use_Cases/product-page-diagram_ElastiCache_how-it-works.ec509f8b878f549b7fb8a49669bf2547878303f6.png"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;h2 id="price">Price&lt;/h2>
&lt;p>&lt;a href="https://aws.amazon.com/elasticache/pricing/">Current price&lt;/a>&lt;/p>
&lt;h2 id="use-cases">Use Cases&lt;/h2>
&lt;p>Type: In-memory&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Use Case&lt;/th>
&lt;th>Benefit&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Web session store&lt;/td>
&lt;td>In cases with load-balanced web servers, store web session information in Redis so if a server is lost, the session info is not lost, and another web server can pick it up&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Database caching&lt;/td>
&lt;td>Use Memcached in front of AWS RDS to cache popular queries to offload work from RDS and return results faster to users&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Leaderboards&lt;/td>
&lt;td>Use Redis to provide a live leaderboard for millions of users of your mobile app&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Streaming data dashboards&lt;/td>
&lt;td>Provide a landing spot for streaming sensor data on the factory floor, providing live real-time dashboard displays&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="caching-engines">Caching Engines&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Memcached&lt;/th>
&lt;th>Redis&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Simple, no-frills&lt;/td>
&lt;td>You need encryption&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>You need to elasticity (scale out and in)&lt;/td>
&lt;td>You need HIPAA compliance&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>You need to run multiple CPU cores and threads&lt;/td>
&lt;td>Support for clustering&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>You need to cache objects (e.g. database queries)&lt;/td>
&lt;td>You need complex data types&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>You need HA (replication&lt;/td>
&lt;td>Backup and restore features&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Pub/Sub capability&lt;/td>
&lt;td>Multi-AZ with Auto-Failover&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Non persistent. No backups&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Multi-node for partitioning of data (sharding)&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="memcached">Memcached&lt;/h3>
&lt;p>ElastiCache manages Memcached nodes as a pool that can grow and shrink (similar to an EC2 Auto Scaling group); individual nodes are expendable and non-persistent.&lt;/p>
&lt;p>Memcached provides a simple caching solution that best supports object caching and lets you scale out horizontally. Ideal for offloading a DB&amp;rsquo;s contents into a cache.&lt;/p>
&lt;h3 id="redis">Redis&lt;/h3>
&lt;p>ElastiCache manages Redis more as a relational database, i.e. Redis clusters are managed as persistent, stateful entities that include using multi-AZ redundancy for handling failover (similar to RDS).&lt;/p>
&lt;p>Redis supports complex data structures, hence would be ideal in cases where sorting and ranking datasets in memory are important (e.g. such as in leaderboards for games).&lt;/p>
&lt;h2 id="caching-strategies">Caching Strategies&lt;/h2>
&lt;h3 id="lazy-loading">Lazy Loading&lt;/h3>
&lt;ul>
&lt;li>The data that is read from the DB is stored in the cache. The data can become stale&lt;/li>
&lt;li>The data becomes stale because there are no updates to the cache when data is changed in the database&lt;/li>
&lt;/ul>
&lt;p>Only cache data when it is requested. Cache miss penalty on initial request. Chance to produce stale data; can be mitigated by setting a TTL. Shorter TTL = less stale data.&lt;/p>
&lt;h3 id="write-through">Write-Through&lt;/h3>
&lt;ul>
&lt;li>The data is added/updated into the cache everytime the data is written to the DB (no stale data)&lt;/li>
&lt;li>Because the data in the cache is updated every time it&amp;rsquo;s written to the database, the data in the cache is always current.&lt;/li>
&lt;/ul>
&lt;p>Every database write will write to the cache as well. Data is never stale however there will be alot more operations to perform; and these resources are wasted if most of the data is never used.&lt;/p>
&lt;h3 id="session-store">Session Store&lt;/h3>
&lt;ul>
&lt;li>Stores temporary session data in cache (with TTL) - Time to Live. Data expires after the given time&lt;/li>
&lt;/ul>
&lt;h2 id="practice">Practice&lt;/h2>
&lt;p>&lt;a href="https://docs.aws.amazon.com/lambda/latest/dg/services-elasticache-tutorial.html">Configuring a Lambda function to access Amazon ElastiCache in an Amazon VPC&lt;/a>&lt;/p>
&lt;h2 id="questions">Questions&lt;/h2>
&lt;h3 id="q1">Q1&lt;/h3>
&lt;p>&lt;strong>What is one reason that AWS does not recommend that you configure your ElastiCache so that it can be accessed from outside AWS?&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>The metrics reported by CloudWatch are more difficult to report.&lt;/li>
&lt;li>Security concerns and network latency over the public internet.&lt;/li>
&lt;li>The ElastiCache cluster becomes more prone to failures.&lt;/li>
&lt;li>The performance of the ElastiCache cluster is no longer controllable.&lt;/li>
&lt;/ol>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;p>Elasticache is a service designed to be used internally to your VPC. External access is discouraged due to the latency of Internet traffic and security concerns. However, if external access to Elasticache is required for test or development purposes, it can be done through a VPN.&lt;/p>
&lt;p>&lt;mark style="color:white">2&lt;/mark>&lt;/p>
&lt;/div>
&lt;/details>
&lt;h3 id="q2">Q2&lt;/h3>
&lt;p>&lt;strong>You are building a web application that will run in an &lt;a href="../elasticbeanstalk">AWS ElasticBeanstalk&lt;/a> environment. You need to add and configure an &lt;a href="../elasticache">Amazon ElastiCache&lt;/a> cluster into the environment immediately after the application is deployed.&lt;/strong>&lt;/p>
&lt;p>&lt;strong>What is the most efficient method to ensure that the cluster is deployed immediately after the EB application is deployed?&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>Use the &lt;a href="../https://aws.amazon.com/console/">AWS Management Console&lt;/a> to create and configure the cluster.&lt;/li>
&lt;li>Create a cron job to schedule the cluster deployment using the &lt;strong>&lt;em>aws cloudformation deploy&lt;/em>&lt;/strong> command&lt;/li>
&lt;li>Create a configuration file with the .config extension and place it into the .ebextensions folder in the application package.&lt;/li>
&lt;li>Build an &lt;a href="../lambda">AWS Lambda&lt;/a> function that polls to the ElasticBeanstalk environment deployments and create and configure the &lt;a href="../elasticache">Amazon ElastiCache&lt;/a> cluster.&lt;/li>
&lt;/ol>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;p>[&lt;a href="https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/environment-resources.html">AWS Secrets Manager&lt;/a>](&lt;a href="https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/environment-resources.html">https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/environment-resources.html&lt;/a>)&lt;/p>
&lt;p>&lt;mark style="color:white">3&lt;/mark>&lt;/p>
&lt;/div>
&lt;/details></description></item><item><title>RDS</title><link>https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/rds/</link><pubDate>Mon, 12 Sep 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/rds/</guid><description>&lt;h2 id="about">About&lt;/h2>
&lt;ul>
&lt;li>Relational Database Service&lt;/li>
&lt;li>Managed DB service that uses SQL as query language&lt;/li>
&lt;/ul>
&lt;p>Amazon Relational Database Service (Amazon RDS) is a collection of managed services that makes it simple to set up, operate, and scale databases in the cloud.&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://aws.amazon.com/rds/">Documentation&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.aws.amazon.com/rds/?id=docs_gateway">User Guide&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>&lt;p class="md__image">
&lt;img
src="https://d1.awsstatic.com/video-thumbs/RDS/product-page-diagram_Amazon-RDS-Regular-Deployment_HIW-V2.96bc5b3027474538840af756a5f2c636093f311f.png"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;p>Supports &lt;strong>engines&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>Amazon Aurora with MySQL compatibility: 5432&lt;/li>
&lt;li>Amazon Aurora with PostgreSQL compatibility: 5432&lt;/li>
&lt;li>MySQL: 3306&lt;/li>
&lt;li>MariaDB: 3306&lt;/li>
&lt;li>PostgreSQL: 5432&lt;/li>
&lt;li>Oracle: 1521&lt;/li>
&lt;li>SQL Server: 1433&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Engine modes:&lt;/strong>&lt;/p>
&lt;p>Used in &lt;a href="https://docs.aws.amazon.com/AmazonRDS/latest/APIReference/API_CreateDBCluster.html">CreateDBCluster&lt;/a>&lt;/p>
&lt;ul>
&lt;li>global&lt;/li>
&lt;li>parallelquery&lt;/li>
&lt;li>serverless&lt;/li>
&lt;li>multimaster&lt;/li>
&lt;/ul>
&lt;h3 id="backups">Backups&lt;/h3>
&lt;ul>
&lt;li>Backups are enabled by default in RDS&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Automated backups&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Daily full backup (during maintenance window)&lt;/li>
&lt;li>Backups of transaction logs (every 5 minutes)&lt;/li>
&lt;li>7 days retention (can increase upto 35)&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>DB Snapshots&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Manually triggered by the user&lt;/li>
&lt;li>Can retain backup as long as you want&lt;/li>
&lt;/ul>
&lt;h3 id="auto-scaling">Auto scaling&lt;/h3>
&lt;ul>
&lt;li>When RDS detects you&amp;rsquo;re running out of space, it scales automatically&lt;/li>
&lt;/ul>
&lt;h2 id="digest">Digest&lt;/h2>
&lt;ul>
&lt;li>To verify slowly running queries enable &lt;strong>slow query log&lt;/strong>.&lt;/li>
&lt;li>TDE (Transparent data encryption) supports encryption on Microsoft SQL server&lt;/li>
&lt;li>AWS Systems Manager Parameter Store provides secure, hierarchical storage for confiquration data management and secrets management. You can store data such as passwords, database strings, Amazon Machine Image (AMI) IDs, and license codes as
parameter values&lt;/li>
&lt;li>AWS Secrets Manager is an AWS service that can be used to securely &lt;strong>store&lt;/strong>, &lt;strong>retrieve&lt;/strong>, and automatically &lt;strong>rotate&lt;/strong> &lt;strong>database credentials&lt;/strong>. AWS Secrets Manager has built-in integration for RDS databases.&lt;/li>
&lt;/ul>
&lt;h2 id="price">Price&lt;/h2>
&lt;p>&lt;a href="https://aws.amazon.com/rds/pricing/">Current price&lt;/a>&lt;/p>
&lt;h2 id="use-cases">Use Cases&lt;/h2>
&lt;p>Type: Relational&lt;/p>
&lt;p>This type services: Aurora, Redshift, RDS&lt;/p>
&lt;p>Ecommerce websites, Traditional sites etc.&lt;/p>
&lt;p>Amazon Relational Database Service (Amazon RDS) on [AWS Outposts](AWS Outposts) allows you to deploy fully managed database instances in your on-premises environment&lt;/p>
&lt;h2 id="questions">Questions&lt;/h2>
&lt;h3 id="q1">Q1&lt;/h3>
&lt;p>&lt;strong>Explain RDS Multi Availability Zone&lt;/strong>&lt;/p>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;ul>
&lt;li>RDS multi AZ used mainly for disaster recovery purposes&lt;/li>
&lt;li>There is an RDS master instance and in another AZ an RDS standby instance&lt;/li>
&lt;li>The data is synced synchronously between them&lt;/li>
&lt;li>The user, application is accessing one DNS name and where there is a failure with the master instance, the DNS name moves to the standby instance, so the failover done automatically&lt;/li>
&lt;/ul>
&lt;/div>
&lt;/details>
&lt;h3 id="q2">Q2&lt;/h3>
&lt;p>&lt;strong>A company is migrating a legacy application to Amazon EC2. The application uses a username and password stored in the source code to connect to a MySQL database. The database will be migrated to an Amazon RDS for MySQL DB instance. As part of the migration, the company wants to implement a secure way to store and automatically rotate the database credentials.&lt;/strong>&lt;/p>
&lt;p>&lt;strong>Which approach meets these requirements?&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>Store the database credentials in environment variables in an Amazon Machine Image (AMI). Rotate the credentials by replacing the AMI.&lt;/li>
&lt;li>Store the database credentials in AWS Systems Manager Parameter Store. Configure Parameter Store to automatically rotate the credentials.&lt;/li>
&lt;li>Store the database credentials in environment variables on the &lt;a href="../ec2">EC2&lt;/a> instances. Rotate the credentials by relaunching the &lt;a href="../ec2">EC2&lt;/a> instances.&lt;/li>
&lt;li>Store the database credentials in AWS Secrets Manager. Configure Secrets Manager to automatically rotate the credentials&lt;/li>
&lt;/ol>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;p>&lt;a href="https://aws.amazon.com/secrets-manager/">AWS Secrets Manager&lt;/a>&lt;/p>
&lt;p>Secrets Manager offers &lt;a href="https://aws.amazon.com/blogs/security/rotate-amazon-rds-database-credentials-automatically-with-aws-secrets-manager/">secret rotation&lt;/a>&lt;/p>
&lt;p>&lt;mark style="color:white">4&lt;/mark>&lt;/p>
&lt;/div>
&lt;/details>
&lt;h3 id="q3">Q3&lt;/h3>
&lt;p>&lt;strong>Explain RDS Multi Availability Zone&lt;/strong>&lt;/p>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;ul>
&lt;li>RDS multi AZ used mainly for disaster recovery purposes&lt;/li>
&lt;li>There is an RDS master instance and in another AZ an RDS standby instance&lt;/li>
&lt;li>The data is synced synchronously between them&lt;/li>
&lt;li>The user, application is accessing one DNS name and where there is a failure with the master instance, the DNS name moves to the standby instance, so the failover done automatically&lt;/li>
&lt;/ul>
&lt;/div>
&lt;/details></description></item><item><title>API Gateway</title><link>https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/api-gateway/</link><pubDate>Tue, 13 Sep 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/api-gateway/</guid><description>&lt;h2 id="about">About&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://aws.amazon.com/api-gateway/">Documentation&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.aws.amazon.com/api-gateway/?id=docs_gateway">User Guide&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>API Gateway provides the opportunity to create and expand your own REST and WebSocket APIs at any size.&lt;/p>
&lt;p>API endpoints can be cached to accommodate for frequent similar requests.&lt;/p>
&lt;p>&lt;p class="md__image">
&lt;img
src="https://d1.awsstatic.com/serverless/New-API-GW-Diagram.c9fc9835d2a9aa00ef90d0ddc4c6402a2536de0d.png"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;h2 id="use-cases">Use Cases&lt;/h2>
&lt;p>Build a network for micros­ervices archit­ectures.&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/cloudwatch/">&lt;strong>Amazon CloudWatch&lt;/strong>&lt;/a> metrics - Collects near-real-time metrics
&lt;ul>
&lt;li>Examples: 4XXError (client-side errors), 5XXError(server-side errors), CacheHitCount&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Amazon CloudWatch Logs&lt;/strong> - Debug issues related to request execution&lt;/li>
&lt;li>&lt;a href="https://docs.aws.amazon.com/awscloudtrail/latest/userguide/cloudtrail-user-guide.html">&lt;strong>AWS CloudTrail&lt;/strong>&lt;/a> - Record of actions taken by a user, role, or an AWS service in API Gateway&lt;/li>
&lt;li>&lt;a href="../xray">&lt;strong>AWS X-Ray&lt;/strong>&lt;/a> - Trace your request across different AWS Services&lt;/li>
&lt;/ul>
&lt;h2 id="digests">Digests&lt;/h2>
&lt;h3 id="concepts">Concepts&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>REST API, HTTP API, WebSocket API&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Deployment - point-in-time snapshot of your API Gateway API&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Endpoint - &lt;a href="https://api-id.execute-api.region-id.amazonaws.com">https://api-id.execute-api.region-id.amazonaws.com&lt;/a>&lt;/p>
&lt;ul>
&lt;li>Edge-optimized&lt;/li>
&lt;li>Private&lt;/li>
&lt;li>Regional&lt;/li>
&lt;li>Stage - A logical reference to a lifecycle state of your API.&lt;/li>
&lt;li>Route - URL path, Latency based routing,&lt;/li>
&lt;li>Integration - Lambda, HTTP, Private VPC, CORS&lt;/li>
&lt;li>Import/Export - Open API&lt;/li>
&lt;li>AM User should have permission to enable logging&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Amazon API Gateway is an AWS service for creating, publishing, maintaining, monitoring, and securing REST, HTTP, and WebSocket APIs at any scale.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Stage variables are name-value pairs that you can define as configuration attributes associated with a deployment stage of a REST API. The act like environment variables and can be used in your API setup and mapping templates.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>With deployment stages in API Gateway you can manage multiple release stages for each API, such as: alpha, beta, and production. Using stage variables you can configure an API deployment stage to interact with different backend endpoints.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>When you build an API Gateway API with standard Lambda integration using the API Gateway console, the &lt;strong>console&lt;/strong> &lt;strong>automatically adds&lt;/strong> the &lt;strong>required permissions&lt;/strong>. However, when you set up a &lt;strong>stage variable&lt;/strong> to call a Lambda function through our API, you must &lt;strong>manually&lt;/strong> add these permissions.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Integration timeout for AWS, Lambda, Lambda proxy, HTTP, HTTP proxy - 50 ms to 29 seconds&lt;/p>
&lt;/li>
&lt;li>
&lt;p>You can enable &lt;strong>API caching&lt;/strong> to cache your endpoint&amp;rsquo;s responses, this reduces the number of calls made to your endpoint and improves the latency of requests to your API&lt;/p>
&lt;/li>
&lt;li>
&lt;p>AWS Gateway Integration types:&lt;/p>
&lt;ul>
&lt;li>AWS_ Proxy - lambda proxy integration&lt;/li>
&lt;li>HTTP - http custom integration&lt;/li>
&lt;li>HTTP_PROXY - http proxy&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="practice">Practice&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://cloudacademy.com/lab/creating-a-restful-api-using-amazon-api-gateway/">Creating a RESTful API Using Amazon API Gateway&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="questions">Questions&lt;/h2>
&lt;h3 id="q1">Q1&lt;/h3>
&lt;p>&lt;strong>You are developing an API in Amazon API Gateway that several mobile applications will use to interface with a back end service in AWS being written by another developer. You can use a(n)____ integration for your API methods to develop and test your client applications before the other developer has completed work on the back end.&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>A) HTTP proxy&lt;/li>
&lt;li>B) mock&lt;/li>
&lt;li>C) AWS service proxy&lt;/li>
&lt;li>D) Lambda function&lt;/li>
&lt;/ul>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;p>&lt;a href="http://docs.aws.amazon.com/apigateway/latest/developerguide/how-to-method-settings-console.html">http://docs.aws.amazon.com/apigateway/latest/developerguide/how-to-method-settings-console.html&lt;/a>&lt;/p>
&lt;p>Amazon API Gateway supports mock integrations for API methods.&lt;/p>
&lt;p>&lt;mark style="color:white">B&lt;/mark>&lt;/p>
&lt;/div>
&lt;/details>
&lt;h3 id="q2">Q2&lt;/h3>
&lt;p>&lt;strong>A developer is designing a web application that allows the users to post comments and receive in a real-time feedback.&lt;/strong>&lt;/p>
&lt;p>&lt;strong>Which architectures meet these requirements? (Select TWO.)&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>Create an AWS AppSync schema and corresponding APIs. Use an &lt;a href="../dynamodb">Amazon DynamoDB&lt;/a> table as the data store.&lt;/li>
&lt;li>Create a WebSocket API in Amazon API Gateway. Use an &lt;a href="../lambda">AWS Lambda&lt;/a> function as the backend and an &lt;a href="../dynamodb">Amazon DynamoDB&lt;/a> table as the data store&lt;/li>
&lt;li>Create an AWS Elastic Beanstalk application backed by an Amazon RDS database. Configure the application to allow long-lived TCP/IP sockets.&lt;/li>
&lt;li>Create a GraphQL endpoint in Amazon API Gateway. Use an &lt;a href="../dynamodb">Amazon DynamoDB&lt;/a> table as the data store.&lt;/li>
&lt;li>Enable WebSocket on Amazon CloudFront. Use an &lt;a href="../lambda">AWS Lambda&lt;/a> function as the origin and an Amazon Aurora DB cluster as the data store&lt;/li>
&lt;/ol>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;p>&lt;a href="https://aws.amazon.com/appsync/">AWS AppSync&lt;/a> simplifies application development by letting users create a flexible API to securely access, manipulate, and combine data from one or more data sources. AWS AppSync is a managed service that uses GraphQL to make it easy for applications to get the exact data they need.&lt;/p>
&lt;p>AWS AppSync allows users to build scalable applications, including those requiring &lt;a href="https://docs.aws.amazon.com/appsync/latest/devguide/real-time-data.html">real-time updates&lt;/a>, on a range of data sources, including Amazon DynamoDB. In &lt;a href="../api-gateway">Amazon API Gateway&lt;/a>, users can &lt;a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api.html">create a WebSocket API&lt;/a> as a stateful frontend for an AWS service (such as &lt;a href="../lambda">AWS Lambda&lt;/a> or DynamoDB) or for an HTTP endpoint.&lt;/p>
&lt;p>The WebSocket API invokes the backend based on the content of the messages it receives from client applications. Unlike a REST API, which receives and responds to requests, a WebSocket API supports two-way communication between client applications and the backend.&lt;/p>
&lt;p>&lt;mark style="color:white">1, 2&lt;/mark>&lt;/p>
&lt;/div>
&lt;/details>
&lt;h3 id="q3">Q3&lt;/h3>
&lt;p>&lt;strong>A company is providing services to many downstream consumers. Each consumer may connect to one or more services. This has resulted in complex architecture that is difficult to manage and does not scale well. The company needs a single interface to manage these services to consumers&lt;/strong>&lt;/p>
&lt;p>&lt;strong>Which AWS service should be used to refactor this architecture?&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>&lt;a href="../xray">AWS X-Ray&lt;/a>&lt;/li>
&lt;li>&lt;a href="../sqs">Amazon SQS&lt;/a>&lt;/li>
&lt;li>&lt;a href="../lambda">AWS Lambda&lt;/a>&lt;/li>
&lt;li>&lt;a href="../apigateway">Amazon API Gateway&lt;/a>&lt;/li>
&lt;/ol>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;p>&lt;mark style="color:white">4&lt;/mark>&lt;/p>
&lt;/div>
&lt;/details>
&lt;h3 id="q4">Q4&lt;/h3>
&lt;p>&lt;strong>Veronika is writing a REST service that will add items to a shopping list. The service is built on Amazon API Gateway with &lt;a href="../lambda">AWS Lambda&lt;/a> integrations. The shopping list stems are sent as query string parameters in the method request.&lt;/strong>&lt;/p>
&lt;p>&lt;strong>How should Veronika convert the query string parameters to arguments for the Lambda function?&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>Enable request validation&lt;/li>
&lt;li>Include the Amazon Resource Name (ARN) of the Lambda function&lt;/li>
&lt;li>Change the integration type&lt;/li>
&lt;li>Create a mapping template&lt;/li>
&lt;/ol>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;p>&lt;a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-mapping-template-reference.html">API Gateway mapping template&lt;/a>&lt;/p>
&lt;p>&lt;mark style="color:white">4&lt;/mark>&lt;/p>
&lt;/div>
&lt;/details>
&lt;h3 id="q5">Q5&lt;/h3>
&lt;p>&lt;strong>A developer is designing a full-stack serverless application. Files for the website are stored in an Amazon S3 bucket. AWS Lambda functions that use Amazon API Gateway endpoints return results from an Amazon DynamoDB table. The developer must create a solution that securely provides registration and authentication for the application while minimizing the amount of configuration.&lt;/strong>&lt;/p>
&lt;p>&lt;strong>Which solution meets these requirements?&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>Create an Amazon Cognito user pool and an app client. Configure the app client to use the user pool and provide the hosted web UI provided for sign-up and sign-in.&lt;/li>
&lt;li>Configure an Amazon Cognito identity pool. Map the users with IAM roles that are configured to access the S3 bucket that stores the website.&lt;/li>
&lt;li>Configure and launch an Amazon EC2 instance to set up an identity provider with an Amazon Cognito user pool. Configure the user pool to provide the hosted web UI for sign-up and sign-in.&lt;/li>
&lt;li>Create an IAM policy that allows access to the website that is stored in the S3 bucket. Attach the policy to an IAM group. Add IAM users to the group.&lt;/li>
&lt;/ol>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;p>&lt;mark style="color:white">2&lt;/mark>&lt;/p>
&lt;/div>
&lt;/details>
&lt;h3 id="q6">Q6&lt;/h3>
&lt;p>&lt;strong>A company has moved a legacy on-premises application to AWS by performing a lift and shift. The application exposes a REST API that can be used to retrieve billing information. The application is running on a single Amazon EC2 instance. The application code cannot support concurrent invocations. Many clients access the API, and the company adds new clients all the time.&lt;/strong>&lt;/p>
&lt;p>&lt;strong>A developer is concerned that the application might become overwhelmed by too many requests. The developer needs to limit the number of requests to the API for all current and future clients. The developer must not change the API, the application, or the client code.&lt;/strong>&lt;/p>
&lt;p>&lt;strong>What should the developer do to meet these requirements?&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>Place the API behind an Amazon API Gateway API. Set the server-side throttling limits.&lt;/li>
&lt;li>Place the API behind a Network Load Balancer. Set the target group throttling limits.&lt;/li>
&lt;li>Place the API behind an Application Load Balancer. Set the target group throttling limits.&lt;/li>
&lt;li>Place the API behind an Amazon API Gateway API. Set the per-client throttling limits.&lt;/li>
&lt;/ol>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;p>&lt;mark style="color:white">4&lt;/mark>&lt;/p>
&lt;/div>
&lt;/details></description></item><item><title>CodeDeploy</title><link>https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/codedeploy/</link><pubDate>Fri, 16 Sep 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/codedeploy/</guid><description>&lt;h2 id="about">About&lt;/h2>
&lt;p>CodeDeploy is a fully managed deployment service that automates software deploy­ments to a variety of compute services such as EC2, Fargate, Lambda, &amp;amp; on-pre­mises servers&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://aws.amazon.com/codedeploy/">Documentation&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.aws.amazon.com/codedeploy/?id=docs_gateway">User Guide&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>CodeDeploy can also deploy a serverless Lambda function.&lt;/p>
&lt;p>CodeDeploy can be connected to CodePipeline and use artifacts from there.&lt;/p>
&lt;div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
&lt;iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" loading="eager" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/Wx-ain8UryM?autoplay=0&amp;amp;controls=1&amp;amp;end=0&amp;amp;loop=0&amp;amp;mute=0&amp;amp;start=0" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" title="YouTube video">&lt;/iframe>
&lt;/div>
&lt;h3 id="platforms">Platforms&lt;/h3>
&lt;p>Need to choose the compute platform:&lt;/p>
&lt;ul>
&lt;li>EC2/On-premises.&lt;/li>
&lt;li>AWS Lambda.&lt;/li>
&lt;li>Amazon ECS.&lt;/li>
&lt;/ul>
&lt;h3 id="appspec-file">AppSpec File&lt;/h3>
&lt;p>The application specification file (AppSpec file) is a YAML-formatted, or JSON-formatted file used by CodeDeploy to manage a deployment.&lt;/p>
&lt;p>The AppSpec file defines the deployment actions you want AWS CodeDeploy to execute.&lt;/p>
&lt;h4 id="deployment-types">Deployment types&lt;/h4>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>In-place deployment (EC2 only)&lt;/strong>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Blue/green deployments:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>AWS Lambda: Traffic is shifted from one version of a Lambda function to a new version of the same Lambda function.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Amazon ECS: Traffic is shifted from a task set in your Amazon ECS service to an updated, replacement task set in the same Amazon ECS service.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>EC2/On-Premises: Traffic is shifted from one set of instances in the original environment to a replacement set of instances.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="price">Price&lt;/h2>
&lt;p>&lt;a href="https://aws.amazon.com/codedeploy/pricing/">Current price&lt;/a>&lt;/p>
&lt;h2 id="use-cases">Use Cases&lt;/h2>
&lt;p>Type: Developer Tools&lt;/p>
&lt;p>&lt;p class="md__image">
&lt;img
src="https://assets.cloudacademy.com/bakery/media/uploads/lab/blobid0-e29278ba-0b4a-4d62-8136-760167f7aafa.png"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;h2 id="practice">Practice&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://cloudacademy.com/lab/continuous-integration-deployment-aws-code-services/">Continuous Integration and Deployment with AWS Code Services&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="questions">Questions&lt;/h2>
&lt;h3 id="q1">Q1&lt;/h3>
&lt;p>&lt;strong>What will happen if you delete an unused custom deployment configuration in AWS CodeDeploy?&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>You will no longer be able to associate the deleted deployment configuration with new deployments and new deployment groups.&lt;/li>
&lt;li>Nothing will happen, as the custom deployment configuration was unused.&lt;/li>
&lt;li>All deployment groups associated with the custom deployment configuration will also be deleted.&lt;/li>
&lt;li>All deployments associated with the custom deployment configuration will be terminated.&lt;/li>
&lt;/ol>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;p>&lt;a href="https://docs.aws.amazon.com/codedeploy/latest/userguide/deployment-configurations-delete.html">https://docs.aws.amazon.com/codedeploy/latest/userguide/deployment-configurations-delete.html&lt;/a>&lt;/p>
&lt;p>Can delete only if unused.&lt;/p>
&lt;p>&lt;mark style="color:white">1&lt;/mark>&lt;/p>
&lt;/div>
&lt;/details>
&lt;h3 id="q2">Q2&lt;/h3>
&lt;p>&lt;strong>What happens when you delete a deployment group with the AWS CLI in AWS CodeDeploy?&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>All details associated with that deployment group will be moved from AWS CodeDeploy to AWS OpsWorks.&lt;/li>
&lt;li>The instances used in the deployment group will change.&lt;/li>
&lt;li>All details associated with that deployment group will also be deleted from AWS CodeDeploy.&lt;/li>
&lt;li>The instances that were participating in the deployment group will run once again.&lt;/li>
&lt;/ol>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;p>&lt;a href="https://docs.aws.amazon.com/codedeploy/latest/userguide/deployment-groups-delete.html">https://docs.aws.amazon.com/codedeploy/latest/userguide/deployment-groups-delete.html&lt;/a>&lt;/p>
&lt;p>If you delete a deployment group, all details associated with that deployment group will also be deleted from CodeDeploy. The instances used in the deployment group will remain unchanged. This action cannot be undone.&lt;/p>
&lt;p>&lt;mark style="color:white">3&lt;/mark>&lt;/p>
&lt;/div>
&lt;/details></description></item><item><title>CodeBuild</title><link>https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/codebuild/</link><pubDate>Fri, 16 Sep 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/codebuild/</guid><description>&lt;h2 id="about">About&lt;/h2>
&lt;p>CodeBuild is a fully managed service that assembles source code, runs unit tests, &amp;amp; also generates artefacts ready to deploy.&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://aws.amazon.com/codebuild/">Documentation&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.aws.amazon.com/codebuild/?id=docs_gateway">User Guide&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>CodeBuild is a code creation service that also produces code artefacts upon request.&lt;/p>
&lt;p>CodeBuild is an alternative to other build tools such as Jenkins.&lt;/p>
&lt;p>CodeBuild is integrated with KMS for encryption of build artifacts, IAM for build permissions, VPC for network security, and CloudTrail for logging API calls.&lt;/p>
&lt;p>CodeBuild is a fully managed build service to compile source code, run unit tests and produce artifacts that are ready for deployment. Not the best fit for serverless template deployment or serverless application initialization.&lt;/p>
&lt;h3 id="buildspecyml">buildspec.yml&lt;/h3>
&lt;p>Build instructions can be defined in the code (&lt;strong>buildspec.yml&lt;/strong>).&lt;/p>
&lt;h3 id="codebuild-local-build">CodeBuild Local Build&lt;/h3>
&lt;p>In case you need to do deep troubleshooting beyond analyzing log files.&lt;/p>
&lt;p>Can run CodeBuild locally on your computer using Docker.&lt;/p>
&lt;p>Leverages the CodeBuild agent.&lt;/p>
&lt;h2 id="price">Price&lt;/h2>
&lt;p>&lt;a href="https://aws.amazon.com/codebuild/pricing/">Current price&lt;/a>&lt;/p>
&lt;p>You pay based on the time it takes to complete the builds.&lt;/p>
&lt;h2 id="lab">Lab&lt;/h2>
&lt;p>cicd-aws-code-services
Chapters:&lt;/p>
&lt;ol>
&lt;li>Logging in to the Amazon Web Services Console&lt;/li>
&lt;li>Creating an AWS CodeCommit Repository&lt;/li>
&lt;li>Committing Code to Your AWS CodeCommit Repository&lt;/li>
&lt;li>Building and Testing with AWS CodeBuild&lt;/li>
&lt;li>Deploying with AWS CodeDeploy&lt;/li>
&lt;li>Automating Your Deployment with AWS CodePipeline&lt;/li>
&lt;li>Following the Continuous Deployment Pipeline&lt;/li>
&lt;li>Recovering Automatically from a Failed Deployment&lt;/li>
&lt;li>Using AWS CodeDeploy Blue/Green Deployments in Your Pipeline&lt;/li>
&lt;/ol>
&lt;p>&lt;p class="md__image">
&lt;img
src="./img/codedeploy-codepipeline-codestar.jpg"
id="zoom-default"
alt="codedeploy-codepipeline-codestar overview"
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;h2 id="questions">Questions&lt;/h2>
&lt;h3 id="q1">Q1&lt;/h3>
&lt;p>&lt;strong>You are creating a few test functions to demonstrate the ease of developing serverless applications. You want to use the command line to deploy AWS Lambda functions, an Amazon API Gateway, and Amazon DynamoDB tables.&lt;/strong>&lt;/p>
&lt;p>&lt;strong>What is the easiest way to develop these simple applications?&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>Install AWS SAM CLI and run “sam init [options]” with the templates’ data.&lt;/li>
&lt;li>Use AWS step function visual workflow and insert your templates in the states&lt;/li>
&lt;li>Save your template in the Serverless Application Repository and use AWS SAM&lt;/li>
&lt;/ol>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;p>AWS SAM - AWS Serverless Application Model&lt;/p>
&lt;p>&lt;a href="https://aws.amazon.com/serverless/sam/">https://aws.amazon.com/serverless/sam/&lt;/a>&lt;/p>
&lt;p>&lt;mark style="color:white">1&lt;/mark>&lt;/p>
&lt;/div>
&lt;/details></description></item><item><title>CodePipeline</title><link>https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/codepipeline/</link><pubDate>Fri, 16 Sep 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/codepipeline/</guid><description>&lt;h2 id="about">About&lt;/h2>
&lt;p>AWS CodePipeline is a fully managed continuous delivery service that helps you automate your release pipelines for fast and reliable application and infrastructure updates.&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://aws.amazon.com/codepipeline/">Documentation&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.aws.amazon.com/codepipeline/?id=docs_gateway">User Guide&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>CodePipeline automates the build, test, and deploy phases of your release process every time there is a code change, based on the release model you define.&lt;/p>
&lt;p>You can easily integrate AWS CodePipeline with third-party services such as GitHub or with your own custom plugin. With AWS CodePipeline, you only pay for what you use.&lt;/p>
&lt;p>&lt;p class="md__image">
&lt;img
src="https://d1.awsstatic.com/Products/product-name/diagrams/product-page-diagram_CodePipeLine.7b8dd19eb6478b7f6f747d936c2f0b0b66757bbf.png"
id="zoom-default"
alt="CodePipeline Flow"
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;h3 id="alternatives">Alternatives&lt;/h3>
&lt;ul>
&lt;li>Bamboo.&lt;/li>
&lt;li>CircleCI.&lt;/li>
&lt;li>Jenkins.&lt;/li>
&lt;li>Travis CI.&lt;/li>
&lt;li>GitLab.&lt;/li>
&lt;li>TeamCity.&lt;/li>
&lt;li>Azure DevOps Server.&lt;/li>
&lt;li>Google Cloud Build.&lt;/li>
&lt;/ul>
&lt;h3 id="terminology">Terminology&lt;/h3>
&lt;p>&lt;strong>Pipelines&lt;/strong>&lt;/p>
&lt;p>A workflow that describes how software changes go through the release process.&lt;/p>
&lt;p>&lt;strong>Artifacts&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Files or changes that will be worked on by the actions and stages in the pipeline.&lt;/li>
&lt;li>Each pipeline stage can create “artifacts”.&lt;/li>
&lt;li>Artifacts are passed, stored in Amazon S3, and then passed on to the next stage.&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Stages&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Pipelines are broken up into stages, e.g., build stage, deployment stage.&lt;/li>
&lt;li>Each stage can have sequential actions and or parallel actions.&lt;/li>
&lt;li>Stage examples would be build, test, deploy, load test etc.&lt;/li>
&lt;li>Manual approval can be defined at any stage.&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Actions&lt;/strong>&lt;/p>
&lt;p>Stages contain at least one action, these actions take some action on artifacts and will have artifacts as either an input, and output, or both.&lt;/p>
&lt;p>&lt;strong>Transitions&lt;/strong>&lt;/p>
&lt;p>The progressing from one stage to another inside of a pipeline.&lt;/p>
&lt;h2 id="price">Price&lt;/h2>
&lt;p>&lt;a href="https://aws.amazon.com/codepipeline/pricing/">Current price&lt;/a>&lt;/p>
&lt;h2 id="questions">Questions&lt;/h2>
&lt;h3 id="q1">Q1&lt;/h3>
&lt;p>&lt;strong>You are configuring a Jenkins project that is installed on an Amazon EC2 instance running a Windows operating system. You want this Jenkins project to integrate with AWS CodePipeline.&lt;/strong>&lt;/p>
&lt;p>&lt;strong>Which actions should you take to make this function perform correctly? (2 answers)&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>Restart all Amazon EC2 instances that are running a Windows operating system.&lt;/li>
&lt;li>Provide the IAM user credentials to integrate AWS CodePipeline.&lt;/li>
&lt;li>Fill out the required fields for your proxy host.&lt;/li>
&lt;li>Modify the PATH variable to include the directory where you installed Jenkins on all Amazon EC2 instance that are running a Windows operating system.&lt;/li>
&lt;/ol>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;p>&lt;a href="https://docs.aws.amazon.com/codepipeline/latest/userguide/tutorials-four-stage-pipeline.html">https://docs.aws.amazon.com/codepipeline/latest/userguide/tutorials-four-stage-pipeline.html&lt;/a>&lt;/p>
&lt;p>&lt;mark style="color:white">2, 3&lt;/mark>&lt;/p>
&lt;/div>
&lt;/details></description></item><item><title>CodeArtifact</title><link>https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/codeartifact/</link><pubDate>Sun, 18 Sep 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/codeartifact/</guid><description>&lt;h2 id="about">About&lt;/h2>
&lt;p>AWS CodeArtifact is a fully managed artifact repository service that makes it easy for organizations of any size to securely store, publish, and share software packages used in their software development process.&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://aws.amazon.com/codeartifact/">Documentation&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.aws.amazon.com/codeartifact/?id=docs_gateway">User Guide&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>&lt;p class="md__image">
&lt;img
src="https://d1.awsstatic.com/diagrams/CodeArtifact_HIW_Diagram.9640a3361d4c20f79fbca661ee00d6a0ea706316.png"
id="zoom-default"
alt="Amazon CodeArtifact Flow"
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;p>CodeAr­tifact is a secure storage, publishing, and sharing of software code packages used in a development process organisation&amp;rsquo;s software development. CodeAr­tifact makes it easy for small organisations to store, publish, and share software packages.&lt;/p>
&lt;p>CodeArtifact can be configured to automatically fetch software packages and dependencies from public artifact repositories.&lt;/p>
&lt;p>CodeArtifact works with commonly used package managers and build tools like Maven, Gradle, npm, yarn, twine, pip, and NuGet making it easy to integrate into existing development workflows.&lt;/p>
&lt;h2 id="price">Price&lt;/h2>
&lt;p>Pay only for what you use – the size of the artifacts stored, the number of requests made, and the amount of data transferred out of an AWS Region. CodeArtifact includes a monthly free tier for storage and requests&lt;/p>
&lt;p>&lt;a href="https://aws.amazon.com/codeartifact/pricing/">Current price&lt;/a>&lt;/p>
&lt;h2 id="use-cases">Use Cases&lt;/h2>
&lt;p>Type: Developer Tools&lt;/p>
&lt;h3 id="alternatives">Alternatives&lt;/h3>
&lt;ul>
&lt;li>JFrog Artifactory&lt;/li>
&lt;li>Docker hub&lt;/li>
&lt;li>Sonatype Nexus Platform&lt;/li>
&lt;li>Helm&lt;/li>
&lt;li>Azure DevOps Services&lt;/li>
&lt;li>Github&lt;/li>
&lt;/ul>
&lt;h3 id="usage">Usage&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>aws codeartifact list-domains --region us-east-1
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="practice">Practice&lt;/h2>
&lt;p>&lt;a href="https://docs.aws.amazon.com/codeartifact/latest/ug/getting-started-console.html">Getting started using the console&lt;/a>&lt;/p></description></item><item><title>X-Ray</title><link>https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/xray/</link><pubDate>Mon, 19 Sep 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/xray/</guid><description>&lt;h2 id="about">About&lt;/h2>
&lt;p>AWS X-Ray helps developers analyze and debug production, distributed applications, such as those built using a microservices architecture.&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://aws.amazon.com/xray/">Documentation&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.aws.amazon.com/xray/?id=docs_gateway">User Guide&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>&lt;p class="md__image">
&lt;img
src="https://d1.awsstatic.com/Products/product-name/Images/product-page-diagram_AWS-X-Ray_how-it-works%402x.0d5b08dc2f788d3003a05ddb11e383ba54f41fc4.png"
id="zoom-default"
alt="X-Ray Flow"
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;p>X-Ray allows software engineers to view the state of a system at a glance, identify potential bottlenecks, and make informed operational decisions to improve performance and reliability. X-Ray inspects application code using a combination of machine and customer-provided data to identify potential bottlenecks and analyze performance and performance trends for each test scenario.&lt;/p>
&lt;h3 id="terminology">Terminology&lt;/h3>
&lt;p>AWS X-Ray receives data from services as &lt;strong>segments&lt;/strong>. X-Ray then groups segments that have a common request into &lt;strong>traces&lt;/strong>. X-Ray processes the traces to generate a service graph that provides a visual representation of your application&lt;/p>
&lt;p>&lt;strong>X-Ray Trace Hierarchy&lt;/strong>: Trace &amp;gt; Segment &amp;gt; Sub Segment&lt;/p>
&lt;p>&lt;strong>Trace&lt;/strong>&lt;/p>
&lt;p>An X-Ray trace is a set of data points that share the same trace ID.&lt;/p>
&lt;p>&lt;strong>Segments&lt;/strong>&lt;/p>
&lt;p>A segment is a JSON representation of a request that your application serves.&lt;/p>
&lt;p>A trace segment records information about the original request, information about the work that your application does locally, and subsegments with information about downstream calls that your application makes to AWS resources, HTTP APIs, and SQL databases.&lt;/p>
&lt;p>&lt;strong>Subsegments&lt;/strong>&lt;/p>
&lt;p>Subsegments provide more granular timing information and details about downstream calls that your application made to fulfill the original request.&lt;/p>
&lt;p>&lt;strong>Annotations&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>An X-Ray annotation is system-defined, or user-defined data associated with a segment&lt;/li>
&lt;li>A segment can contain multiple annotations.&lt;/li>
&lt;li>Annotations are used to describe the request, the response, and other information about the segment&lt;/li>
&lt;li>Can be used for adding system or user-defined data to segments and subsegments that you want to index for search.&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Sampling&lt;/strong>&lt;/p>
&lt;p>X-Ray traces are sampled at a rate that you specify. The rate is specified in the &lt;code>sampling_rate&lt;/code> field of the &lt;code>sampling&lt;/code> object in the &lt;code>config&lt;/code> object.&lt;/p>
&lt;p>&lt;strong>Metadata&lt;/strong>&lt;/p>
&lt;p>X-Ray traces contain metadata that is useful for understanding the trace.&lt;/p>
&lt;ul>
&lt;li>Metadata (Key / value pairs) is not indexed and cannot be used for searching&lt;/li>
&lt;/ul>
&lt;h2 id="digest">Digest&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>Trace request across microservices/AWS services&lt;/p>
&lt;ul>
&lt;li>Analyze, Troubleshoot errors, Solve performance issues&lt;/li>
&lt;li>Gather tracing information
&lt;ul>
&lt;li>From applications/components/AWS Services&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Tools to view, filter and gain insights (Ex: Service Map)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>How does Tracing work?&lt;/p>
&lt;ul>
&lt;li>Unique trace ID assigned to every client request
&lt;ul>
&lt;li>&lt;code>X-Amzn-Trace-Id:Root=1-5759e988-bd862e3fe&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Each service in request chain sends traces to X-Ray with trace ID
&lt;ul>
&lt;li>X-Ray gathers all the information and provides visualization&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>How do you reduce performance impact due to tracing?
&lt;ul>
&lt;li>Sampling - Only a sub set of requests are sampled (Configurable)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>How can AWS Services and your applications send tracing info?
&lt;ul>
&lt;li>Step 1 : Update Application Code Using X-Ray SDK&lt;/li>
&lt;li>Step 2: Use X-Ray agents (EASY to use in some services! Ex: AWS Lambda)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Segments and Sub-segments can include an annotations object containing one or more fields that X-Ray indexes for use with Filter Expressions. It is indexed. Use up to 50 annotations per trace.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Total sampled request per second = &lt;code>Reservoir size + ((incoming requests per second - reservoir size) * fixed rate)&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Default sampling X-ray SDK first request each second and 5% of any additional requests&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Tracing header can be added in &lt;em>http&lt;/em> request header&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Annotations vs Segments vs Subsegments vs metadata&lt;/p>
&lt;/li>
&lt;li>
&lt;p>X-ray daemon listens for traffic on UDP port 2000&lt;/p>
&lt;/li>
&lt;li>
&lt;p>X-ray SDK provides interceptors to add your code to trace incoming HTTP requests.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>X-ray in EC2: You need the X-Ray daemon to be running on your EC2 instances in order to send data to X-Ray. User data script could be used to install the X-Ray daemon in EC2 instance.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>X-ray in ECS: In Amazon ECS, create a Docker image that runs the X-Ray daemon, upload it to a Docker image repository, and then deploy it to your Amazon ECS cluster.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>X-ray in elastic beanstalk: Enable the X-Ray daemon by including the xray-daemon.config configuration file in the &lt;code>.ebextensions&lt;/code> directory of your source code&lt;/p>
&lt;/li>
&lt;li>
&lt;p>AWS X-Ray helps developers analyze and debug production, distributed applications, such as those built using a micro-service architecture.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>A segment can break down the data about the work done into subsegments. Subsegments provide more granular timing information and details about - downstream calls that your application made to fulfill the original request.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Add annotations to subsegment document if you want to trace downstream calls.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Segments and subsegment can include a metadata object containing one or more fields with values of any type, including objects and arrays.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Tracing header is added in the HTTP request header. A tracing header (&lt;code>X-Amzn-Trace-ld&lt;/code>) can originate from the X-Ray SDK, an AWS service, or the - client request.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Use the &lt;code>GetTraceSummaries&lt;/code> API to get the list of trace IDs of the application and then retrieve the list of traces using BatchGetTraces API in - order to develop the custom debug tool&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="price">Price&lt;/h2>
&lt;p>&lt;a href="https://aws.amazon.com/xray/pricing/">Current price&lt;/a>&lt;/p>
&lt;h2 id="use-cases">Use Cases&lt;/h2>
&lt;p>Type: Developer Tools&lt;/p>
&lt;h3 id="alternatives">Alternatives&lt;/h3>
&lt;ul>
&lt;li>Google Stackdriver&lt;/li>
&lt;li>Azure Monitor&lt;/li>
&lt;li>Elastic Observability&lt;/li>
&lt;li>Datadog&lt;/li>
&lt;li>Splunk&lt;/li>
&lt;/ul>
&lt;p>AWS X-Ray supports applications running on:&lt;/p>
&lt;ul>
&lt;li>Amazon Elastic Compute Cloud (Amazon EC2)&lt;/li>
&lt;li>Amazon EC2 Container Service (Amazon ECS)&lt;/li>
&lt;li>AWS Lambda&lt;/li>
&lt;li>WS Elastic Beanstalk&lt;/li>
&lt;/ul>
&lt;h2 id="practice">Practice&lt;/h2>
&lt;!-- [Tracing Java Applications with AWS X-Ray](tracing-java-apps-with-aws-x-ray) -->
&lt;h2 id="questions">Questions&lt;/h2>
&lt;h3 id="q1">Q1&lt;/h3>
&lt;p>&lt;strong>You joined an application monitoring team. Your role focuses on finding system performance and bottlenecks in Lambda functions and providing specific solutions. Another teammate focuses on auditing the systems.&lt;/strong>&lt;/p>
&lt;p>&lt;strong>Which AWS service will be your main tool?&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>AWS X-Ray&lt;/li>
&lt;li>AWS IAM&lt;/li>
&lt;li>AWS CloudTrail&lt;/li>
&lt;li>AWS Athena&lt;/li>
&lt;/ol>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;p>AWS X-Ray provides graphs of system performance and identifies bottlenecks&lt;/p>
&lt;p>&lt;mark style="color:white">1&lt;/mark>&lt;/p>
&lt;/div>
&lt;/details></description></item><item><title>Fault Injection Simulator</title><link>https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/fis/</link><pubDate>Mon, 19 Sep 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/fis/</guid><description>&lt;h2 id="about">About&lt;/h2>
&lt;p>AWS Fault Injection Simulator (FIS) is a fully managed service for running fault injection experiments on AWS that makes it easier to improve an application’s performance, observability, and resiliency.&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://aws.amazon.com/fis/">Documentation&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.aws.amazon.com/fis/?id=docs_gateway">User Guide&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>&lt;p class="md__image">
&lt;img
src="https://d1.awsstatic.com/fis/AWS-Fault-Injection-Simulator_HIW-Diagram.1e3b58caa9f8db5200a1e832b716118b0f2c3b8c.png"
id="zoom-default"
alt="Fault Injection Simulator Flow"
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;h2 id="price">Price&lt;/h2>
&lt;p>&lt;a href="https://aws.amazon.com/fis/pricing/">Current price&lt;/a>&lt;/p>
&lt;p>With AWS FIS, you pay only for what you use. There are no upfront costs or minimum fees. You are charged based on the duration that an action is active. The AWS FIS price is $0.10 per action-minute.&lt;/p>
&lt;h2 id="terminology-and-concepts">Terminology and Concepts&lt;/h2>
&lt;p>Everything starts with an &lt;strong>experiment template&lt;/strong>. The experiment template defines the targets that participate in the experiment. Supported targets are:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="../ec2">EC2&lt;/a> Instances&lt;/li>
&lt;li>&lt;a href="../eks">EKS&lt;/a> node groups&lt;/li>
&lt;li>&lt;a href="../rds">RDS&lt;/a> clusters &amp;amp; instances&lt;/li>
&lt;li>&lt;a href="../iam">IAM&lt;/a> roles&lt;/li>
&lt;/ul>
&lt;p>The &lt;strong>actions&lt;/strong> define the &lt;strong>injected faults&lt;/strong>. You can run actions in parallel or sequence.&lt;/p>
&lt;p>Some action examples:&lt;/p>
&lt;ul>
&lt;li>AWS API level errors for the EC2 service&lt;/li>
&lt;li>Stop/reboot/terminate EC2 instances&lt;/li>
&lt;li>Run SSM commands on EC2 instances to stress CPU or memory, add network latency, or kill a process&lt;/li>
&lt;li>Reboot RDS instance&lt;/li>
&lt;li>Failover RDS cluster&lt;/li>
&lt;li>Drain ECS container instance&lt;/li>
&lt;li>Terminate EKS node group instance&lt;/li>
&lt;/ul>
&lt;h2 id="use-cases">Use Cases&lt;/h2>
&lt;ul>
&lt;li>Periodic Game Days&lt;/li>
&lt;li>Continuous Delivery Pipeline Integration&lt;/li>
&lt;/ul>
&lt;h2 id="practice">Practice&lt;/h2>
&lt;p>&lt;a href="https://docs.aws.amazon.com/fis/latest/userguide/fis-tutorial-stop-instances.html">Test instance stop and start using&lt;/a>&lt;/p>
&lt;h2 id="questions">Questions&lt;/h2>
&lt;h3 id="q1">Q1&lt;/h3>
&lt;p>&lt;strong>What is Chaos Engineering?&lt;/strong>&lt;/p>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;p>Chaos engineering is the process of stressing an application in testing or production environments by creating disruptive events, such as server outages or API throttling, observing how the system responds, and implementing improvements.&lt;/p>
&lt;p>Chaos engineering helps teams create the real-world conditions needed to uncover the hidden issues, monitoring blind spots, and performance bottlenecks that are difficult to find in distributed systems.&lt;/p>
&lt;p>It starts with analyzing the steady-state behavior, building an experiment hypothesis (e.g., terminating x number of instances will lead to &lt;em>x%&lt;/em> more retries), executing the experiment by injecting fault actions, monitoring roll back conditions, and addressing the weaknesses.&lt;/p>
&lt;/div>
&lt;/details></description></item><item><title>Elastic Container Registry</title><link>https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/ecr/</link><pubDate>Tue, 20 Sep 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/ecr/</guid><description>&lt;h2 id="about">About&lt;/h2>
&lt;p>Amazon Elastic Container Registry (Amazon ECR) - Fully managed container registry offering high-performance hosting, so you can reliably deploy application images and artifacts anywhere&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://aws.amazon.com/ecr/">Documentation&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.aws.amazon.com/ecr/?id=docs_gateway">User Guide&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Hosted private Docker registry&lt;/p>
&lt;p>&lt;p class="md__image">
&lt;img
src="https://d1.awsstatic.com/legal/AmazonElasticContainerRegistry/Product-Page-Diagram_Amazon-ECR.2f9e7f26ef78f4dc6f058f7eeb07cf696f6951c1.png"
id="zoom-default"
alt="Elastic Container Registry Flow"
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;h3 id="alternatives">Alternatives&lt;/h3>
&lt;ul>
&lt;li>Docker Hub&lt;/li>
&lt;li>JFrog Artifactory&lt;/li>
&lt;li>Azure Container Registry&lt;/li>
&lt;li>Harbor&lt;/li>
&lt;li>Google Container Registry&lt;/li>
&lt;li>Red Hat Quay&lt;/li>
&lt;li>JFrog Container Registry&lt;/li>
&lt;/ul>
&lt;h2 id="price">Price&lt;/h2>
&lt;p>&lt;a href="https://aws.amazon.com/ecr/pricing/">Current price&lt;/a>&lt;/p>
&lt;h2 id="use-cases">Use Cases&lt;/h2>
&lt;p>Store, encrypt, and manage container images&lt;/p>
&lt;ul>
&lt;li>Manage software vulnerabilities&lt;/li>
&lt;li>Streamline your deployment workloads&lt;/li>
&lt;li>Manage image lifecycle policies&lt;/li>
&lt;/ul>
&lt;p>Type: Containers&lt;/p>
&lt;p>Same type services: Elastic Container Service (ECS), Elastic Container Registry (ECR), Elastic Kubernetes Service (EKS), Fargate&lt;/p>
&lt;h2 id="practice">Practice&lt;/h2>
&lt;p>This commands returns the command to execute to be able to login to ECR:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Login&lt;/p>
&lt;ul>
&lt;li>&lt;strong>get-login-password:&lt;/strong>&lt;code>aws ecr get-login-password --region region | docker login --username AWS --password-stdin aws_account_id.dkr.ecr.region.amazonaws.com&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Create a repository:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>aws ecr create-repository &lt;span style="color:#4070a0;font-weight:bold">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4070a0;font-weight:bold">&lt;/span> --repository-name hello-repository &lt;span style="color:#4070a0;font-weight:bold">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4070a0;font-weight:bold">&lt;/span> --image-scanning-configuration &lt;span style="color:#bb60d5">scanOnPush&lt;/span>&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#007020">true&lt;/span> &lt;span style="color:#4070a0;font-weight:bold">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4070a0;font-weight:bold">&lt;/span> --region region
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>Tag image&lt;/p>
&lt;ul>
&lt;li>&lt;code>docker tag hello-world:latest aws_account_id.dkr.ecr.region.amazonaws.com/hello-repository&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Push&lt;/p>
&lt;ul>
&lt;li>&lt;code>docker push aws_account_id.dkr.ecr.region.amazonaws.com/hello-repository&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Pull&lt;/p>
&lt;ul>
&lt;li>&lt;code>docker pull aws_account_id.dkr.ecr.region.amazonaws.com/hello-repository:latest&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Delete an image&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>aws ecr batch-delete-image \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --repository-name hello-repository \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --image-ids imageTag=latest \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --region region
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>Delete a repository&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>aws ecr delete-repository \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --repository-name hello-repository \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --force \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --region region
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;p>Labs:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://cloudacademy.com/lab/use-aws-fargate-serverless-deployment-container-applications/">Use AWS Fargate for Serverless Deployment of Container Applications&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.aws.amazon.com/AmazonECR/latest/public/getting-started-cli.html">Quick start: Publishing to Amazon ECR Public using the AWS CLI&lt;/a>&lt;/li>
&lt;/ul>
&lt;div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
&lt;iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" loading="eager" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/tANNsV6bGbQ?autoplay=0&amp;amp;controls=1&amp;amp;end=0&amp;amp;loop=0&amp;amp;mute=0&amp;amp;start=0" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" title="YouTube video">&lt;/iframe>
&lt;/div>
&lt;p>Notes:&lt;/p>
&lt;ul>
&lt;li>If you get a &lt;strong>503 Service Temporarily Unavailable&lt;/strong> error, try again after 30 seconds to let the load balancer finish adding the task to the target group.&lt;/li>
&lt;/ul></description></item><item><title>Elastic Container Service</title><link>https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/ecs/</link><pubDate>Tue, 20 Sep 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/ecs/</guid><description>&lt;h2 id="about">About&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://aws.amazon.com/ecs/">Documentation&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.aws.amazon.com/ecs/?id=docs_gateway">User Guide&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Highly secure, reliable, &amp;amp; scalable way to run contai­ners&lt;/p>
&lt;p>&lt;p class="md__image">
&lt;img
src="https://d1.awsstatic.com/product-page-diagram_Amazon-ECS%402x.0d872eb6fb782ddc733a27d2bb9db795fed71185.png"
id="zoom-default"
alt="Amazon Elastic Container Service Flow"
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;p>&lt;p class="md__image">
&lt;img
src="./img/ecs-scheme.jpg"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;h3 id="alternatives">Alternatives&lt;/h3>
&lt;ul>
&lt;li>Google Container Engine (GKE)&lt;/li>
&lt;li>Azure Container Service&lt;/li>
&lt;li>IBM Bluemix Container Service&lt;/li>
&lt;li>Jelastic Multi-Cloud PaaS&lt;/li>
&lt;/ul>
&lt;h3 id="terminology">Terminology&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Amazon ECS&lt;/th>
&lt;th>Term Definition&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Cluster&lt;/td>
&lt;td>Logical Grouping of EC2 Instances&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Container&lt;/td>
&lt;td>Instance EC2 instance running the ECS agent&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Task Definition&lt;/td>
&lt;td>Blueprint that describes how a docker container should launch&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Task&lt;/td>
&lt;td>A running container using settings in a Task Definition&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Service&lt;/td>
&lt;td>Defines long running tasks – can control task count with Auto Scaling and attach an ELB&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="digest">Digest&lt;/h2>
&lt;p>&lt;p class="md__image">
&lt;img
src="./img/ecs-ecr-scheme.png"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;ul>
&lt;li>Microservices are built in multiple programming languages&lt;/li>
&lt;li>Containers simplify deployment of microservices:
&lt;ul>
&lt;li>Step 1 : Create a self contained Docker image
&lt;ul>
&lt;li>Application Runtime (JDK or Python), Application code and Dependencies&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Step 2 : Run it as a container any where Local machine OR Corporate data center OR Cloud&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Use On-Demand instances or Spot instances&lt;/li>
&lt;li>Launch type: EC2 or Fargate&lt;/li>
&lt;li>Data volumes attached to containers&lt;/li>
&lt;li>Deployment type:
&lt;ul>
&lt;li>Rolling update&lt;/li>
&lt;li>Blue/green deployment (powered by AWS CodeDeploy)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Task Placement Strategies:
&lt;ul>
&lt;li>&lt;strong>binpack&lt;/strong> - Leave least amount of unused CPU or memory. &lt;strong>Minimizes number of container instances in use&lt;/strong>&lt;/li>
&lt;li>&lt;strong>random&lt;/strong> - Random task placement&lt;/li>
&lt;li>&lt;strong>spread&lt;/strong> - Based on specified values:
&lt;ul>
&lt;li>Host (instanceId)&lt;/li>
&lt;li>(OR) Availability Zone(attribute:ecs.availability-zone)&lt;/li>
&lt;li>(Alowed) Combine strategies and prioritize&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>How do you manage 100s of containers?&lt;/li>
&lt;li>ECS - Fully managed service for container orchestration
&lt;ul>
&lt;li>Step 1 : Create a Cluster (Group of one or more EC2 instances)&lt;/li>
&lt;li>Step 2: Deploy your microservice containers&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>AWS Fargate: Serverless ECS. DON&amp;rsquo;T worry about EC2 instances.&lt;/li>
&lt;li>Cloud Neutral: Kubernetes
&lt;ul>
&lt;li>AWS - AWS Elastic Kubernetes Service (EKS)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Load balancing:
&lt;ul>
&lt;li>Performed using Application Load Balancers
&lt;ul>
&lt;li>&lt;strong>Dynamic host port mapping&lt;/strong>: Multiple tasks from the same service are allowed per EC2 (container) instance&lt;/li>
&lt;li>&lt;strong>Path-based routing&lt;/strong>: Multiple services can use the same listener port on same ALB and be routed based on path (&amp;lt;www.myapp.com/microservice-a&amp;gt; and &amp;lt;www.myapp.com/microservice-b&amp;gt;)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="price">Price&lt;/h2>
&lt;p>&lt;a href="https://aws.amazon.com/ecs/pricing/">Current price&lt;/a>&lt;/p>
&lt;h2 id="use-cases">Use Cases&lt;/h2>
&lt;p>Type: Containers&lt;/p>
&lt;p>Same type services: Elastic Container Service (ECS), Elastic Container Registry (ECR), Elastic Kubernetes Service (EKS), Fargate&lt;/p>
&lt;p>&lt;p class="md__image">
&lt;img
src="https://romankurnovskii.com/ru/tracks/aws-certified-developer-associate/ecs/img/amazon-ecs-service-auto-scaling.jpg"
id="zoom-default"
alt="ECS Auto Scaling"
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;p>Best practice:&lt;/p>
&lt;ul>
&lt;li>10 Microservices =&amp;gt; 10 Task Definitions =&amp;gt; 10 Task IAM Roles with individual permissions needed by each microservice&lt;/li>
&lt;/ul>
&lt;h3 id="ecs-vs-eks">ECS vs EKS&lt;/h3>
&lt;p>Amazon also provides the Elastic Container Service for Kubernetes (Amazon EKS) which can be used to deploy, manage, and scale containerized applications using Kubernetes on AWS.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Amazon ECS&lt;/th>
&lt;th>Amazon EKS&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Managed, highly available, highly scalable container platform&lt;/td>
&lt;td>Managed, highly available, highly scalable container platform&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS-specific platform that supports Docker Containers&lt;/td>
&lt;td>Compatible with upstream Kubernetes so it’s easy to lift and shift from other Kubernetes deployments&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Considered simpler and easier to use&lt;/td>
&lt;td>Considered more feature-rich and complex with a steep learning curve&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Leverages AWS services like Route 53, ALB, and CloudWatch&lt;/td>
&lt;td>A hosted Kubernetes platform that handles many things internally&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>“Tasks” are instances of containers that are run on underlying compute but more of less isolated&lt;/td>
&lt;td>“Pods” are containers collocated with one another and can have shared access to each other&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Limited extensibility&lt;/td>
&lt;td>Extensible via a wide variety of third-party and community add-ons.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="questions">Questions&lt;/h2>
&lt;h3 id="q1">Q1&lt;/h3>
&lt;p>&lt;strong>You are asked to establish a baseline for normal Amazon ECS performance in your environment by measuring performance at various times and under different load conditions. To establish a baseline, Amazon recommends that you should at a minimum monitor the CPU and ____ for your Amazon ECS clusters and the CPU and ____ metrics for your Amazon ECS services.&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>memory reservation and utilization; concurrent connections&lt;/li>
&lt;li>memory utilization; memory reservation and utilization&lt;/li>
&lt;li>concurrent connections; memory reservation and utilization&lt;/li>
&lt;li>memory reservation and utilization; memory utilization&lt;/li>
&lt;/ol>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;p>&lt;a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs_monitoring.html">https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs_monitoring.html&lt;/a>&lt;/p>
&lt;p>&lt;mark style="color:white">1, 2&lt;/mark>&lt;/p>
&lt;/div>
&lt;/details></description></item><item><title>Fargate</title><link>https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/fargate/</link><pubDate>Wed, 21 Sep 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/fargate/</guid><description>&lt;h2 id="about">About&lt;/h2>
&lt;p>Serverless version of &lt;a href="../ecs">ECS&lt;/a>.&lt;/p>
&lt;p>Serverless compute for contai­ners.&lt;/p>
&lt;p>AWS Fargate is a serverless, pay-as-you-go compute engine that lets you focus on &lt;strong>building applications without managing servers&lt;/strong>.&lt;/p>
&lt;p>Deploy and manage your applications, not infrastructure. Fargate removes the operational overhead of scaling, patching, securing, and managing servers.&lt;/p>
&lt;p>Compatible with both Amazon Elastic Container Service (ECS) and Amazon Elastic Kubernetes Service (EKS).&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://aws.amazon.com/fargate/">Documentation&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.aws.amazon.com/fargate/?id=docs_gateway">User Guide&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>&lt;p class="md__image">
&lt;img
src="https://d1.awsstatic.com/re19/FargateonEKS/Product-Page-Diagram_Fargate%402x.a20fb2b15c2aebeda3a44dbbb0b10b82fb89aa6a.png"
id="zoom-default"
alt="AWS Fargate Flow"
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;h3 id="alternatives">Alternatives&lt;/h3>
&lt;ul>
&lt;li>Google Kubernetes Engine (GKE)&lt;/li>
&lt;li>Red Hat OpenShift Container Platform&lt;/li>
&lt;li>Azure Kubernetes Service (AKS)&lt;/li>
&lt;li>Rancher&lt;/li>
&lt;li>Azure Container Instances&lt;/li>
&lt;li>Cloud Foundry&lt;/li>
&lt;li>Oracle Cloud Infrastructure Container Engine for Kubernetes&lt;/li>
&lt;/ul>
&lt;h2 id="price">Price&lt;/h2>
&lt;p>&lt;a href="https://aws.amazon.com/fargate/pricing/">Current price&lt;/a>&lt;/p>
&lt;h2 id="use-cases">Use Cases&lt;/h2>
&lt;ul>
&lt;li>Web apps, APIs, and microservices&lt;/li>
&lt;li>Run and scale container workloads&lt;/li>
&lt;li>Support AI and ML training applications&lt;/li>
&lt;/ul>
&lt;p>Type: Containers&lt;/p>
&lt;p>Same type services: Elastic Container Service (ECS), Elastic Container Registry (ECR), Elastic Kubernetes Service (EKS), Fargate&lt;/p>
&lt;h2 id="questions">Questions&lt;/h2>
&lt;h3 id="q1">Q1&lt;/h3>
&lt;p>&lt;strong>How AWS Fargate different from AWS ECS?&lt;/strong>&lt;/p>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;p>In AWS ECS, you manage the infrastructure - you need to provision and configure the EC2 instances.
While in AWS Fargate, you don&amp;rsquo;t provision or manage the infrastructure, you simply focus on launching Docker containers. You can think of it as the serverless version of AWS ECS.&lt;/p>
&lt;/div>
&lt;/details></description></item><item><title>Elastic Kubernetes Service</title><link>https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/eks/</link><pubDate>Thu, 22 Sep 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/eks/</guid><description>&lt;h2 id="about">About&lt;/h2>
&lt;p>Kubernetes (K8) Docker Container/Cluster management&lt;/p>
&lt;p>Run highly secure, reliable, and scalable containers&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://aws.amazon.com/eks/">Documentation&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.aws.amazon.com/eks/?id=docs_gateway">User Guide&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>&lt;p class="md__image">
&lt;img
src="https://d1.awsstatic.com/product-page-diagram_Amazon-EKS%402x.ddc48a43756bff3baead68406d3cac88b4151a7e.ddc48a43756bff3baead68406d3cac88b4151a7e.png"
id="zoom-default"
alt="Elastic Kubernetes Service Flow"
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;p>&lt;p class="md__image">
&lt;img
src="https://d1.awsstatic.com/v3-product-page-diagram_Amazon-EKS-Anywhere%402x.42ea1da6460bdee2acd657e920d1e329d2821d7a.png"
id="zoom-default"
alt="Elastic Kubernetes Service Flow"
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;h3 id="alternatives">Alternatives&lt;/h3>
&lt;ul>
&lt;li>Red Hat OpenShift Container Platform&lt;/li>
&lt;li>Azure Kubernetes Service (AKS)&lt;/li>
&lt;li>Rancher&lt;/li>
&lt;li>Google Kubernetes Engine (GKE)&lt;/li>
&lt;li>Oracle Cloud Infrastructure Container Engine for Kubernetes&lt;/li>
&lt;li>Mirantis Kubernetes Engine (formerly Docker Enterprise)&lt;/li>
&lt;li>Kubernetes&lt;/li>
&lt;li>Cloud Foundry&lt;/li>
&lt;/ul>
&lt;h2 id="price">Price&lt;/h2>
&lt;p>&lt;a href="https://aws.amazon.com/eks/pricing/">Current price&lt;/a>&lt;/p>
&lt;h2 id="use-cases">Use Cases&lt;/h2>
&lt;ul>
&lt;li>Build and run web applications&lt;/li>
&lt;li>Deploy across hybrid environments&lt;/li>
&lt;li>Model machine learning (ML) workflows&lt;/li>
&lt;/ul>
&lt;h3 id="ecs-vs-eks">ECS vs EKS&lt;/h3>
&lt;p>Amazon provides the Elastic Container Service for Kubernetes (Amazon EKS) which can be used to deploy, manage, and scale containerized applications using Kubernetes on AWS.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Amazon ECS&lt;/th>
&lt;th>Amazon EKS&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Managed, highly available, highly scalable container platform&lt;/td>
&lt;td>Managed, highly available, highly scalable container platform&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS-specific platform that supports Docker Containers&lt;/td>
&lt;td>Compatible with upstream Kubernetes so it’s easy to lift and shift from other Kubernetes deployments&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Considered simpler and easier to use&lt;/td>
&lt;td>Considered more feature-rich and complex with a steep learning curve&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Leverages AWS services like Route 53, ALB, and CloudWatch&lt;/td>
&lt;td>A hosted Kubernetes platform that handles many things internally&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>“Tasks” are instances of containers that are run on underlying compute but more of less isolated&lt;/td>
&lt;td>“Pods” are containers collocated with one another and can have shared access to each other&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Limited extensibility&lt;/td>
&lt;td>Extensible via a wide variety of third-party and community add-ons.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="practice">Practice&lt;/h2>
&lt;p>&lt;a href="https://cloudacademy.com/lab/eks-voteapp/">Building a Cloud Native Application&lt;/a>&lt;/p>
&lt;div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
&lt;iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" loading="eager" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/WFyeqieik-U?autoplay=0&amp;amp;controls=1&amp;amp;end=0&amp;amp;loop=0&amp;amp;mute=0&amp;amp;start=0" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" title="YouTube video">&lt;/iframe>
&lt;/div></description></item><item><title>Cognito</title><link>https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/cognito/</link><pubDate>Fri, 23 Sep 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/cognito/</guid><description>&lt;h2 id="about">About&lt;/h2>
&lt;p>Amazon Cognito - Simple and Secure User Sign-Up, Sign-In, and Access Control&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://aws.amazon.com/cognito/">Documentation&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.aws.amazon.com/cognito/?id=docs_gateway">User Guide&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Amazon Cognito lets you add user sign-up, sign-in, and access control to your web and mobile apps quickly and easily. Amazon Cognito scales to millions of users and supports sign-in with social identity providers, such as Apple, Facebook, Google, and Amazon, and enterprise identity providers via SAML 2.0 and OpenID Connect.&lt;/p>
&lt;p>Users can sign in directly with a user name and password, or through a third party such as Facebook, Amazon, or Google.&lt;/p>
&lt;h3 id="alternatives">Alternatives&lt;/h3>
&lt;ul>
&lt;li>Auth0&lt;/li>
&lt;li>Microsoft Azure Active Directory&lt;/li>
&lt;li>OneLogin&lt;/li>
&lt;li>Google Cloud Identity Platform&lt;/li>
&lt;li>IBM Security Verify&lt;/li>
&lt;li>Keycloak&lt;/li>
&lt;/ul>
&lt;h3 id="terminology">Terminology&lt;/h3>
&lt;p>&lt;strong>Credentials&lt;/strong>: The temporary security credentials, which include an access key ID, a secret access key, and a security token.&lt;/p>
&lt;p>&lt;strong>AssumedRoleUser&lt;/strong>: The ARN and the assumed role ID, which are identifiers for the temporary security credentials that you can programatically refer to.&lt;/p>
&lt;h2 id="price">Price&lt;/h2>
&lt;p>Pay only for what you use. First 50,000 (monthly active users (MAUs) - Free.&lt;/p>
&lt;p>&lt;a href="https://aws.amazon.com/cognito/pricing/">Current price&lt;/a>&lt;/p>
&lt;h2 id="use-cases">Use Cases&lt;/h2>
&lt;p>Type: Identity &amp;amp; access management&lt;/p>
&lt;p>Same type services: Identity &amp;amp; Access Management (IAM), Single Sign-On, Cognito, Directory Service, Resource Access Manager, Organisations&lt;/p>
&lt;h3 id="workflow">Workflow&lt;/h3>
&lt;p>The process of authenticating a user with Cognito is as follows:&lt;/p>
&lt;ol>
&lt;li>The user signs in with a Web ID provider (Google, Facebook, Amazon, etc.)&lt;/li>
&lt;li>The Web ID provider returns a JWT token to the user&lt;/li>
&lt;li>The user application makes an STS API call: sts assume-role-with-web-identity&lt;/li>
&lt;li>STS returns an API response with the temporary credentials&lt;/li>
&lt;li>The user application now has AWS access e.g. for S3, DynamoDB, etc.&lt;/li>
&lt;/ol>
&lt;h2 id="practice">Practice&lt;/h2>
&lt;p>&lt;a href="manage-authentication-amazon-cognito">Manage Authentication with Amazon Cognito&lt;/a>&lt;/p>
&lt;h2 id="questions">Questions&lt;/h2>
&lt;h3 id="q1">Q1&lt;/h3>
&lt;p>&lt;strong>You are deploying Multi-Factor Authentication (MFA) on Amazon Cognito. You have set the verification message to be by SMS. However, during testing, you do not receive the MFA SMS on your device.&lt;/strong>&lt;/p>
&lt;p>&lt;strong>What action will best solve this issue?&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>Use AWS Lambda to send the time-based one-time password by SMS&lt;/li>
&lt;li>Increase the complexity of the password&lt;/li>
&lt;li>Create and assign a role with a policy that enables Cognito to send SMS messages to users&lt;/li>
&lt;li>Create and assign a role with a policy that enables Cognito to send Email messages to users&lt;/li>
&lt;/ol>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;p>&lt;a href="https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-settings-mfa.html">https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-settings-mfa.html&lt;/a>&lt;/p>
&lt;p>&lt;mark style="color:white">3&lt;/mark>&lt;/p>
&lt;/div>
&lt;/details>
&lt;h3 id="q2">Q2&lt;/h3>
&lt;p>&lt;strong>A developer is adding sign-up and sign-in functionality to an application. The application is required to make an API call to a custom analytics solution to log user sign-in events&lt;/strong>&lt;/p>
&lt;p>&lt;strong>Which combination of actions should the developer take to satisfy these requirements? (Select TWO.)&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>Use Amazon Cognito to provide the sign-up and sign-in functionality&lt;/li>
&lt;li>Use AWS IAM to provide the sign-up and sign-in functionality&lt;/li>
&lt;li>Configure an &lt;a href="https://aws.amazon.com/config/">AWS Config&lt;/a> rule to make the API call triggered by the post-authentication event&lt;/li>
&lt;li>Invoke an Amazon API Gateway method to make the API call triggered by the post-authentication event&lt;/li>
&lt;li>Execute an AWS Lambda function to make the API call triggered by the post-authentication event&lt;/li>
&lt;/ol>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;p>&lt;a href="../cognito">Amazon Cognito&lt;/a> adds user sign-up, sign-in, and access control to web and mobile applications quickly and easily. Users can also create an &lt;a href="../lambda">AWS Lambda&lt;/a> function to make an API call to a custom analytics solution and then trigger that function with an Amazon Cognito post authentication trigger.&lt;/p>
&lt;p>&lt;mark style="color:white">1, 5&lt;/mark>&lt;/p>
&lt;/div>
&lt;/details></description></item><item><title>Route 53</title><link>https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/route53/</link><pubDate>Fri, 23 Sep 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/route53/</guid><description>&lt;h2 id="about">About&lt;/h2>
&lt;p>Amazon Route 53 is a highly available and scalable Domain Name System (DNS) web service. Route 53 connects user requests to internet applications running on AWS or on-premises.&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://aws.amazon.com/route53/">Documentation&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.aws.amazon.com/route53/?id=docs_gateway">User Guide&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>&lt;p class="md__image">
&lt;img
src="https://d1.awsstatic.com/Route53/product-page-diagram_Amazon-Route-53_HIW%402x.4c2af00405a0825f83fca113352b480b19d9210e.png"
id="zoom-default"
alt=""
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;p>A highly available and scalable Domain Name System (DNS) web service used for domain registration, DNS routing, and health checking.&lt;/p>
&lt;p>Can create and manage your public DNS records.&lt;/p>
&lt;p>&lt;strong>What is the difference between Route 53 and DNS?&lt;/strong>&lt;/p>
&lt;p>Your DNS is the service that translates your domain name into an IP address. AWS Route 53 is a smart DNS system that can dynamically change your origin address based on load, and even perform load balancing before traffic even reaches your servers.&lt;/p>
&lt;h3 id="alternatives">Alternatives&lt;/h3>
&lt;ul>
&lt;li>Cloudflare DNS.&lt;/li>
&lt;li>Google Cloud DNS.&lt;/li>
&lt;li>Azure DNS.&lt;/li>
&lt;li>GoDaddy Premium DNS.&lt;/li>
&lt;li>DNSMadeEasy.&lt;/li>
&lt;li>ClouDNS.&lt;/li>
&lt;li>UltraDNS.&lt;/li>
&lt;li>NS1.&lt;/li>
&lt;/ul>
&lt;h3 id="routing-policies">Routing Policies&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>Simple routing policy – route internet traffic to a single resource that performs a given function for your domain. You can’t create multiple records that have the same name and type, but you can specify multiple values in the same record, such as multiple IP addresses.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Failover routing policy – use when you want to configure active-passive failover.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Geolocation routing policy – use when you want to route internet traffic to your resources based on the location of your users.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Geoproximity routing policy – use when you want to route traffic based on the location of your resources and, optionally, shift traffic from resources in one location to resources in another.&lt;/p>
&lt;ul>
&lt;li>You can also optionally choose to route more traffic or less to a given resource by specifying a value, known as a bias. A bias expands or shrinks the size of the geographic region from which traffic is routed to a resource.&lt;/li>
&lt;li>The effect of changing the bias for your resources depends on a number of factors, including the following:&lt;/li>
&lt;li>The number of resources that you have.&lt;/li>
&lt;li>How close the resources are to one another.
&lt;ul>
&lt;li>The number of users that you have near the border area between geographic regions.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Latency routing policy – use when you have resources in multiple locations and you want to route traffic to the resource that provides the best latency.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>IP-based routing policy – use when you want to route traffic based on your users’ locations, and know where the IP address or traffic is coming from.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Multivalue answer routing policy – use when you want Route 53 to respond to DNS queries with up to eight healthy records selected at random.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Weighted routing policy – use to route traffic to multiple resources in proportions that you specify.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>When you register a domain or transfer domain registration to Route 53, it configures the domain to renew automatically. The automatic renewal period is typically one year, although the registries for some top-level domains (TLDs) have longer renewal periods.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>When you register a domain with Route 53, it creates a hosted zone that has the same name as the domain, assigns four name servers to the hosted zone, and updates the domain to use those name servers.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="digest">Digest&lt;/h2>
&lt;ul>
&lt;li>Route 53 is AWS DNS service&lt;/li>
&lt;li>Map domain names to EC2 instances, Load Balancers and 53 buckets&lt;/li>
&lt;li>Routing Policies
&lt;ul>
&lt;li>Simple - Traffic routed to a single resource&lt;/li>
&lt;li>Weighted - Traffic routed to a resource = weight assigned to the resource/sum of all the weights&lt;/li>
&lt;li>Latency - serves requests from the AWS region with low latency&lt;/li>
&lt;li>Geographical - routes the traffic based on the location of the request origin&lt;/li>
&lt;li>Failover - routes traffic to primary when primary healthy; secondary when primary is unhealthy&lt;/li>
&lt;li>Multivalue Answer - routs randomly to multiple healthy resources&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>VPC - private network on AWS platform
&lt;ul>
&lt;li>Subnet, NAT Instance, NAT Gatewav, Internet Gatewav, NACLs, Route Table&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>VPC Wizard
&lt;ul>
&lt;li>Single public subnet&lt;/li>
&lt;li>Public and Private subnet (NAT)&lt;/li>
&lt;li>Public and private subnet and AWS managed VPN access&lt;/li>
&lt;li>Private subnet only and AWS managed VPN access&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>VPC Peering - helps transfer of data&lt;/li>
&lt;li>VPC Flow logs - helps capture information about incoming/outgoing traffic&lt;/li>
&lt;li>Direct Connect - dedicated connection from on premises network to VPC&lt;/li>
&lt;/ul>
&lt;h2 id="price">Price&lt;/h2>
&lt;p>Pay only for what you use.&lt;/p>
&lt;p>&lt;a href="https://aws.amazon.com/route53/pricing/">Current price&lt;/a>&lt;/p>
&lt;h2 id="use-cases">Use Cases&lt;/h2>
&lt;ul>
&lt;li>Domain Registration / transfer&lt;/li>
&lt;li>Manage network traffic globally&lt;/li>
&lt;li>Set up private DNS&lt;/li>
&lt;/ul></description></item><item><title>EventBridge</title><link>https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/eventbridge/</link><pubDate>Sun, 25 Sep 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/eventbridge/</guid><description>&lt;h2 id="about">About&lt;/h2>
&lt;p>EventB­ridge is a serverless event bus that makes it easy to connect applic­ations together using data from apps, integrated SaaS apps, &amp;amp; AWS services.&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://aws.amazon.com/eventbridge/">Documentation&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.aws.amazon.com/eventbridge/?id=docs_gateway">User Guide&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>&lt;p class="md__image">
&lt;img
src="https://d1.awsstatic.com/product-marketing/Product-Page-Diagram_Amazon-EventBridge%402x.90618a37067770ba7994eb9c4eac38f4a5fecc7c.png"
id="zoom-default"
alt="Amazon EventBridge Flow"
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;p>EventB­ridge is a low-cost alternative to building a new backend infrastructure for every new app. With Serverless EventB­ridge, you can connect your existing apps with a few lines of code. You don’t have to build a new backend for every new app you want to connect to.&lt;/p>
&lt;p>You can use existing infrastructure as a provider of event data, and connect your apps using Serverless EventB­ridge.&lt;/p>
&lt;h3 id="alternatives">Alternatives&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="https://learn.microsoft.com/en-us/azure/service-bus-messaging/service-bus-messaging-overview">Azure Service Bus&lt;/a>&lt;/li>
&lt;li>TIBCO Cloud Integration (including BusinessWorks and Scribe)&lt;/li>
&lt;li>IBM App Connect&lt;/li>
&lt;li>&lt;a href="https://cloud.google.com/pubsub">Google Cloud Pub/Sub&lt;/a>&lt;/li>
&lt;li>Apache Camel&lt;/li>
&lt;li>Peregrine Connect&lt;/li>
&lt;li>Software AG webMethods&lt;/li>
&lt;li>&lt;a href="https://www.ibm.com/cloud/cloud-pak-for-integration">IBM Cloud Pak for Integration&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="price">Price&lt;/h2>
&lt;p>&lt;a href="https://aws.amazon.com/ru/eventbridge/pricing/">Current price&lt;/a>&lt;/p>
&lt;h2 id="use-cases">Use Cases&lt;/h2>
&lt;p>Type: Applic­ation integr­ation&lt;/p>
&lt;p>Same type services: &lt;a href="../sns">SNS&lt;/a>, &lt;a href="../sqs">SQS&lt;/a>, &lt;a href="https://aws.amazon.com/appsync/">AppSync&lt;/a>, EventBridge&lt;/p>
&lt;ul>
&lt;li>Re-architect for speed&lt;/li>
&lt;li>Extend functionality via SaaS integrations&lt;/li>
&lt;li>Monitoring and Auditing&lt;/li>
&lt;li>Customize SaaS with AI/ML&lt;/li>
&lt;/ul>
&lt;h3 id="eventbridge-vs-amazon-sns">EventBridge vs Amazon SNS&lt;/h3>
&lt;p>In comparison with Amazon SNS, EventBridge:&lt;/p>
&lt;ul>
&lt;li>Integrates with more AWS services than SNS&lt;/li>
&lt;li>Supports registering message schemas&lt;/li>
&lt;li>Has sophisticated third-party integrations available&lt;/li>
&lt;li>Supports transforming event messages before sending them&lt;/li>
&lt;/ul>
&lt;p>You should choose to use Amazon EventBridge over Amazon SNS when the system you are building is expected to:&lt;/p>
&lt;ul>
&lt;li>Support significant asynchronous functionality&lt;/li>
&lt;li>Grow significantly in terms of both usage and complexity&lt;/li>
&lt;li>Have changing requirements over time&lt;/li>
&lt;li>Have components built by different teams that interact&lt;/li>
&lt;li>Need support for disparate event sources and targets&lt;/li>
&lt;/ul>
&lt;h3 id="amazon-eventbridge-vs-cloudwatch-events">Amazon EventBridge vs CloudWatch Events&lt;/h3>
&lt;ul>
&lt;li>Amazon EventBridge &lt;strong>extends&lt;/strong> &lt;a href="../cloudwatch">CloudWatch Events&lt;/a> - Build event-driven architectures&lt;/li>
&lt;li>Original goal with CloudWatch Events was to help with monitoring usecases specific to AWS services.
&lt;ul>
&lt;li>React to events from Your Applications, AWS services and Partner Services
&lt;ul>
&lt;li>Example: EC2 status change, change in your application or SaaS partner application&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Event Targets can be a Lambda function, an SNS Topic, an SQS queues etc&lt;/li>
&lt;li>Rules map events to targets (Make sure that IAM Roles have permissions)&lt;/li>
&lt;li>Event buses receive the events:
&lt;ul>
&lt;li>Default event bus (for AWS services)&lt;/li>
&lt;li>Custom event bus (custom applications)&lt;/li>
&lt;li>Partner event bus (partner applications)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Over time, Amazon EventBridge will replace Amazon CloudWatch Events&lt;/li>
&lt;/ul>
&lt;h2 id="practice">Practice&lt;/h2>
&lt;div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
&lt;iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" loading="eager" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/OvpYjr00Bfs?autoplay=0&amp;amp;controls=1&amp;amp;end=0&amp;amp;loop=0&amp;amp;mute=0&amp;amp;start=0" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" title="YouTube video">&lt;/iframe>
&lt;/div>
&lt;p>&lt;a href="processing-file-uploads-asyncronously-with-amazon-eventbridge">Processing File Uploads Asynchronously with Amazon EventBridge&lt;/a>&lt;/p>
&lt;h2 id="questions">Questions&lt;/h2>
&lt;h3 id="q1">Q1&lt;/h3>
&lt;p>&lt;strong>A food delivery company is building a feature that requests reviews from customers after their orders are delivered. The solution should be a short-running process that can message customers simultaneously at various contact points including email, text, and mobile push notifications.&lt;/strong>&lt;/p>
&lt;p>&lt;strong>Which approach best meets these requirements?&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>Use EventBridge with &lt;a href="../kinesis">Kinesis Data Streams&lt;/a> to send messages.&lt;/li>
&lt;li>Use a &lt;a href="../step-functions">Step Function&lt;/a> to send SQS messages.&lt;/li>
&lt;li>Use a &lt;a href="../lambda">Lambda&lt;/a> function to send SNS messages.&lt;/li>
&lt;li>Use &lt;a href="https://aws.amazon.com/batch/">AWS Batch&lt;/a> and &lt;a href="../sns">SNS&lt;/a> to send messages.&lt;/li>
&lt;/ol>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;p>&lt;a href="https://docs.aws.amazon.com/sns/latest/dg/welcome.html">https://docs.aws.amazon.com/sns/latest/dg/welcome.html&lt;/a>&lt;/p>
&lt;p>&lt;mark style="color:white">3&lt;/mark>&lt;/p>
&lt;/div>
&lt;/details></description></item><item><title>Step Functions</title><link>https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/step-functions/</link><pubDate>Tue, 27 Sep 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/step-functions/</guid><description>&lt;h2 id="about">About&lt;/h2>
&lt;p>AWS Step Functions is a low-code, visual workflow service that developers use to build distributed applications, automate IT and business processes, and build data and machine learning pipelines using AWS services.&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://aws.amazon.com/step-functions/">Documentation&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.aws.amazon.com/step-functions/?id=docs_gateway">User Guide&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>&lt;p class="md__image">
&lt;img
src="https://d1.awsstatic.com/Step%20Functions%20Workflow%20Studio%20USI%20Mock.e04623598b8abf438fc8c9f6576384b6eaf09dd4.png"
id="zoom-default"
alt="Step Functions Flow"
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;p>Step Functions is a serverless function orches­trator that makes it easy to sequence Lambda functions &amp;amp; multiple AWS services into busine­ss-­cri­tical applic­ations.&lt;/p>
&lt;p>&lt;p class="md__image">
&lt;img
src="https://d2yymmf9l33ie1.cloudfront.net/how-it-works-fcfa8f363d8404db21af77604ac8d07102bb3ac9.gif"
id="zoom-default"
alt="Step Functions Flow"
loading="lazy"
/>
&lt;/p>
&lt;/p>
&lt;h3 id="alternatives">Alternatives&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="../lambda">AWS lambda&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://airflow.apache.org/">Airflow&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://cloud.google.com/workflows">Google Cloud Workflows&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://powerautomate.microsoft.com/en-us/blog/welcome-to-microsoft-flow/">Microsoft Flow&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="price">Price&lt;/h2>
&lt;p>Pay only for what you use&lt;/p>
&lt;p>&lt;a href="https://aws.amazon.com/ru/step-functions/pricing/">Current price&lt;/a>&lt;/p>
&lt;p>Free Tier: 4,000 state transitions per month&lt;/p>
&lt;h2 id="use-cases">Use Cases&lt;/h2>
&lt;p>Step Functions is an easy-to-use function orchestra that makes it possible to string Lambda functions and multiple AWS services into business-critical applications.&lt;/p>
&lt;p>Step Functions manages the operations and underlying infrastructure for you to ensure your application is available at any scale.&lt;/p>
&lt;p>With Step Functions, you are able to easily coordinate complex processes composed of different tasks.&lt;/p>
&lt;p>Without using this service you have to coordinate each Lambda Function yourself and manage every kind of error in all steps of this complex process.&lt;/p>
&lt;p>AWS Step Functions is a useful service for breaking down complex processes into smaller and easier tasks&lt;/p>
&lt;ul>
&lt;li>Automate Extract, Transform, and Load (ETL) process&lt;/li>
&lt;li>Orchestrate microservices&lt;/li>
&lt;li>Workflow configuration&lt;/li>
&lt;li>AWS service integrations&lt;/li>
&lt;li>Component reuse&lt;/li>
&lt;li>Built-in error handling&lt;/li>
&lt;/ul>
&lt;p>Type: Orches­tration, Workflows&lt;/p>
&lt;p>Step Function &lt;strong>Standard Workflows&lt;/strong> are optimized for long-running processes.&lt;/p>
&lt;p>&lt;strong>Express Workflows&lt;/strong> are better for event-driven workloads.&lt;/p>
&lt;h2 id="practice">Practice&lt;/h2>
&lt;p>&lt;a href="introduction-aws-step-functions">Introduction to AWS Step Functions&lt;/a>&lt;/p>
&lt;h2 id="questions">Questions&lt;/h2>
&lt;h3 id="q1">Q1&lt;/h3>
&lt;p>&lt;strong>A developer is adding a feedback form to a website. Upon user submission, the form should create a discount code, email the user the code and display a message on the website that tells the user to check their email. The developer wants to use separate Lambda functions to manage these processes and use a Step Function to orchestrate the interactions with minimal custom scripting.&lt;/strong>&lt;/p>
&lt;p>&lt;strong>Which of the following Step Function workflows can be used to meet requirements?&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>Asynchronous Express Workflow&lt;/li>
&lt;li>Standard Workflow&lt;/li>
&lt;li>Synchronous Express Workflow&lt;/li>
&lt;li>Standard Express Workflow&lt;/li>
&lt;/ol>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;p>&lt;a href="https://aws.amazon.com/blogs/compute/new-synchronous-express-workflows-for-aws-step-functions/">https://aws.amazon.com/blogs/compute/new-synchronous-express-workflows-for-aws-step-functions/&lt;/a>&lt;/p>
&lt;p>&lt;mark style="color:white">3&lt;/mark>&lt;/p>
&lt;/div>
&lt;/details></description></item><item><title>Questions</title><link>https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/questions/</link><pubDate>Thu, 08 Sep 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/aws-certified-developer-associate/questions/</guid><description>&lt;p>On this page you can find 50 random questions.&lt;/p>
&lt;p>To get prepared for exam you can use &lt;a href="https://www.cloud-exam-prepare.com">cloud-exam-prepare.com&lt;/a>&lt;/p>
&lt;h2 id="q1---q10">Q1 - Q10&lt;/h2>
&lt;h3 id="q1">Q1&lt;/h3>
&lt;p>&lt;strong>You are developing an API in Amazon API Gateway that several mobile applications will use to interface with a back end service in AWS being written by another developer. You can use a(n)____ integration for your API methods to develop and test your client applications before the other developer has completed work on the back end.&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>HTTP proxy&lt;/li>
&lt;li>mock&lt;/li>
&lt;li>AWS service proxy&lt;/li>
&lt;li>Lambda function&lt;/li>
&lt;/ol>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;p>&lt;a href="http://docs.aws.amazon.com/apigateway/latest/developerguide/how-to-method-settings-console.html">http://docs.aws.amazon.com/apigateway/latest/developerguide/how-to-method-settings-console.html&lt;/a>&lt;/p>
&lt;p>Amazon API Gateway supports mock integrations for API methods.&lt;/p>
&lt;p>&lt;mark style="color:white">2&lt;/mark>&lt;/p>
&lt;/div>
&lt;/details>
&lt;h3 id="q2">Q2&lt;/h3>
&lt;p>&lt;strong>You are creating multiple resources using multiple CloudFormation templates. One of the resources (Resource B) needs the ARN value of another resource (resource A) before it is created.&lt;/strong>&lt;/p>
&lt;p>&lt;strong>What steps can you take in this situation? (Choose 2 answers)&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>Use a template to first create Resource A with the ARN as an output value.&lt;/li>
&lt;li>Use a template to create Resource B and reference the ARN of Resource A using Fn::GetAtt.&lt;/li>
&lt;li>Hard code the ARN value output from creating Resource A into the second template.&lt;/li>
&lt;li>Just create Resource B.&lt;/li>
&lt;/ol>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;p>&lt;a href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-getatt.html">http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-getatt.html&lt;/a>&lt;/p>
&lt;p>&lt;mark style="color:white">2&lt;/mark>&lt;/p>
&lt;/div>
&lt;/details>
&lt;h3 id="q3">Q3&lt;/h3>
&lt;p>&lt;strong>A company with global users is using a content delivery network service to ensure low latency for all customers. The company has several applications that require similar cache behavior.&lt;/strong>&lt;/p>
&lt;p>&lt;strong>Which API command can a developer use to ensure cache storage consistency with minimal duplication?&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>CreateReusableDelegationSet with Route 53&lt;/li>
&lt;li>CreateStackSet with CloudFormation&lt;/li>
&lt;li>CreateGlobalReplicationGroup with ElastiCache&lt;/li>
&lt;li>CreateCachePolicy with CloudFront&lt;/li>
&lt;/ol>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;p>&lt;a href="https://docs.aws.amazon.com/cloudfront/latest/APIReference/API_CreateCachePolicy.html">https://docs.aws.amazon.com/cloudfront/latest/APIReference/API_CreateCachePolicy.html&lt;/a>&lt;/p>
&lt;p>&lt;mark style="color:white">4&lt;/mark>&lt;/p>
&lt;/div>
&lt;/details>
&lt;h3 id="q4">Q4&lt;/h3>
&lt;p>&lt;strong>You are creating a few test functions to demonstrate the ease of developing serverless applications. You want to use the command line to deploy &lt;a href="../lambda">AWS Lambda&lt;/a> functions, an Amazon API Gateway, and &lt;a href="../dynamodb">Amazon DynamoDB&lt;/a> tables.&lt;/strong>&lt;/p>
&lt;p>&lt;strong>What is the easiest way to develop these simple applications?&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>Install AWS SAM CLI and run “sam init [options]” with the templates’ data.&lt;/li>
&lt;li>Use AWS step function visual workflow and insert your templates in the states&lt;/li>
&lt;li>Save your template in the Serverless Application Repository and use AWS SAM&lt;/li>
&lt;/ol>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;p>AWS SAM - AWS Serverless Application Model&lt;/p>
&lt;p>&lt;a href="https://aws.amazon.com/serverless/sam/">https://aws.amazon.com/serverless/sam/&lt;/a>&lt;/p>
&lt;p>&lt;mark style="color:white">1&lt;/mark>&lt;/p>
&lt;/div>
&lt;/details>
&lt;h3 id="q5">Q5&lt;/h3>
&lt;p>&lt;strong>What will happen if you delete an unused custom deployment configuration in AWS CodeDeploy?&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>You will no longer be able to associate the deleted deployment configuration with new deployments and new deployment groups.&lt;/li>
&lt;li>Nothing will happen, as the custom deployment configuration was unused.&lt;/li>
&lt;li>All deployment groups associated with the custom deployment configuration will also be deleted.&lt;/li>
&lt;li>All deployments associated with the custom deployment configuration will be terminated.&lt;/li>
&lt;/ol>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;p>&lt;a href="https://docs.aws.amazon.com/codedeploy/latest/userguide/deployment-configurations-delete.html">https://docs.aws.amazon.com/codedeploy/latest/userguide/deployment-configurations-delete.html&lt;/a>&lt;/p>
&lt;p>Can delete only if unused.&lt;/p>
&lt;p>&lt;mark style="color:white">1&lt;/mark>&lt;/p>
&lt;/div>
&lt;/details>
&lt;h3 id="q6">Q6&lt;/h3>
&lt;p>&lt;strong>What happens when you delete a deployment group with the AWS CLI in AWS CodeDeploy?&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>All details associated with that deployment group will be moved from AWS CodeDeploy to AWS OpsWorks.&lt;/li>
&lt;li>The instances used in the deployment group will change.&lt;/li>
&lt;li>All details associated with that deployment group will also be deleted from AWS CodeDeploy.&lt;/li>
&lt;li>The instances that were participating in the deployment group will run once again.&lt;/li>
&lt;/ol>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;p>&lt;a href="https://docs.aws.amazon.com/codedeploy/latest/userguide/deployment-groups-delete.html">https://docs.aws.amazon.com/codedeploy/latest/userguide/deployment-groups-delete.html&lt;/a>&lt;/p>
&lt;p>If you delete a deployment group, all details associated with that deployment group will also be deleted from CodeDeploy. The instances used in the deployment group will remain unchanged. This action cannot be undone.&lt;/p>
&lt;p>&lt;mark style="color:white">3&lt;/mark>&lt;/p>
&lt;/div>
&lt;/details>
&lt;h3 id="q7">Q7&lt;/h3>
&lt;p>&lt;strong>You are configuring a Jenkins project that is installed on an Amazon &lt;a href="../ec2">EC2&lt;/a> instance running a Windows operating system. You want this Jenkins project to integrate with AWS CodePipeline.&lt;/strong>&lt;/p>
&lt;p>&lt;strong>Which actions should you take to make this function perform correctly? (2 answers)&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>Restart all Amazon &lt;a href="../ec2">EC2&lt;/a> instances that are running a Windows operating system.&lt;/li>
&lt;li>Provide the IAM user credentials to integrate AWS CodePipeline.&lt;/li>
&lt;li>Fill out the required fields for your proxy host.&lt;/li>
&lt;li>Modify the PATH variable to include the directory where you installed Jenkins on all Amazon &lt;a href="../ec2">EC2&lt;/a> instance that are running a Windows operating system.&lt;/li>
&lt;/ol>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;p>&lt;a href="https://docs.aws.amazon.com/codepipeline/latest/userguide/tutorials-four-stage-pipeline.html">https://docs.aws.amazon.com/codepipeline/latest/userguide/tutorials-four-stage-pipeline.html&lt;/a>&lt;/p>
&lt;p>&lt;mark style="color:white">2, 3&lt;/mark>&lt;/p>
&lt;/div>
&lt;/details>
&lt;h3 id="q8">Q8&lt;/h3>
&lt;p>&lt;strong>You are deploying Multi-Factor Authentication (MFA) on Amazon Cognito. You have set the verification message to be by SMS. However, during testing, you do not receive the MFA SMS on your device.&lt;/strong>&lt;/p>
&lt;p>&lt;strong>What action will best solve this issue?&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>Use &lt;a href="../lambda">AWS Lambda&lt;/a> to send the time-based one-time password by SMS&lt;/li>
&lt;li>Increase the complexity of the password&lt;/li>
&lt;li>Create and assign a role with a policy that enables Cognito to send SMS messages to users&lt;/li>
&lt;li>Create and assign a role with a policy that enables Cognito to send Email messages to users&lt;/li>
&lt;/ol>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;p>&lt;a href="https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-settings-mfa.html">https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-settings-mfa.html&lt;/a>&lt;/p>
&lt;p>&lt;mark style="color:white">3&lt;/mark>&lt;/p>
&lt;/div>
&lt;/details>
&lt;h3 id="q9">Q9&lt;/h3>
&lt;p>&lt;strong>A developer is adding sign-up and sign-in functionality to an application. The application is required to make an API call to a custom analytics solution to log user sign-in events&lt;/strong>&lt;/p>
&lt;p>&lt;strong>Which combination of actions should the developer take to satisfy these requirements? (Select TWO.)&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>Use Amazon Cognito to provide the sign-up and sign-in functionality&lt;/li>
&lt;li>Use AWS IAM to provide the sign-up and sign-in functionality&lt;/li>
&lt;li>Configure an AWS Config rule to make the API call triggered by the post-authentication event&lt;/li>
&lt;li>Invoke an Amazon API Gateway method to make the API call triggered by the post-authentication event&lt;/li>
&lt;li>Execute an &lt;a href="../lambda">AWS Lambda&lt;/a> function to make the API call triggered by the post-authentication event&lt;/li>
&lt;/ol>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;p>Amazon Cognito adds user sign-up, sign-in, and access control to web and mobile applications quickly and easily. Users can also create an &lt;a href="../lambda">AWS Lambda&lt;/a> function to make an API call to a custom analytics solution and then trigger that function with an Amazon Cognito post authentication trigger.&lt;/p>
&lt;p>&lt;mark style="color:white">1, 5&lt;/mark>&lt;/p>
&lt;/div>
&lt;/details>
&lt;h3 id="q10">Q10&lt;/h3>
&lt;p>&lt;strong>A developer is designing a web application that allows the users to post comments and receive in a real-time feedback.&lt;/strong>&lt;/p>
&lt;p>&lt;strong>Which architectures meet these requirements? (Select TWO.)&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>Create an AWS AppSync schema and corresponding APIs. Use an &lt;a href="../dynamodb">Amazon DynamoDB&lt;/a> table as the data store.&lt;/li>
&lt;li>Create a WebSocket API in Amazon API Gateway. Use an &lt;a href="../lambda">AWS Lambda&lt;/a> function as the backend and an &lt;a href="../dynamodb">Amazon DynamoDB&lt;/a> table as the data store&lt;/li>
&lt;li>Create an AWS Elastic Beanstalk application backed by an Amazon RDS database. Configure the application to allow long-lived TCP/IP sockets.&lt;/li>
&lt;li>Create a GraphQL endpoint in Amazon API Gateway. Use an &lt;a href="../dynamodb">Amazon DynamoDB&lt;/a> table as the data store.&lt;/li>
&lt;li>Enable WebSocket on Amazon CloudFront. Use an &lt;a href="../lambda">AWS Lambda&lt;/a> function as the origin and an Amazon Aurora DB cluster as the data store&lt;/li>
&lt;/ol>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;p>&lt;a href="https://aws.amazon.com/appsync/">AWS AppSync&lt;/a> simplifies application development by letting users create a flexible API to securely access, manipulate, and combine data from one or more data sources. AWS AppSync is a managed service that uses GraphQL to make it easy for applications to get the exact data they need.&lt;/p>
&lt;p>AWS AppSync allows users to build scalable applications, including those requiring &lt;a href="https://docs.aws.amazon.com/appsync/latest/devguide/real-time-data.html">real-time updates&lt;/a>, on a range of data sources, including Amazon DynamoDB. In &lt;a href="../api-gateway">Amazon API Gateway&lt;/a>, users can &lt;a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api.html">create a WebSocket API&lt;/a> as a stateful frontend for an AWS service (such as &lt;a href="../lambda">AWS Lambda&lt;/a> or DynamoDB) or for an HTTP endpoint.&lt;/p>
&lt;p>The WebSocket API invokes the backend based on the content of the messages it receives from client applications. Unlike a REST API, which receives and responds to requests, a WebSocket API supports two-way communication between client applications and the backend.&lt;/p>
&lt;p>&lt;mark style="color:white">1, 2&lt;/mark>&lt;/p>
&lt;/div>
&lt;/details>
&lt;h2 id="q11---q20">Q11 - Q20&lt;/h2>
&lt;h3 id="1">1&lt;/h3>
&lt;p>&lt;strong>You are asked to establish a baseline for normal Amazon ECS performance in your environment by measuring performance at various times and under different load conditions. To establish a baseline, Amazon recommends that you should at a minimum monitor the CPU and ____ for your Amazon ECS clusters and the CPU and ____ metrics for your Amazon ECS services.&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>memory reservation and utilization; concurrent connections&lt;/li>
&lt;li>memory utilization; memory reservation and utilization&lt;/li>
&lt;li>concurrent connections; memory reservation and utilization&lt;/li>
&lt;li>memory reservation and utilization; memory utilization&lt;/li>
&lt;/ol>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;p>&lt;mark style="color:white">4&lt;/mark>&lt;/p>
&lt;/div>
&lt;/details>
&lt;h3 id="2">2&lt;/h3>
&lt;p>&lt;strong>What is one reason that AWS does not recommend that you configure your &lt;a href="../elasticache">ElastiCache&lt;/a> so that it can be accessed from outside AWS?&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>The metrics reported by &lt;a href="../cloudwatch">CloudWatch&lt;/a> are more difficult to report.&lt;/li>
&lt;li>Security concerns and network latency over the public internet.&lt;/li>
&lt;li>The &lt;a href="../elasticache">ElastiCache&lt;/a> cluster becomes more prone to failures.&lt;/li>
&lt;li>The performance of the &lt;a href="../elasticache">ElastiCache&lt;/a> cluster is no longer controllable.&lt;/li>
&lt;/ol>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;p>Elasticache is a service designed to be used internally to your VPC. External access is discouraged due to the latency of Internet traffic and security concerns. However, if external access to &lt;a href="../elasticache">ElastiCache&lt;/a> is required for test or development purposes, it can be done through a VPN.&lt;/p>
&lt;p>&lt;mark style="color:white">2&lt;/mark>&lt;/p>
&lt;/div>
&lt;/details>
&lt;h3 id="3">3&lt;/h3>
&lt;p>&lt;strong>You are building a web application that will run in an AWS ElasticBeanstalk environment. You need to add and configure an &lt;a href="../elasticache">Amazon ElastiCache&lt;/a> cluster into the environment immediately after the application is deployed.&lt;/strong>&lt;/p>
&lt;p>&lt;strong>What is the most efficient method to ensure that the cluster is deployed immediately after the EB application is deployed?&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>Use the &lt;a href="https://aws.amazon.com/console/">AWS Management Console&lt;/a> to create and configure the cluster.&lt;/li>
&lt;li>Create a cron job to schedule the cluster deployment using the &lt;strong>&lt;em>aws cloudformation deploy&lt;/em>&lt;/strong> command&lt;/li>
&lt;li>Create a configuration file with the &lt;code>.config&lt;/code> extension and place it into the &lt;code>.ebextensions&lt;/code> folder in the application package.&lt;/li>
&lt;li>Build an &lt;a href="../lambda">AWS Lambda&lt;/a> function that polls to the ElasticBeanstalk environment deployments and create and configure the &lt;a href="../elasticache">Amazon ElastiCache&lt;/a> cluster.&lt;/li>
&lt;/ol>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;p>[&lt;a href="https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/environment-resources.html">AWS Secrets Manager&lt;/a>](&lt;a href="https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/environment-resources.html">https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/environment-resources.html&lt;/a>)&lt;/p>
&lt;p>&lt;mark style="color:white">3&lt;/mark>&lt;/p>
&lt;/div>
&lt;/details>
&lt;h3 id="4">4&lt;/h3>
&lt;p>&lt;strong>Emily is building a web application using AWS ElasticBeanstalk. The application uses static images like icons, buttons and logos. Emily is looking for a way to serve these static images in a performant way that will not disrupt user sessions.&lt;/strong>&lt;/p>
&lt;p>&lt;strong>Which of the following options would meet this requirement?&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>Use an Amazon Elastic File System (EFS) volume to serve the static image files.&lt;/li>
&lt;li>Configure the AWS ElasticBeanstalk proxy server to serve the static image files.&lt;/li>
&lt;li>Use an Amazon S3 bucket to serve the static image files.&lt;/li>
&lt;li>Use an Amazon Elastic Block Store (EBS) volume to serve the static image files.&lt;/li>
&lt;/ol>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;p>&lt;a href="https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/environment-cfg-staticfiles.html">https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/environment-cfg-staticfiles.html&lt;/a>&lt;/p>
&lt;p>An Amazon S3 bucket would work, but the AWS ElasticBeanstalk proxy server would need to route the requests to the static files to a different place anytime they need to be shown.&lt;/p>
&lt;p>&lt;mark style="color:white">2&lt;/mark>&lt;/p>
&lt;/div>
&lt;/details>
&lt;h3 id="5">5&lt;/h3>
&lt;p>&lt;strong>A company is providing services to many downstream consumers. Each consumer may connect to one or more services. This has resulted in complex architecture that is difficult to manage and does not scale well. The company needs a single interface to manage these services to consumers&lt;/strong>&lt;/p>
&lt;p>&lt;strong>Which AWS service should be used to refactor this architecture?&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>&lt;a href="../xray">AWS X-Ray&lt;/a>&lt;/li>
&lt;li>&lt;a href="../sqs">Amazon SQS&lt;/a>&lt;/li>
&lt;li>&lt;a href="../lambda">AWS Lambda&lt;/a>&lt;/li>
&lt;li>&lt;a href="../apigateway">Amazon API Gateway&lt;/a>&lt;/li>
&lt;/ol>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;p>&lt;mark style="color:white">4&lt;/mark>&lt;/p>
&lt;/div>
&lt;/details>
&lt;h3 id="6">6&lt;/h3>
&lt;p>&lt;strong>Which load balancer would you use for services which use HTTP or HTTPS traffic?&lt;/strong>&lt;/p>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
Application Load Balancer (ALB).
&lt;/div>
&lt;/details>
&lt;h3 id="7">7&lt;/h3>
&lt;p>&lt;strong>What are possible target groups for ALB (Application Load Balancer)?&lt;/strong>&lt;/p>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;ul>
&lt;li>&lt;a href="../ec2">EC2&lt;/a> tasks&lt;/li>
&lt;li>ECS instances&lt;/li>
&lt;li>Lambda functions&lt;/li>
&lt;li>Private IP Addresses&lt;/li>
&lt;/ul>
&lt;/div>
&lt;/details>
&lt;h3 id="8">8&lt;/h3>
&lt;p>&lt;strong>Your would like to optimize the performance of their web application by routing inbound traffic to api.mysite.com to Compute Optimized &lt;a href="../ec2">EC2&lt;/a> instances and inbound traffic to mobile.mysite.com to Memory Optimized &lt;a href="../ec2">EC2&lt;/a> instances.&lt;/strong>&lt;/p>
&lt;p>&lt;strong>Which solution below would be best to implement for this?&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>Enable X-Forwarded For on the web servers and use a Classic Load Balancer&lt;/li>
&lt;li>Configure proxy servers to forward the traffic to the correct instances&lt;/li>
&lt;li>Use Classic Load Balancer with path-based routing rules to forward the traffic to the correct instances&lt;/li>
&lt;li>Use Application Load Balancer with host-based routing rules to forward the traffic to the correct instances&lt;/li>
&lt;/ol>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;p>Application Load Balancer with host-based routing rules&lt;/p>
&lt;p>&lt;a href="https://aws.amazon.com/blogs/aws/new-host-based-routing-support-for-aws-application-load-balancers/">https://aws.amazon.com/blogs/aws/new-host-based-routing-support-for-aws-application-load-balancers/&lt;/a>&lt;/p>
&lt;p>&lt;mark style="color:white">4&lt;/mark>&lt;/p>
&lt;/div>
&lt;/details>
&lt;h3 id="9">9&lt;/h3>
&lt;p>&lt;strong>A company uses Amazon &lt;a href="../dynamodb">DynamoDB&lt;/a> for managing and tracking orders. DynamoDB table is partitioned based on the order date. The company receives a huge increase in orders during a sales event, causing DynamoDB writes to throttle, and the consumed throughput is below the provisioned throughput.&lt;/strong>&lt;/p>
&lt;p>&lt;strong>According to AWS best practices, how can this issue be resolved with MINIMAL costs?&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>Create a new Dynamo DB table for every order date&lt;/li>
&lt;li>Add a random number suffix to the partition key values&lt;/li>
&lt;li>Add a global secondary index to the DynamoDB table&lt;/li>
&lt;li>Increase the read and write capacity units of the DynamoDB table&lt;/li>
&lt;/ol>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;p>A randomizing strategy can greatly improve write throughput. But it’s difficult to read a specific item because you don’t know which suffix value was used when writing the item.&lt;/p>
&lt;p>&lt;a href="https://aws.amazon.com/blogs/database/choosing-the-right-dynamodb-partition-key/">Choosing the Right DynamoDB Partition Key&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/bp-partition-key-sharding.html">Using write sharding to distribute workloads evenly&lt;/a>&lt;/p>
&lt;p>&lt;mark style="color:white">2&lt;/mark>&lt;/p>
&lt;/div>
&lt;/details>
&lt;h3 id="10">10&lt;/h3>
&lt;p>&lt;strong>A food delivery company is building a feature that requests reviews from customers after their orders are delivered. The solution should be a short-running process that can message customers simultaneously at various contact points including email, text, and mobile push notifications.&lt;/strong>&lt;/p>
&lt;p>&lt;strong>Which approach best meets these requirements?&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>Use EventBridge with Kinesis Data Streams to send messages.&lt;/li>
&lt;li>Use a Step Function to send &lt;a href="../sqs">SQS&lt;/a> messages.&lt;/li>
&lt;li>Use &lt;a href="../lambda">Lambda function&lt;/a> to send &lt;a href="../sns">SNS&lt;/a> messages.&lt;/li>
&lt;li>Use AWS Batch and &lt;a href="../sns">SNS&lt;/a> to send messages.&lt;/li>
&lt;/ol>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;p>&lt;a href="https://docs.aws.amazon.com/sns/latest/dg/welcome.html">https://docs.aws.amazon.com/sns/latest/dg/welcome.html&lt;/a>&lt;/p>
&lt;p>&lt;mark style="color:white">3&lt;/mark>&lt;/p>
&lt;/div>
&lt;/details>
&lt;h2 id="q21---q30">Q21 - Q30&lt;/h2>
&lt;h3 id="1-1">1&lt;/h3>
&lt;p>&lt;strong>How &lt;a href="../fargate">AWS Fargate&lt;/a> different from &lt;a href="../ecs">AWS ECS&lt;/a>?&lt;/strong>&lt;/p>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;p>In &lt;a href="../ecs">AWS ECS&lt;/a>, you manage the infrastructure - you need to provision and configure the &lt;a href="../ec2">EC2&lt;/a> instances.
While in &lt;a href="../fargate">AWS Fargate&lt;/a>, you don&amp;rsquo;t provision or manage the infrastructure, you simply focus on launching Docker containers. You can think of it as the serverless version of &lt;a href="../ecs">AWS ECS&lt;/a>.&lt;/p>
&lt;/div>
&lt;/details>
&lt;h3 id="2-1">2&lt;/h3>
&lt;p>&lt;strong>What is Chaos Engineering?&lt;/strong>&lt;/p>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;p>Chaos engineering is the process of stressing an application in testing or production environments by creating disruptive events, such as server outages or API throttling, observing how the system responds, and implementing improvements.&lt;/p>
&lt;p>Chaos engineering helps teams create the real-world conditions needed to uncover the hidden issues, monitoring blind spots, and performance bottlenecks that are difficult to find in distributed systems.&lt;/p>
&lt;p>It starts with analyzing the steady-state behavior, building an experiment hypothesis (e.g., terminating x number of instances will lead to x% more retries), executing the experiment by injecting fault actions, monitoring roll back conditions, and addressing the weaknesses.&lt;/p>
&lt;/div>
&lt;/details>
&lt;h3 id="3-1">3&lt;/h3>
&lt;p>&lt;strong>A client has contracted you to review their existing AWS environment and recommend and implement best practice changes. You begin by reviewing existing users and Identity Access Management. You found out improvements that can be made with the use of the root account and Identity Access Management.&lt;/strong>&lt;/p>
&lt;p>&lt;strong>What are the best practice guidelines for use of the root account?&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>Never use the root account.&lt;/li>
&lt;li>Use the root account only to create administrator accounts.&lt;/li>
&lt;li>Use the root account to create your first IAM user and then lock away the root account.&lt;/li>
&lt;li>Use the root account to create all other accounts, and share the root account with one backup administrator.&lt;/li>
&lt;/ol>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/best-practices.html#lock-away-credentials" target="_blank">lock-away-credentials&lt;/a>
&lt;p>&lt;mark style="color:white">1&lt;/mark>&lt;/p>
&lt;/div>
&lt;/details>
&lt;h3 id="4-1">4&lt;/h3>
&lt;p>&lt;strong>Veronika is writing a REST service that will add items to a shopping list. The service is built on Amazon API Gateway with &lt;a href="../lambda">AWS Lambda&lt;/a> integrations. The shopping list stems are sent as query string parameters in the method request.&lt;/strong>&lt;/p>
&lt;p>&lt;strong>How should Veronika convert the query string parameters to arguments for the Lambda function?&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>Enable request validation&lt;/li>
&lt;li>Include the Amazon Resource Name (ARN) of the Lambda function&lt;/li>
&lt;li>Change the integration type&lt;/li>
&lt;li>Create a mapping template&lt;/li>
&lt;/ol>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;p>&lt;a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-mapping-template-reference.html">API Gateway mapping template&lt;/a>&lt;/p>
&lt;p>&lt;mark style="color:white">4&lt;/mark>&lt;/p>
&lt;/div>
&lt;/details>
&lt;h3 id="5-1">5&lt;/h3>
&lt;p>&lt;strong>Your organization has an AWS setup and planning to build Single Sign-On for users to authenticate with on-premise Microsoft Active Directory Federation Services (ADFS) and let users log in to the AWS console using AWS STS Enterprise Identity Federation.&lt;/strong>&lt;/p>
&lt;p>&lt;strong>Which of the following services do you need to call from AWS STS service after you authenticate with your on-premise?&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>AssumeRoleWithSAML&lt;/li>
&lt;li>GetFederationToken&lt;/li>
&lt;li>AssumeRoleWithWebIdentity&lt;/li>
&lt;li>GetCallerIdentity&lt;/li>
&lt;/ol>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;a href="https://docs.aws.amazon.com/STS/latest/APIReference/API_AssumeRoleWithSAML.html" target="_blank">https://docs.aws.amazon.com/STS/latest/APIReference/API_AssumeRoleWithSAML.html&lt;/a>
&lt;a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers_saml.html" target="_blank">https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers_saml.html&lt;/a>
&lt;p>&lt;mark style="color:white">1&lt;/mark>&lt;/p>
&lt;/div>
&lt;/details>
&lt;h3 id="6-1">6&lt;/h3>
&lt;p>&lt;strong>Alice is building a mobile application. She planned to use Multi-Factor Authentication (MFA) when accessing some AWS resources.&lt;/strong>&lt;/p>
&lt;p>&lt;strong>Which of the following APIs will be leveraged to provide temporary security credentials?&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>AssumeRoleWithSAML&lt;/li>
&lt;li>GetFederationToken&lt;/li>
&lt;li>GetSessionToken&lt;/li>
&lt;li>AssumeRoleWithWebIdentity&lt;/li>
&lt;/ol>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;p>&lt;a href="https://docs.aws.amazon.com/STS/latest/APIReference/API_GetSessionToken.html">https://docs.aws.amazon.com/STS/latest/APIReference/API_GetSessionToken.html&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://docs.aws.amazon.com/STS/latest/APIReference/API_AssumeRoleWithWebIdentity.html">AssumeRoleWithWebIdentity&lt;/a> - does not support MFA&lt;/p>
&lt;p>&lt;mark style="color:white">3&lt;/mark>&lt;/p>
&lt;/div>
&lt;/details>
&lt;h3 id="7-1">7&lt;/h3>
&lt;p>&lt;strong>You built a data analysis application to collect and process real-time data from smart meters. Amazon Kinesis Data Streams is the backbone of your design. You received an alert that a few shards are hot.&lt;/strong>&lt;/p>
&lt;p>&lt;strong>What steps will you take to keep a strong performance?&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>Remove the hot shards&lt;/li>
&lt;li>Merge the hot shards&lt;/li>
&lt;li>Split the hot shards&lt;/li>
&lt;li>Increase the shard capacity&lt;/li>
&lt;/ol>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;p>&lt;a href="https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-resharding-strategies.html">https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-resharding-strategies.html&lt;/a>&lt;/p>
&lt;p>Split the hot shards&lt;/p>
&lt;p>&lt;mark style="color:white">3&lt;/mark>&lt;/p>
&lt;/div>
&lt;/details>
&lt;h3 id="8-1">8&lt;/h3>
&lt;p>&lt;strong>Jasmin needs to perform ad-hoc business analytics queries on well-structured dat1. Data comes in constantly at a high velocity. Jasmin&amp;rsquo;s team can understand SQL.&lt;/strong>&lt;/p>
&lt;p>&lt;strong>What AWS service(s) should Jasmin look to first?&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>&lt;a href="https://aws.amazon.com/emr/">EMR&lt;/a> using &lt;a href="https://aws.amazon.com/emr/features/hive/">Hive&lt;/a>&lt;/li>
&lt;li>EMR running &lt;a href="https://aws.amazon.com/emr/features/spark/">Apache Spark&lt;/a>&lt;/li>
&lt;li>Kinesis Firehose + &lt;a href="https://aws.amazon.com/rds/">RDS&lt;/a>&lt;/li>
&lt;li>Kinesis Firehose + &lt;a href="https://aws.amazon.com/redshift/">RedShift&lt;/a>&lt;/li>
&lt;/ol>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;p>RedShift supports ad-hoc queries over well-structured data using a SQL-compliant wire protocol&lt;/p>
&lt;p>&lt;a href="https://aws.amazon.com/kinesis/data-firehose/features/">https://aws.amazon.com/kinesis/data-firehose/features/&lt;/a>&lt;/p>
&lt;p>&lt;mark style="color:white">4&lt;/mark>&lt;/p>
&lt;/div>
&lt;/details>
&lt;h3 id="9-1">9&lt;/h3>
&lt;p>&lt;strong>Key rotation is an important concept of key management. How does Key Management Service (KMS) implement key rotation?&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>KMS supports manual Key Rotation only; you can create new keys any time you want and all data will be re-encrypted with the new key.&lt;/li>
&lt;li>KMS creates new cryptographic material for your KMS keys every rotation period, and uses the new keys for any upcoming encryption; it also maintains old keys to be able to decrypt data encrypted with those keys.&lt;/li>
&lt;li>Key rotation is the process of synchronizing keys between configured regions; KMS will synchronize key changes in near-real time once keys are changed.&lt;/li>
&lt;li>Key rotation is supported through the re-importing of new KMS keys; once you import a new key all data keys will be re-encrypted with the new KMS key.&lt;/li>
&lt;/ol>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;p>When you enable &lt;em>automatic key rotation&lt;/em> for a customer-managed KMS key, AWS KMS generates new cryptographic material for the KMS key every year. AWS KMS also saves the KMS key&amp;rsquo;s older cryptographic material so it can be used to decrypt data that it has encrypted.&lt;/p>
&lt;/div>
&lt;/details>
&lt;h3 id="10-1">10&lt;/h3>
&lt;p>&lt;strong>Alan is managing an environment with regulation and compliance requirements that mandate encryption at rest and in transit. The environment covers multiple accounts (Management, Development, and Production) and at some point in time, Alan might need to move encrypted snapshots and AMIs with encrypted volumes across accounts.&lt;/strong>&lt;/p>
&lt;p>&lt;strong>Which statements are true with regard to this scenario? (Choose 2 answers)&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>Create Master keys in management account and assign Development and Production accounts as users of these keys, then any media encrypted using these keys can be shared between the three accounts.&lt;/li>
&lt;li>Can share AMIs with encrypted volumes across accounts, even with the use of custom encryption keys.&lt;/li>
&lt;li>Make encryption keys for development and production accounts then anything encrypted using these keys can be moved across accounts.&lt;/li>
&lt;li>You can not move encrypted snapshots across accounts if data migration is required some third-party tools must be used.&lt;/li>
&lt;/ol>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;p>&lt;a href="https://docs.aws.amazon.com/kms/latest/developerguide/overview.html">https://docs.aws.amazon.com/kms/latest/developerguide/overview.html&lt;/a>&lt;/p>
&lt;p>&lt;mark style="color:white">1, 2&lt;/mark>&lt;/p>
&lt;/div>
&lt;/details>
&lt;h2 id="q31---q40">Q31 - Q40&lt;/h2>
&lt;h3 id="1-2">1&lt;/h3>
&lt;p>&lt;strong>When working with a published version of the &lt;a href="../lambda">AWS Lambda&lt;/a> function, you should note that the _____.&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>Use the &lt;a href="../https://aws.amazon.com/console/">AWS Management Console&lt;/a> to create and configure the cluster.&lt;/li>
&lt;li>Create a cron job to schedule the cluster deployment using the &lt;code>_aws cloudformation deploy_&lt;/code> command&lt;/li>
&lt;li>Create a configuration file with the .config extension and place it into the .ebextensions folder in the application package.&lt;/li>
&lt;li>Build an &lt;a href="../lambda">AWS Lambda&lt;/a> function that polls to the ElasticBeanstalk environment deployments and create and configure the &lt;a href="../elasticache">Amazon ElastiCache&lt;/a> cluster.&lt;/li>
&lt;/ol>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;p>&lt;a href="https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/environment-resources.html">AWS Secrets Manager&lt;/a>&lt;/p>
&lt;p>&lt;mark style="color:white">3&lt;/mark>&lt;/p>
&lt;/div>
&lt;/details>
&lt;h3 id="2-2">2&lt;/h3>
&lt;p>&lt;strong>A Developer wants access to the log data of an application running on an &lt;a href="../ec2">EC2&lt;/a> instance available to systems administrators.&lt;/strong>&lt;/p>
&lt;p>&lt;strong>Which of the following enables monitoring of the metric in &lt;a href="../cloudwatch">Amazon CloudWatch&lt;/a>?&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>Retrieve the log data from AWS CloudTrail using the LookupEvents API Call&lt;/li>
&lt;li>Retrieve the log data from &lt;a href="../cloudwatch">CloudWatch&lt;/a> using the GetMetricData API call&lt;/li>
&lt;li>Launch a new &lt;a href="../ec2">EC2&lt;/a> instance, configure &lt;a href="../cloudwatch">Amazon CloudWatch&lt;/a> Events, and then install the application&lt;/li>
&lt;li>Install the &lt;a href="../cloudwatch">Amazon CloudWatch&lt;/a> logs agent on the &lt;a href="../ec2">EC2&lt;/a> instance that the application is running on&lt;/li>
&lt;/ol>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;p>&lt;mark style="color:white">4&lt;/mark>&lt;/p>
&lt;/div>
&lt;/details>
&lt;h3 id="3-2">3&lt;/h3>
&lt;p>&lt;strong>A developer is building a streamlined development process for Lambda functions related to S3 storage. The developer needs a consistent, reusable code blueprint that can be easily customized to manage &lt;a href="../lambda">Lambda function&lt;/a> definition and deployment, the S3 events to be managed and the Identity Access Management (IAM) policies definition.&lt;/strong>&lt;/p>
&lt;p>&lt;strong>Which of the following AWS solutions offers is best suited for this objective?&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>&lt;a href="https://aws.amazon.com/developer/tools/">AWS Software Development Kits (SDKs)&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://aws.amazon.com/serverless/sam/">AWS Serverless Application Model (SAM)&lt;/a> templates&lt;/li>
&lt;li>&lt;a href="https://aws.amazon.com/systems-manager/">AWS Systems Manager&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://romankurnovskii.com/en/tags/step-functions/">AWS Step Functions&lt;/a>&lt;/li>
&lt;/ol>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;p>&lt;a href="https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/what-is-sam.html">Serverless Application Model&lt;/a>&lt;/p>
&lt;p>&lt;mark style="color:white">2&lt;/mark>&lt;/p>
&lt;/div>
&lt;/details>
&lt;h3 id="4-2">4&lt;/h3>
&lt;p>&lt;strong>Explain RDS Multi Availability Zone&lt;/strong>&lt;/p>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;ul>
&lt;li>RDS multi AZ used mainly for disaster recovery purposes&lt;/li>
&lt;li>There is an RDS master instance and in another AZ an RDS standby instance&lt;/li>
&lt;li>The data is synced synchronously between them&lt;/li>
&lt;li>The user, application is accessing one DNS name and where there is a failure with the master instance, the DNS name moves to the standby instance, so the failover done automatically&lt;/li>
&lt;/ul>
&lt;/div>
&lt;/details>
&lt;h3 id="5-2">5&lt;/h3>
&lt;p>&lt;strong>Developer wants to implement a more fine-grained control of developers S3 buckets by restricting access to S3 buckets on a case-by-case basis using S3 bucket policies.&lt;/strong>&lt;/p>
&lt;p>&lt;strong>Which methods of access control can developer implement using S3 bucket policies? (Choose 3 answers)&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>Control access based on the time of day&lt;/li>
&lt;li>Control access based on IP Address&lt;/li>
&lt;li>Control access based on Active Directory group&lt;/li>
&lt;li>Control access based on CIDR block&lt;/li>
&lt;/ol>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-iam-policies.html
&lt;p>CIDRs - A set of Classless Inter-Domain Routings&lt;/p>
&lt;p>&lt;a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/access-control-block-public-access.html">https://docs.aws.amazon.com/AmazonS3/latest/userguide/access-control-block-public-access.html&lt;/a>&lt;/p>
&lt;p>&lt;mark style="color:white">1, 2, 4&lt;/mark>&lt;/p>
&lt;/div>
&lt;/details>
&lt;h3 id="6-2">6&lt;/h3>
&lt;p>&lt;strong>To ensure that an encryption key was not corrupted in transit, &lt;abbr title="Amazon Elastic Transcoder is media transcoding in the cloud. It is designed to be a highly scalable, easy to use and a cost effective way for developers and businesses to convert (or “transcode”) media files from their source format into versions that will playback on devices like smartphones, tablets and PCs.">Elastic Transcoder&lt;/abbr> uses a(n) ____ digest of the decryption key as a checksum.&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>BLAKE2&lt;/li>
&lt;li>SHA-1&lt;/li>
&lt;li>SHA-2&lt;/li>
&lt;li>MD5&lt;/li>
&lt;/ol>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;p>&lt;a href="https://docs.aws.amazon.com/elastictranscoder/latest/developerguide/job-settings.html">https://docs.aws.amazon.com/elastictranscoder/latest/developerguide/job-settings.html&lt;/a>&lt;/p>
&lt;p>MD5 digest (or checksum)&lt;/p>
&lt;p>&lt;mark style="color:white">4&lt;/mark>&lt;/p>
&lt;/div>
&lt;/details>
&lt;h3 id="7-2">7&lt;/h3>
&lt;p>&lt;strong>Dan is responsible for supporting your company’s AWS infrastructure, consisting of multiple &lt;a href="../ec2">EC2&lt;/a> instances running in a VPC, DynamoDB, SQS, and S3. You are working on provisioning a new S3 bucket, which will ultimately contain sensitive data.&lt;/strong>&lt;/p>
&lt;p>&lt;strong>What are two separate ways to ensure data is encrypted in-flight both into and out of S3? (Choose 2 answers)&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>Use the encrypted SSL/TLS endpoint.&lt;/li>
&lt;li>Enable encryption in the bucket policy.&lt;/li>
&lt;li>Encrypt it on the client-side before uploading.&lt;/li>
&lt;li>Set the server-side encryption option on upload.&lt;/li>
&lt;/ol>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;p>&lt;a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/UsingEncryption.html">https://docs.aws.amazon.com/AmazonS3/latest/userguide/UsingEncryption.html&lt;/a>&lt;/p>
&lt;p>&lt;mark style="color:white">1, 3&lt;/mark>&lt;/p>
&lt;/div>
&lt;/details>
&lt;h3 id="8-2">8&lt;/h3>
&lt;p>&lt;strong>In a move toward using microservices, a company’s Management team has asked all Development teams to build their services so that API requests depend only on that services data store. One team is building a Payments service that has its own database. The service floods data that originates in the Accounts database. Both are using Amazon DynamoDB.&lt;/strong>&lt;/p>
&lt;p>&lt;strong>What approach will result in the simplest, decoupled, and reliable method to get near-real-time updates from the Accounts database?&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>Use &lt;a href="https://aws.amazon.com/glue/">Amazon Glue&lt;/a> to perform frequent updates from the Accounts database to the Payments database&lt;/li>
&lt;li>Use &lt;a href="../kinesis/#kinesis-data-firehose">Amazon Kinesis Data Firehose&lt;/a> to deliver all changes from the Accounts database to the Payments database.&lt;/li>
&lt;li>Use &lt;a href="https://aws.amazon.com/blogs/database/dynamodb-streams-use-cases-and-design-patterns/">Amazon DynamoDB Streams&lt;/a> to deliver all changes from the Accounts database to the Payments database.&lt;/li>
&lt;li>Use &lt;a href="../elasticache">Amazon ElastiCache&lt;/a> in Payments, with the cache updated by triggers in the Accounts database.&lt;/li>
&lt;/ol>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;p>&lt;mark style="color:white">3&lt;/mark>&lt;/p>
&lt;/div>
&lt;/details>
&lt;h3 id="9-2">9&lt;/h3>
&lt;p>&lt;strong>You’ve decided to use autoscaling in conjunction with &lt;a href="../sns">SNS&lt;/a> to alert you when your auto-scaling group scales. Notifications can be delivered using &lt;a href="../sns">SNS&lt;/a> in several ways.&lt;/strong>&lt;/p>
&lt;p>&lt;strong>Which options are supported notification methods? (Choose 3 answers)&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>HTTP or HTTPS POST notifications&lt;/li>
&lt;li>Email using SMTP or plain text&lt;/li>
&lt;li>Kinesis Stream&lt;/li>
&lt;li>Invoking of a Lambda function&lt;/li>
&lt;/ol>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;p>&lt;a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-sns-notifications.html">https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-sns-notifications.html&lt;/a>&lt;/p>
&lt;p>&lt;mark style="color:white">1, 2, 4&lt;/mark>&lt;/p>
&lt;/div>
&lt;/details>
&lt;h3 id="10-2">10&lt;/h3>
&lt;p>&lt;strong>Which endpoint is considered to be best practice when analyzing data within a Configuration Stream of &lt;a href="https://aws.amazon.com/config/">AWS Config&lt;/a>?&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>&lt;a href="../sns">SNS&lt;/a>&lt;/li>
&lt;li>E-Mail&lt;/li>
&lt;li>&lt;a href="../sqs">SQS&lt;/a>&lt;/li>
&lt;li>&lt;a href="../kinesis">Kinesis&lt;/a>&lt;/li>
&lt;/ol>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;p>&lt;a href="https://docs.aws.amazon.com/config/latest/developerguide/monitor-resource-changes.html">https://docs.aws.amazon.com/config/latest/developerguide/monitor-resource-changes.html&lt;/a>&lt;/p>
&lt;p>&lt;mark style="color:white">3&lt;/mark>&lt;/p>
&lt;/div>
&lt;/details>
&lt;h2 id="q41---q50">Q41 - Q50&lt;/h2>
&lt;h3 id="1-3">1&lt;/h3>
&lt;p>&lt;strong>A developer is adding a feedback form to a website. Upon user submission, the form should create a discount code, email the user the code and display a message on the website that tells the user to check their email. The developer wants to use separate &lt;a href="../lambda">Lambda&lt;/a> functions to manage these processes and use a Step Function to orchestrate the interactions with minimal custom scripting.&lt;/strong>&lt;/p>
&lt;p>&lt;strong>Which of the following Step Function workflows can be used to meet requirements?&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>&lt;a href="https://docs.aws.amazon.com/step-functions/latest/dg/concepts-express-synchronous.html">Asynchronous Express Workflow&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.aws.amazon.com/step-functions/latest/dg/concepts-express-synchronous.html">Synchronous Express Workflow&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.aws.amazon.com/step-functions/latest/dg/concepts-standard-vs-express.html">Standard Workflow&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.aws.amazon.com/step-functions/latest/dg/concepts-standard-vs-express.html">Standard Express Workflow&lt;/a>&lt;/li>
&lt;/ol>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;p>&lt;a href="https://aws.amazon.com/blogs/compute/new-synchronous-express-workflows-for-aws-step-functions/">https://aws.amazon.com/blogs/compute/new-synchronous-express-workflows-for-aws-step-functions/&lt;/a>&lt;/p>
&lt;p>&lt;mark style="color:white">2&lt;/mark>&lt;/p>
&lt;/div>
&lt;/details>
&lt;h3 id="2-3">2&lt;/h3>
&lt;p>&lt;strong>You joined an application monitoring team. Your role focuses on finding system performance and bottlenecks in Lambda functions and providing specific solutions. Another teammate focuses on auditing the systems.&lt;/strong>&lt;/p>
&lt;p>&lt;strong>Which AWS service will be your main tool?&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>&lt;a href="../xray">AWS X-Ray&lt;/a>&lt;/li>
&lt;li>&lt;a href="../iam">AWS IAM&lt;/a>&lt;/li>
&lt;li>AWS CloudTrail&lt;/li>
&lt;li>&lt;a href="https://aws.amazon.com/athena/">AWS Athena&lt;/a>&lt;/li>
&lt;/ol>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;p>&lt;a href="../xray">AWS X-Ray&lt;/a> provides graphs of system performance and identifies bottlenecks&lt;/p>
&lt;p>&lt;mark style="color:white">1&lt;/mark>&lt;/p>
&lt;/div>
&lt;/details>
&lt;h3 id="3-3">3&lt;/h3>
&lt;p>&lt;strong>A team of Developers must migrate an application running inside an &lt;a href="../elasticbeanstalk">AWS Elastic Beastalk&lt;/a> environment from a &lt;a href="../elasticloadbalancing/#types-of-load-balancers">Classic Load Balancer&lt;/a> to an &lt;a href="../elasticloadbalancing/#types-of-load-balancers">Application Load Balancer&lt;/a>.&lt;/strong>&lt;/p>
&lt;p>&lt;strong>Which steps should be taken to accomplish the task using the &lt;a href="https://aws.amazon.com/console/">AWS Management Console&lt;/a>?&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>1
&lt;ol>
&lt;li>Select a new load balancer type before running the deployment.&lt;/li>
&lt;li>Update the application code in the existing deployment.&lt;/li>
&lt;li>Deploy the new version of the application code to the environment.&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>2
&lt;ol>
&lt;li>Create a new environment with the same configurations except for the load balancer type.&lt;/li>
&lt;li>Deploy the same application versions as used in the original environment.&lt;/li>
&lt;li>Run the Swap-environment-cnames action.&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>3
&lt;ol>
&lt;li>Clone the existing environment, changing the associated load balancer type.&lt;/li>
&lt;li>Deploy the same application version as used in the original environment.&lt;/li>
&lt;li>Run the Swap-environment-cnames action.&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>4
&lt;ol>
&lt;li>Edit the environment definitions in the existing deployment.&lt;/li>
&lt;li>Change the associated load balancer type according to the requirements.&lt;/li>
&lt;li>Rebuild the environment with the new load balancer type.&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ul>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;p>&lt;mark style="color:white">4&lt;/mark>&lt;/p>
&lt;/div>
&lt;/details>
&lt;h3 id="4-3">4&lt;/h3>
&lt;p>&lt;strong>A developer is deploying an application that will store files in an Amazon S3 bucket. The files must be encrypted at rest. The developer wants to automatically replicate the files to an S3 bucket in a different AWS Region for disaster recovery.&lt;/strong>&lt;/p>
&lt;p>&lt;strong>How can the developer accomplish this task with the LEAST amount of configuration?&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>Encrypt the files by using server-side encryption with S3 managed encryption keys (SSE-S3). Enable S3 bucket replication.&lt;/li>
&lt;li>Encrypt the files by using server-side encryption (SSE) with an AWS Key Management Service (AWS KMS) customer master key (CMK). Enable S3 bucket replication.&lt;/li>
&lt;li>Use the s3 sync command to sync the files to the S3 bucket in the other Region.&lt;/li>
&lt;li>Configure an S3 Lifecycle configuration to automatically transfer files to the S3 bucket in the other Region.&lt;/li>
&lt;/ol>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;p>&lt;mark style="color:white">2&lt;/mark>&lt;/p>
&lt;/div>
&lt;/details>
&lt;h3 id="5-3">5&lt;/h3>
&lt;p>&lt;strong>A serverless application is using AWS Step Functions to process data and save it to a database. The application needs to validate some data with an external service before saving the dat1. The application will call the external service from an AWS Lambda function, and the external service will take a few hours to validate the dat1. The external service will respond to a webhook when the validation is complete.&lt;/strong>&lt;/p>
&lt;p>&lt;strong>A developer needs to pause the Step Functions workflow and wait for the response from the external service.&lt;/strong>&lt;/p>
&lt;p>&lt;strong>What should the developer do to meet this requirement?&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>Use the &lt;code>.waitForTaskToken&lt;/code> option in the Lambda function task state. Pass the token in the body.&lt;/li>
&lt;li>Use the &lt;code>.waitForTaskToken&lt;/code> option in the Lambda function task state. Pass the invocation request.&lt;/li>
&lt;li>Call the Lambda function in synchronous mode. Wait for the external service to complete the processing.&lt;/li>
&lt;li>Call the Lambda function in asynchronous mode. Use the Wait state until the external service completes the processing.&lt;/li>
&lt;/ol>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;p>&lt;mark style="color:white">4&lt;/mark>&lt;/p>
&lt;/div>
&lt;/details>
&lt;h3 id="6-3">6&lt;/h3>
&lt;p>&lt;strong>A company has an application that writes files to an Amazon S3 bucket. Whenever there is a new file, an S3 notification event invokes an AWS Lambda function to process the file. The Lambda function code works as expected. However, when a developer checks the Lambda function logs, the developer finds that multiple invocations occur for every file.&lt;/strong>&lt;/p>
&lt;p>&lt;strong>What is causing the duplicate entries?&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>The S3 bucket name is incorrectly specified in the application and is targeting another S3 bucket.&lt;/li>
&lt;li>The Lambda function did not run correctly, and Lambda retried the invocation with a delay.&lt;/li>
&lt;li>Amazon S3 is delivering the same event multiple times.&lt;/li>
&lt;li>The application stopped intermittently and then resumed, splitting the logs into multiple smaller files.&lt;/li>
&lt;/ol>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;p>&lt;mark style="color:white">1&lt;/mark>&lt;/p>
&lt;/div>
&lt;/details>
&lt;h3 id="7-3">7&lt;/h3>
&lt;p>&lt;strong>An AWS Lambda function accesses two Amazon DynamoDB tables. A developer wants to improve the performance of the Lambda function by identifying bottlenecks in the function.&lt;/strong>&lt;/p>
&lt;p>&lt;strong>How can the developer inspect the timing of the DynamoDB API calls?&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>Add DynamoDB as an event source to the Lambda function. View the performance with Amazon CloudWatch metrics&lt;/li>
&lt;li>Place an Application Load Balancer (ALB) in front of the two DynamoDB tables. Inspect the ALB logs&lt;/li>
&lt;li>Limit Lambda to no more than five concurrent invocations. Monitor from the Lambda console.&lt;/li>
&lt;li>Enable AWS X-Ray tracing for the function. View the traces from the X-Ray service.&lt;/li>
&lt;/ol>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;p>&lt;mark style="color:white">4&lt;/mark>&lt;/p>
&lt;/div>
&lt;/details>
&lt;h3 id="8-3">8&lt;/h3>
&lt;p>&lt;strong>A developer deployed an application to an Amazon EC2 instance. The application needs to know the public IPv4 address of the instance.&lt;/strong>
&lt;strong>How can the application find this information?&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>Query the instance metadata from &lt;a href="http://169.254.169.254/latest/meta-data/">http://169.254.169.254/latest/meta-data/&lt;/a>.&lt;/li>
&lt;li>Query the instance user data from &lt;a href="http://169.254.169.254/latest/user-data/">http://169.254.169.254/latest/user-data/&lt;/a>.&lt;/li>
&lt;li>Query the Amazon Machine Image (AMI) information from &lt;a href="http://169.254">http://169.254&lt;/a> 169.254/latest/meta-data/ami/.&lt;/li>
&lt;li>Check the hosts file of the operating system.&lt;/li>
&lt;/ol>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;p>&lt;mark style="color:white">1&lt;/mark>&lt;/p>
&lt;/div>
&lt;/details>
&lt;h3 id="9-3">9&lt;/h3>
&lt;p>&lt;strong>A developer is creating a serverless application that uses an AWS Lambda function The developer will use AWS CloudFormation to deploy the application. The application will write logs to Amazon CloudWatch Logs. The developer has created a log group in a CloudFormation template for the application to use. The developer needs to modify the CloudFormation template to make the name of the log group available to the application at runtime.&lt;/strong>&lt;/p>
&lt;p>&lt;strong>Which solution will meet this requirement?&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>Use the &lt;code>AWS::Include&lt;/code> transform in CloudFormation to provide the log group&amp;rsquo;s name to the application.&lt;/li>
&lt;li>Pass the log group&amp;rsquo;s name to the application in the user data section of the CloudFormation template&lt;/li>
&lt;li>Use the CloudFormation template&amp;rsquo;s Mappings section to specify the log group&amp;rsquo;s name for the application.&lt;/li>
&lt;li>Pass the log group&amp;rsquo;s Amazon Resource Name (ARN) as an environment variable to the Lambda function.&lt;/li>
&lt;/ol>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;p>&lt;mark style="color:white">4&lt;/mark>&lt;/p>
&lt;/div>
&lt;/details>
&lt;h3 id="10-3">10&lt;/h3>
&lt;p>&lt;strong>A developer needs to use the AWS CLI on an on-premises development server temporarily to access AWS services while performing maintenance. The developer needs to authenticate to AWS with their identity for several hours.&lt;/strong>&lt;/p>
&lt;p>&lt;strong>What is the MOST secure way to call AWS CLI commands with the developer&amp;rsquo;s IAM identity?&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>Specify the developer&amp;rsquo;s IAM access key ID and secret access key as parameters for each CLI command.&lt;/li>
&lt;li>Run the AWS configure CLI command. Provide the developer&amp;rsquo;s IAM access key ID and secret access key.&lt;/li>
&lt;li>Specify the developer&amp;rsquo;s IAM profile as a parameter for each CLI command.&lt;/li>
&lt;li>Run the get-session-token CLI command with the developer&amp;rsquo;s IAM user. Use the returned credentials to call the CLI.&lt;/li>
&lt;/ol>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;p>&lt;mark style="color:white">4&lt;/mark>&lt;/p>
&lt;/div>
&lt;/details>
&lt;h2 id="q51---q60">Q51 - Q60&lt;/h2>
&lt;h3 id="6-4">6&lt;/h3>
&lt;p>&lt;strong>A developer notices timeouts from the AWS CLI when the developer runs list commands.&lt;/strong>&lt;/p>
&lt;p>&lt;strong>What should the developer do to avoid these timeouts?&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>Use the &lt;code>--page-size&lt;/code> parameter to request a smaller number of items.&lt;/li>
&lt;li>Use shorthand syntax to separate the list by a single space.&lt;/li>
&lt;li>Use the yaml-stream output for faster viewing of large datasets.&lt;/li>
&lt;li>Use quotation marks around strings to enclose data structure.&lt;/li>
&lt;/ol>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;p>&lt;mark style="color:white">1&lt;/mark>&lt;/p>
&lt;/div>
&lt;/details>
&lt;h3 id="7-4">7&lt;/h3>
&lt;p>&lt;strong>A company is planning to use AWS CodeDeploy to deploy an application to Amazon Elastic Container Service (Amazon ECS). During the deployment of a new version of the application, the company initially must expose only 10% of live traffic to the new version of the deployed application. Then, after 15 minutes elapse, the company must route all the remaining live traffic to the new version of the deployed application.&lt;/strong>&lt;/p>
&lt;p>&lt;strong>Which CodeDeploy predefined configuration will meet these requirements?&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>CodeDeployDefault.ECSCanary10Percent15Minutes&lt;/li>
&lt;li>CodeDeployDefault.LambdaCanary10Percent5Minutes&lt;/li>
&lt;li>CodeDeployDefault.LambdaCanary10Percent15Minutes&lt;/li>
&lt;li>CodeDeployDefault.ECSLinear10PercentEvery1 Minutes&lt;/li>
&lt;/ol>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;p>&lt;mark style="color:white">1&lt;/mark>&lt;/p>
&lt;/div>
&lt;/details>
&lt;h3 id="8-4">8&lt;/h3>
&lt;hr>
&lt;hr>
&lt;ol>
&lt;li>&lt;/li>
&lt;/ol>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;p>&lt;mark style="color:white">&lt;/mark>&lt;/p>
&lt;/div>
&lt;/details>
&lt;h3 id="9-4">9&lt;/h3>
&lt;p>&lt;strong>A microservices application is deployed across multiple containers in Amazon Elastic Container Service (Amazon ECS). To improve performance, a developer wants to capture trace information between the microservices and visualize the microservices architecture.&lt;/strong>&lt;/p>
&lt;p>&lt;strong>Which solution will meet these requirements?&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>Build the container from the amazon/aws-xray-daemon base image. Use the AWS X-Ray SDK to instrument the application.&lt;/li>
&lt;li>Install the Amazon CloudWatch agent on the container image. Use the CloudWatch SDK to publish custom metrics from each of the microservices.&lt;/li>
&lt;li>Install the AWS X-Ray daemon on each of the ECS instances.&lt;/li>
&lt;li>Configure AWS CloudTrail data events to capture the traffic between the microservices.&lt;/li>
&lt;/ol>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;p>&lt;mark style="color:white">3&lt;/mark>&lt;/p>
&lt;/div>
&lt;/details>
&lt;h3 id="10-4">10&lt;/h3>
&lt;p>&lt;strong>A company is running an application on Amazon Elastic Container Service (Amazon ECS). When the company deploys a new version of the application, the company initially needs to expose 10% of live traffic to the new version. After a period of time, the company needs to immediately route all the remaining live traffic to the new version.&lt;/strong>&lt;/p>
&lt;p>&lt;strong>Which ECS deployment should the company use to meet these requirements?&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>Rolling update&lt;/li>
&lt;li>Blue/green with canary&lt;/li>
&lt;li>Blue/green with all at once&lt;/li>
&lt;li>Blue/green with linear&lt;/li>
&lt;/ol>
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;p>&lt;mark style="color:white">2&lt;/mark>&lt;/p>
&lt;/div>
&lt;/details>
&lt;!--
https://main.d33tdgi01iojga.amplifyapp.com/addQuestion
### 1
****
****
1.
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;mark style="color:white">&lt;/mark>
&lt;/div>
&lt;/details>
### 2
****
****
1.
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;mark style="color:white">&lt;/mark>
&lt;/div>
&lt;/details>
### 3
****
****
1.
&lt;details>
&lt;summary>Explanation&lt;/summary>
&lt;div>
&lt;mark style="color:white">&lt;/mark>
&lt;/div>
&lt;/details>
--></description></item></channel></rss>