<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Codeforces on Roman Kurnovskii</title><link>https://romankurnovskii.com/en/tracks/algorithms-101/codeforces/</link><description>Recent content in Codeforces on Roman Kurnovskii</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>&amp;copy; 2023 Personal page</copyright><lastBuildDate>Fri, 03 Feb 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://romankurnovskii.com/en/tracks/algorithms-101/codeforces/index.xml" rel="self" type="application/rss+xml"/><item><title>Python template for contests</title><link>https://romankurnovskii.com/en/tracks/algorithms-101/codeforces/cp-template/</link><pubDate>Tue, 07 Feb 2023 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/algorithms-101/codeforces/cp-template/</guid><description>import math import os import sys import time from collections import defaultdict, Counter INF = sys.maxsize # ------ INPUTS inp = lambda: sys.stdin.readline().strip().rstrip(&amp;#34;\r\n&amp;#34;) #read line as string. Ex: input 1 2 3 =&amp;gt; &amp;#39;1 2 3&amp;#39; inpi = lambda: int(inp()) #read input as integer. input 1 =&amp;gt; 1 inpl = lambda: list(map(int, inp().split())) #read line as list of integers. Ex: [1, 2, 3] inp_strl = lambda: list(inp().split()) #read line as list of strings. Ex: [&amp;#39;1&amp;#39;, &amp;#39;2&amp;#39;, &amp;#39;3&amp;#39;] list_to_string = lambda _v: &amp;#34;&amp;#34;.</description></item><item><title>Round #849/1791 (Div. 4)</title><link>https://romankurnovskii.com/en/tracks/algorithms-101/codeforces/849-div-4-1791/</link><pubDate>Fri, 03 Feb 2023 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/algorithms-101/codeforces/849-div-4-1791/</guid><description>Contest date: 2023-02-03
Contest problems Editorial A. Codeforces Checking https://codeforces.com/contest/1791/problem/A
Solution:
def solve(letter): code = &amp;#34;codeforces&amp;#34; if letter in code: print(&amp;#34;YES&amp;#34;) else: print(&amp;#34;NO&amp;#34;) for _ in range(int(input())): letter = input() solve(letter) B. Following Directions https://codeforces.com/contest/1791/problem/B
geometry, implementation, *800
Solution:
def solve(n, s): x = 0 y = 0 for move in s: if move == &amp;#39;L&amp;#39;: x -= 1 elif move == &amp;#39;R&amp;#39;: x += 1 elif move == &amp;#39;U&amp;#39;: y += 1 elif move == &amp;#39;D&amp;#39;: y -= 1 if x == 1 and y == 1: print(&amp;#34;YES&amp;#34;) break else: print(&amp;#34;NO&amp;#34;) for _ in range(int(input())): # attempts num = int(input()) letter = input() solve(num, letter) C.</description></item><item><title>Round #835/1760 (Div. 4)</title><link>https://romankurnovskii.com/en/tracks/algorithms-101/codeforces/835-div-4-1760/</link><pubDate>Mon, 21 Nov 2022 00:00:00 +0000</pubDate><guid>https://romankurnovskii.com/en/tracks/algorithms-101/codeforces/835-div-4-1760/</guid><description>Contest date: 2023-02-
Contest problems Editorial A. Medium Number https://codeforces.com/contest/1760/problem/A
Solution:
B. Atilla&amp;rsquo;s Favorite Problem https://codeforces.com/contest/1760/problem/B
Solution:
C. Advantage https://codeforces.com/contest/1760/problem/C
Solution:
D. Challenging Valleys https://codeforces.com/contest/1760/problem/D
Solution:
E. Binary Inversions https://codeforces.com/contest/1760/problem/E
Solution:
F. Quests https://codeforces.com/contest/1760/problem/F
Slow Solution:
Good to know
G. SlavicG&amp;rsquo;s Favorite Problem https://codeforces.com/contest/1760/problem/G1</description></item></channel></rss>